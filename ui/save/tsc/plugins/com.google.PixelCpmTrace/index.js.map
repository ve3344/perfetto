{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/plugins/com.google.PixelCpmTrace/index.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAEjC,qFAAoF;AAGpF,0DAA4D;AAC5D,sDAAiD;AACjD,qEAA4D;AAE5D;IACE,MAAM,CAAU,EAAE,GAAG,0BAA0B,CAAC;IAEhD,KAAK,CAAC,WAAW,CAAC,GAAU;QAC1B,MAAM,KAAK,GAAG,IAAI,qBAAS,CAAC;YAC1B,KAAK,EAAE,uBAAuB;YAC9B,SAAS,EAAE,IAAI;SAChB,CAAC,CAAC;QAEH,MAAM,EAAC,MAAM,EAAC,GAAG,GAAG,CAAC;QACrB,MAAM,MAAM,GAAG,MAAM,MAAM,CAAC,KAAK,CAAC;;;;;;;KAOjC,CAAC,CAAC;QAEH,MAAM,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,EAAC,OAAO,EAAE,kBAAG,EAAE,SAAS,EAAE,kBAAG,EAAC,CAAC,CAAC;QACvD,KAAK,IAAI,UAAU,GAAG,KAAK,EAAE,EAAE,CAAC,KAAK,EAAE,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC;YACnD,MAAM,EAAC,OAAO,EAAE,SAAS,EAAC,GAAG,EAAE,CAAC;YAChC,MAAM,GAAG,GAAG,cAAc,SAAS,EAAE,CAAC;YACtC,MAAM,KAAK,GAAG,MAAM,IAAA,6CAAuB,EAAC;gBAC1C,KAAK,EAAE,GAAG;gBACV,GAAG;gBACH,IAAI,EAAE;oBACJ,SAAS,EAAE;;;gCAGW,OAAO;YAC3B;oBACF,OAAO,EAAE,CAAC,IAAI,EAAE,OAAO,CAAC;iBACzB;gBACD,OAAO,EAAE,EAAC,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAC;aACpC,CAAC,CAAC;YACH,GAAG,CAAC,MAAM,CAAC,aAAa,CAAC;gBACvB,GAAG;gBACH,KAAK,EAAE,SAAS;gBAChB,IAAI,EAAE;oBACJ,IAAI,EAAE,gCAAkB;oBACxB,QAAQ,EAAE,CAAC,OAAO,CAAC;iBACpB;gBACD,KAAK;aACN,CAAC,CAAC;YACH,KAAK,CAAC,eAAe,CAAC,IAAI,qBAAS,CAAC,EAAC,GAAG,EAAE,KAAK,EAAE,SAAS,EAAC,CAAC,CAAC,CAAC;YAC9D,IAAI,CAAC,UAAU,EAAE,CAAC;gBAChB,GAAG,CAAC,SAAS,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;gBACrC,UAAU,GAAG,IAAI,CAAC;YACpB,CAAC;QACH,CAAC;IACH,CAAC;;AAnDH,4BAoDC","sourcesContent":["// Copyright (C) 2024 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {createQueryCounterTrack} from '../../components/tracks/query_counter_track';\nimport {PerfettoPlugin} from '../../public/plugin';\nimport {Trace} from '../../public/trace';\nimport {COUNTER_TRACK_KIND} from '../../public/track_kinds';\nimport {TrackNode} from '../../public/workspace';\nimport {NUM, STR} from '../../trace_processor/query_result';\n\nexport default class implements PerfettoPlugin {\n  static readonly id = 'com.google.PixelCpmTrace';\n\n  async onTraceLoad(ctx: Trace): Promise<void> {\n    const group = new TrackNode({\n      title: 'Central Power Manager',\n      isSummary: true,\n    });\n\n    const {engine} = ctx;\n    const result = await engine.query(`\n      select\n        id AS trackId,\n        extract_arg(dimension_arg_set_id, 'name') AS trackName\n      FROM track\n      WHERE classification = 'pixel_cpm_trace'\n      ORDER BY trackName\n    `);\n\n    const it = result.iter({trackId: NUM, trackName: STR});\n    for (let groupAdded = false; it.valid(); it.next()) {\n      const {trackId, trackName} = it;\n      const uri = `/cpm_trace_${trackName}`;\n      const track = await createQueryCounterTrack({\n        trace: ctx,\n        uri,\n        data: {\n          sqlSource: `\n             select ts, value\n             from counter\n             where track_id = ${trackId}\n           `,\n          columns: ['ts', 'value'],\n        },\n        columns: {ts: 'ts', value: 'value'},\n      });\n      ctx.tracks.registerTrack({\n        uri,\n        title: trackName,\n        tags: {\n          kind: COUNTER_TRACK_KIND,\n          trackIds: [trackId],\n        },\n        track,\n      });\n      group.addChildInOrder(new TrackNode({uri, title: trackName}));\n      if (!groupAdded) {\n        ctx.workspace.addChildInOrder(group);\n        groupAdded = true;\n      }\n    }\n  }\n}\n"]}