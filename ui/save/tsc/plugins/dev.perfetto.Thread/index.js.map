{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/plugins/dev.perfetto.Thread/index.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAKjC,qEAAgF;AAChF,gDAAgD;AAEhD,KAAK,UAAU,WAAW,CAAC,KAAY;IACrC,MAAM,KAAK,GAAG;;;;;;;;;;;oBAWI,CAAC;IACnB,MAAM,MAAM,GAAG,MAAM,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAC/C,MAAM,OAAO,GAAG,IAAI,GAAG,EAAsB,CAAC;IAC9C,MAAM,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC;QACrB,IAAI,EAAE,kBAAG;QACT,GAAG,EAAE,kBAAG;QACR,GAAG,EAAE,uBAAQ;QACb,UAAU,EAAE,kBAAG;QACf,QAAQ,EAAE,uBAAQ;QAClB,OAAO,EAAE,uBAAQ;KAClB,CAAC,CAAC;IACH,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC;QAC7B,MAAM,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC;QACrB,MAAM,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC;QACnB,MAAM,GAAG,GAAG,EAAE,CAAC,GAAG,KAAK,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC;QACjD,MAAM,UAAU,GAAG,EAAE,CAAC,UAAU,CAAC;QACjC,MAAM,QAAQ,GAAG,EAAE,CAAC,QAAQ,KAAK,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC;QAChE,MAAM,OAAO,GAAG,EAAE,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC;QAC7D,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,EAAC,IAAI,EAAE,GAAG,EAAE,UAAU,EAAE,GAAG,EAAE,QAAQ,EAAE,OAAO,EAAC,CAAC,CAAC;IACrE,CAAC;IACD,OAAO,OAAO,CAAC;AACjB,CAAC;AAED;IACE,MAAM,CAAU,EAAE,GAAG,qBAAqB,CAAC;IACnC,OAAO,CAAa;IAE5B,KAAK,CAAC,WAAW,CAAC,GAAU;QAC1B,IAAI,CAAC,OAAO,GAAG,MAAM,WAAW,CAAC,GAAG,CAAC,CAAC;IACxC,CAAC;IAED,YAAY;QACV,OAAO,IAAA,sBAAY,EAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACpC,CAAC;;AAVH,4BAWC","sourcesContent":["// Copyright (C) 2024 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Trace} from '../../public/trace';\nimport {PerfettoPlugin} from '../../public/plugin';\nimport {ThreadDesc, ThreadMap} from '../dev.perfetto.Thread/threads';\nimport {NUM, NUM_NULL, STR, STR_NULL} from '../../trace_processor/query_result';\nimport {assertExists} from '../../base/logging';\n\nasync function listThreads(trace: Trace) {\n  const query = `select\n        utid,\n        tid,\n        pid,\n        ifnull(thread.name, '') as threadName,\n        ifnull(\n          case when length(process.name) > 0 then process.name else null end,\n          thread.name) as procName,\n        process.cmdline as cmdline\n        from (select * from thread order by upid) as thread\n        left join (select * from process order by upid) as process\n        using(upid)`;\n  const result = await trace.engine.query(query);\n  const threads = new Map<number, ThreadDesc>();\n  const it = result.iter({\n    utid: NUM,\n    tid: NUM,\n    pid: NUM_NULL,\n    threadName: STR,\n    procName: STR_NULL,\n    cmdline: STR_NULL,\n  });\n  for (; it.valid(); it.next()) {\n    const utid = it.utid;\n    const tid = it.tid;\n    const pid = it.pid === null ? undefined : it.pid;\n    const threadName = it.threadName;\n    const procName = it.procName === null ? undefined : it.procName;\n    const cmdline = it.cmdline === null ? undefined : it.cmdline;\n    threads.set(utid, {utid, tid, threadName, pid, procName, cmdline});\n  }\n  return threads;\n}\n\nexport default class implements PerfettoPlugin {\n  static readonly id = 'dev.perfetto.Thread';\n  private threads?: ThreadMap;\n\n  async onTraceLoad(ctx: Trace) {\n    this.threads = await listThreads(ctx);\n  }\n\n  getThreadMap() {\n    return assertExists(this.threads);\n  }\n}\n"]}