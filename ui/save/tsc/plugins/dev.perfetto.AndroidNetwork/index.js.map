{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/plugins/dev.perfetto.AndroidNetwork/index.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2023 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Trace} from '../../public/trace';\nimport {PerfettoPlugin} from '../../public/plugin';\nimport {addDebugSliceTrack} from '../../components/tracks/debug_tracks';\n\nexport default class implements PerfettoPlugin {\n  static readonly id = 'dev.perfetto.AndroidNetwork';\n  // Adds a debug track using the provided query and given columns. The columns\n  // must be start with ts, dur, and a name column. The name column and all\n  // following columns are shown as arguments in slice details.\n  async addSimpleTrack(\n    ctx: Trace,\n    trackName: string,\n    tableOrQuery: string,\n    columns: string[],\n  ): Promise<void> {\n    await addDebugSliceTrack({\n      trace: ctx,\n      data: {\n        sqlSource: `SELECT ${columns.join(',')} FROM ${tableOrQuery}`,\n        columns: columns,\n      },\n      title: trackName,\n      columns: {ts: columns[0], dur: columns[1], name: columns[2]},\n      argColumns: columns.slice(2),\n    });\n  }\n\n  async onTraceLoad(ctx: Trace): Promise<void> {\n    ctx.commands.registerCommand({\n      id: 'dev.perfetto.AndroidNetwork#batteryEvents',\n      name: 'Add track: battery events',\n      callback: async (track) => {\n        if (track === undefined) {\n          track = prompt('Battery Track', '');\n          if (track === null) return;\n        }\n\n        await ctx.engine.query(`SELECT IMPORT('android.battery_stats');`);\n        await this.addSimpleTrack(\n          ctx,\n          track,\n          `(SELECT *\n            FROM android_battery_stats_event_slices\n            WHERE track_name = \"${track}\")`,\n          ['ts', 'dur', 'str_value', 'int_value'],\n        );\n      },\n    });\n\n    ctx.commands.registerCommand({\n      id: 'dev.perfetto.AndroidNetwork#activityTrack',\n      name: 'Add track: network activity',\n      callback: async (groupby, filter, trackName) => {\n        if (groupby === undefined) {\n          groupby = prompt('Group by', 'package_name');\n          if (groupby === null) return;\n        }\n\n        if (filter === undefined) {\n          filter = prompt('Filter', 'TRUE');\n          if (filter === null) return;\n        }\n\n        const suffix = new Date().getTime();\n        await ctx.engine.query(`\n          SELECT RUN_METRIC(\n            'android/network_activity_template.sql',\n            'view_name', 'android_network_activity_${suffix}',\n            'group_by',  '${groupby}',\n            'filter',    '${filter}',\n            'idle_ns',   '10e9',\n            'quant_ns',  '3e9'\n          );\n        `);\n\n        // The first group column is used for the slice name.\n        const groupCols = groupby.replaceAll(' ', '').split(',');\n        await this.addSimpleTrack(\n          ctx,\n          trackName ?? 'Network Activity',\n          `android_network_activity_${suffix}`,\n          ['ts', 'dur', ...groupCols, 'packet_length', 'packet_count'],\n        );\n      },\n    });\n  }\n}\n"]}