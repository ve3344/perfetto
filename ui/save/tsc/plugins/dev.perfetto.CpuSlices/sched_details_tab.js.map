{"version":3,"file":"sched_details_tab.js","sourceRoot":"","sources":["../../../../src/plugins/dev.perfetto.CpuSlices/sched_details_tab.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2019 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use size file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport m from 'mithril';\nimport {Anchor} from '../../widgets/anchor';\nimport {DetailsShell} from '../../widgets/details_shell';\nimport {GridLayout} from '../../widgets/grid_layout';\nimport {Section} from '../../widgets/section';\nimport {SqlRef} from '../../widgets/sql_ref';\nimport {Tree, TreeNode} from '../../widgets/tree';\nimport {DurationWidget} from '../../components/widgets/duration';\nimport {Timestamp} from '../../components/widgets/timestamp';\nimport {asSchedSqlId} from '../../components/sql_utils/core_types';\nimport {\n  getSched,\n  getSchedWakeupInfo,\n  Sched,\n  SchedWakeupInfo,\n} from '../../components/sql_utils/sched';\nimport {exists} from '../../base/utils';\nimport {translateState} from '../../components/sql_utils/thread_state';\nimport {Trace} from '../../public/trace';\nimport {TrackEventDetailsPanel} from '../../public/details_panel';\nimport {TrackEventSelection} from '../../public/selection';\nimport {ThreadDesc, ThreadMap} from '../dev.perfetto.Thread/threads';\nimport {assetSrc} from '../../base/assets';\n\nconst MIN_NORMAL_SCHED_PRIORITY = 100;\n\nfunction getDisplayName(\n  name: string | undefined,\n  id: number | undefined,\n): string | undefined {\n  if (name === undefined) {\n    return id === undefined ? undefined : `${id}`;\n  } else {\n    return id === undefined ? name : `${name} ${id}`;\n  }\n}\n\ninterface Data {\n  sched: Sched;\n  wakeup?: SchedWakeupInfo;\n}\n\nexport class SchedSliceDetailsPanel implements TrackEventDetailsPanel {\n  private details?: Data;\n\n  constructor(\n    private readonly trace: Trace,\n    private readonly threads: ThreadMap,\n  ) {}\n\n  async load({eventId}: TrackEventSelection) {\n    const sched = await getSched(this.trace.engine, asSchedSqlId(eventId));\n    if (sched === undefined) {\n      return;\n    }\n    const wakeup = await getSchedWakeupInfo(this.trace.engine, sched);\n    this.details = {sched, wakeup};\n    this.trace.scheduleFullRedraw();\n  }\n\n  render() {\n    if (this.details === undefined) {\n      return m(DetailsShell, {title: 'Sched', description: 'Loading...'});\n    }\n    const threadInfo = this.threads.get(this.details.sched.thread.utid);\n\n    return m(\n      DetailsShell,\n      {\n        title: 'CPU Sched Slice',\n        description: this.renderTitle(this.details),\n      },\n      m(\n        GridLayout,\n        this.renderDetails(this.details, threadInfo),\n        this.renderSchedLatencyInfo(this.details),\n      ),\n    );\n  }\n\n  private renderTitle(data: Data) {\n    const threadInfo = this.threads.get(data.sched.thread.utid);\n    if (!threadInfo) {\n      return null;\n    }\n    return `${threadInfo.procName} [${threadInfo.pid}]`;\n  }\n\n  private renderSchedLatencyInfo(data: Data): m.Children {\n    if (\n      data.wakeup?.wakeupTs === undefined ||\n      data.wakeup?.wakerUtid === undefined\n    ) {\n      return null;\n    }\n    return m(\n      Section,\n      {title: 'Scheduling Latency'},\n      m(\n        '.slice-details-latency-panel',\n        m('img.slice-details-image', {\n          src: assetSrc('assets/scheduling_latency.png'),\n        }),\n        this.renderWakeupText(data),\n        this.renderDisplayLatencyText(data),\n      ),\n    );\n  }\n\n  private renderWakeupText(data: Data): m.Children {\n    if (\n      data.wakeup?.wakerUtid === undefined ||\n      data.wakeup?.wakeupTs === undefined ||\n      data.wakeup?.wakerCpu === undefined\n    ) {\n      return null;\n    }\n    const threadInfo = this.threads.get(data.wakeup.wakerUtid);\n    if (!threadInfo) {\n      return null;\n    }\n    return m(\n      '.slice-details-wakeup-text',\n      m(\n        '',\n        `Wakeup @ `,\n        m(Timestamp, {ts: data.wakeup?.wakeupTs}),\n        ` on CPU ${data.wakeup.wakerCpu} by`,\n      ),\n      m('', `P: ${threadInfo.procName} [${threadInfo.pid}]`),\n      m('', `T: ${threadInfo.threadName} [${threadInfo.tid}]`),\n    );\n  }\n\n  private renderDisplayLatencyText(data: Data): m.Children {\n    if (data.wakeup?.wakeupTs === undefined) {\n      return null;\n    }\n\n    const latency = data.sched.ts - data.wakeup?.wakeupTs;\n    return m(\n      '.slice-details-latency-text',\n      m('', `Scheduling latency: `, m(DurationWidget, {dur: latency})),\n      m(\n        '.text-detail',\n        `This is the interval from when the task became eligible to run\n        (e.g. because of notifying a wait queue it was suspended on) to\n        when it started running.`,\n      ),\n    );\n  }\n\n  private renderPriorityText(priority?: number) {\n    if (priority === undefined) {\n      return undefined;\n    }\n    return priority < MIN_NORMAL_SCHED_PRIORITY\n      ? `${priority} (real-time)`\n      : `${priority}`;\n  }\n\n  protected getProcessThreadDetails(data: Data) {\n    const process = data.sched.thread.process;\n    return new Map<string, string | undefined>([\n      ['Thread', getDisplayName(data.sched.thread.name, data.sched.thread.tid)],\n      ['Process', getDisplayName(process?.name, process?.pid)],\n      ['User ID', exists(process?.uid) ? String(process?.uid) : undefined],\n      ['Package name', process?.packageName],\n      [\n        'Version code',\n        process?.versionCode !== undefined\n          ? String(process?.versionCode)\n          : undefined,\n      ],\n    ]);\n  }\n\n  private renderDetails(data: Data, threadInfo?: ThreadDesc): m.Children {\n    if (!threadInfo) {\n      return null;\n    }\n\n    const extras: m.Children = [];\n\n    for (const [key, value] of this.getProcessThreadDetails(data)) {\n      if (value !== undefined) {\n        extras.push(m(TreeNode, {left: key, right: value}));\n      }\n    }\n\n    const treeNodes = [\n      m(TreeNode, {\n        left: 'Process',\n        right: `${threadInfo.procName} [${threadInfo.pid}]`,\n      }),\n      m(TreeNode, {\n        left: 'Thread',\n        right: m(\n          Anchor,\n          {\n            icon: 'call_made',\n            onclick: () => {\n              this.goToThread(data);\n            },\n          },\n          `${threadInfo.threadName} [${threadInfo.tid}]`,\n        ),\n      }),\n      m(TreeNode, {\n        left: 'Cmdline',\n        right: threadInfo.cmdline,\n      }),\n      m(TreeNode, {\n        left: 'Start time',\n        right: m(Timestamp, {ts: data.sched.ts}),\n      }),\n      m(TreeNode, {\n        left: 'Duration',\n        right: m(DurationWidget, {dur: data.sched.dur}),\n      }),\n      m(TreeNode, {\n        left: 'Priority',\n        right: this.renderPriorityText(data.sched.priority),\n      }),\n      m(TreeNode, {\n        left: 'End State',\n        right: translateState(data.sched.endState),\n      }),\n      m(TreeNode, {\n        left: 'SQL ID',\n        right: m(SqlRef, {table: 'sched', id: data.sched.id}),\n      }),\n      ...extras,\n    ];\n\n    return m(Section, {title: 'Details'}, m(Tree, treeNodes));\n  }\n\n  goToThread(data: Data) {\n    if (data.sched.threadStateId) {\n      this.trace.selection.selectSqlEvent(\n        'thread_state',\n        data.sched.threadStateId,\n        {scrollToSelection: true},\n      );\n    }\n  }\n\n  renderCanvas() {}\n}\n"]}