{"version":3,"file":"scroll_jank_v3_details_panel.js","sourceRoot":"","sources":["../../../../src/plugins/org.chromium.ChromeScrollJank/scroll_jank_v3_details_panel.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2023 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport m from 'mithril';\nimport {duration, Time, time} from '../../base/time';\nimport {exists} from '../../base/utils';\nimport {getSlice, SliceDetails} from '../../components/sql_utils/slice';\nimport {asSliceSqlId} from '../../components/sql_utils/core_types';\nimport {DurationWidget} from '../../components/widgets/duration';\nimport {Timestamp} from '../../components/widgets/timestamp';\nimport {Engine} from '../../trace_processor/engine';\nimport {LONG, NUM, STR} from '../../trace_processor/query_result';\nimport {DetailsShell} from '../../widgets/details_shell';\nimport {GridLayout, GridLayoutColumn} from '../../widgets/grid_layout';\nimport {Section} from '../../widgets/section';\nimport {SqlRef} from '../../widgets/sql_ref';\nimport {MultiParagraphText, TextParagraph} from '../../widgets/text_paragraph';\nimport {dictToTreeNodes, Tree, TreeNode} from '../../widgets/tree';\nimport {EVENT_LATENCY_TRACK_URI, renderSliceRef} from './selection_utils';\nimport {TrackEventDetailsPanel} from '../../public/details_panel';\nimport {Trace} from '../../public/trace';\n\ninterface Data {\n  name: string;\n  // Jank ID.\n  id: number;\n  // Timestamp of the beginning of this slice in nanoseconds.\n  ts: time;\n  // Duration of this slice in nanoseconds.\n  dur: duration;\n  // The number of frames that were delayed due to the jank.\n  delayedVsyncCount: number;\n  // Slice ID of the corresponding EventLatency slice.\n  eventLatencyId: number;\n  // The stage of EventLatency that is the cause of jank.\n  jankCause: string;\n  // Where possible, the subcause of jank.\n  jankSubcause: string;\n  jankyFrames?: number;\n}\n\nasync function getSliceDetails(\n  engine: Engine,\n  id: number,\n): Promise<SliceDetails | undefined> {\n  return getSlice(engine, asSliceSqlId(id));\n}\n\nexport class ScrollJankV3DetailsPanel implements TrackEventDetailsPanel {\n  private data?: Data;\n\n  //\n  // Linking to associated slices\n  //\n\n  // Link to the original Event Latency in the Slice table.\n  // TODO(b/278844325): once the EventLatencyTrack has a custom details panel,\n  // move this link there.\n  private sliceDetails?: SliceDetails;\n\n  // Link to the Event Latency in the EventLatencyTrack (subset of event\n  // latencies associated with input events).\n  private eventLatencySliceDetails?: {\n    ts: time;\n    dur: duration;\n  };\n\n  // Link to the scroll jank cause stage of the associated EventLatencyTrack\n  // slice. May be unknown.\n  private causeSliceDetails?: {\n    id: number;\n    ts: time;\n    dur: duration;\n  };\n\n  // Link to the scroll jank sub-cause stage of the associated EventLatencyTrack\n  // slice. Does not apply to all causes.\n  private subcauseSliceDetails?: {\n    id: number;\n    ts: time;\n    dur: duration;\n  };\n\n  constructor(\n    private readonly trace: Trace,\n    private readonly id: number,\n  ) {}\n\n  async load() {\n    const queryResult = await this.trace.engine.query(`\n      SELECT\n        IIF(\n          cause_of_jank IS NOT NULL,\n          cause_of_jank || IIF(\n            sub_cause_of_jank IS NOT NULL, \"::\" || sub_cause_of_jank, \"\"\n            ), \"Unknown\") || \" Jank\" AS name,\n        id,\n        ts,\n        dur,\n        delayed_frame_count AS delayedVsyncCount,\n        event_latency_id AS eventLatencyId,\n        IFNULL(cause_of_jank, \"UNKNOWN\") AS causeOfJank,\n        IFNULL(sub_cause_of_jank, \"UNKNOWN\") AS subcauseOfJank\n      FROM chrome_janky_frame_presentation_intervals\n      WHERE id = ${this.id}`);\n\n    const iter = queryResult.firstRow({\n      name: STR,\n      id: NUM,\n      ts: LONG,\n      dur: LONG,\n      delayedVsyncCount: NUM,\n      eventLatencyId: NUM,\n      causeOfJank: STR,\n      subcauseOfJank: STR,\n    });\n    this.data = {\n      name: iter.name,\n      id: iter.id,\n      ts: Time.fromRaw(iter.ts),\n      dur: iter.dur,\n      delayedVsyncCount: iter.delayedVsyncCount,\n      eventLatencyId: iter.eventLatencyId,\n      jankCause: iter.causeOfJank,\n      jankSubcause: iter.subcauseOfJank,\n    };\n\n    await this.loadJankyFrames();\n\n    await this.loadSlices();\n    this.trace.scheduleFullRedraw();\n  }\n\n  private hasCause(): boolean {\n    if (this.data === undefined) {\n      return false;\n    }\n    return this.data.jankCause !== 'UNKNOWN';\n  }\n\n  private hasSubcause(): boolean {\n    if (this.data === undefined) {\n      return false;\n    }\n    return this.hasCause() && this.data.jankSubcause !== 'UNKNOWN';\n  }\n\n  private async loadSlices() {\n    if (exists(this.data)) {\n      this.sliceDetails = await getSliceDetails(\n        this.trace.engine,\n        this.data.eventLatencyId,\n      );\n      const it = (\n        await this.trace.engine.query(`\n        SELECT ts, dur\n        FROM slice\n        WHERE id = ${this.data.eventLatencyId}\n      `)\n      ).iter({ts: LONG, dur: LONG});\n      this.eventLatencySliceDetails = {\n        ts: Time.fromRaw(it.ts),\n        dur: it.dur,\n      };\n\n      if (this.hasCause()) {\n        const it = (\n          await this.trace.engine.query(`\n          SELECT id, ts, dur\n          FROM descendant_slice(${this.data.eventLatencyId})\n          WHERE name = \"${this.data.jankCause}\"\n        `)\n        ).iter({id: NUM, ts: LONG, dur: LONG});\n\n        if (it.valid()) {\n          this.causeSliceDetails = {\n            id: it.id,\n            ts: Time.fromRaw(it.ts),\n            dur: it.dur,\n          };\n        }\n      }\n\n      if (this.hasSubcause()) {\n        const it = (\n          await this.trace.engine.query(`\n          SELECT id, ts, dur\n          FROM descendant_slice(${this.data.eventLatencyId})\n          WHERE name = \"${this.data.jankSubcause}\"\n        `)\n        ).iter({id: NUM, ts: LONG, dur: LONG});\n\n        if (it.valid()) {\n          this.subcauseSliceDetails = {\n            id: it.id,\n            ts: Time.fromRaw(it.ts),\n            dur: it.dur,\n          };\n        }\n      }\n    }\n  }\n\n  private async loadJankyFrames() {\n    if (exists(this.data)) {\n      const queryResult = await this.trace.engine.query(`\n        SELECT\n          COUNT(*) AS jankyFrames\n        FROM chrome_frame_info_with_delay\n        WHERE delay_since_last_frame >\n          (\n            SELECT\n              vsync_interval + vsync_interval / 2\n            FROM chrome_vsyncs)\n          AND delay_since_last_input <\n            (\n              SELECT\n                vsync_interval + vsync_interval / 2\n              FROM chrome_vsyncs)\n          AND presentation_timestamp >= ${this.data.ts}\n          AND presentation_timestamp <= ${this.data.ts + this.data.dur};\n      `);\n\n      const iter = queryResult.firstRow({\n        jankyFrames: NUM,\n      });\n\n      this.data.jankyFrames = iter.jankyFrames;\n    }\n  }\n\n  private renderDetailsDictionary(): m.Child[] {\n    const details: {[key: string]: m.Child} = {};\n    if (exists(this.data)) {\n      details['Name'] = this.data.name;\n      details['Expected Frame Presentation Timestamp'] = m(Timestamp, {\n        ts: this.data.ts,\n      });\n      details['Actual Frame Presentation Timestamp'] = m(Timestamp, {\n        ts: Time.add(this.data.ts, this.data.dur),\n      });\n      details['Frame Presentation Delay'] = m(DurationWidget, {\n        dur: this.data.dur,\n      });\n      details['Vsyncs Delayed'] = this.data.delayedVsyncCount;\n      if (exists(this.data.jankyFrames)) {\n        details['Janky Frame Count'] = this.data.jankyFrames;\n      }\n      details['Original Event Latency'] = this.data.eventLatencyId;\n      details['SQL ID'] = m(SqlRef, {\n        table: 'chrome_janky_frame_presentation_intervals',\n        id: this.data.id,\n      });\n    }\n\n    return dictToTreeNodes(details);\n  }\n\n  private getDescriptionText(): m.Child {\n    return m(\n      MultiParagraphText,\n      m(TextParagraph, {\n        text: `Delay between when the frame was expected to be presented and\n                 when it was actually presented.`,\n      }),\n      m(TextParagraph, {\n        text: `This is the period of time during which the user is viewing a\n                 frame that isn't correct.`,\n      }),\n    );\n  }\n\n  private getLinksSection(): m.Child[] {\n    const result: {[key: string]: m.Child} = {};\n\n    if (exists(this.sliceDetails) && exists(this.data)) {\n      result['Janked Event Latency stage'] =\n        exists(this.causeSliceDetails) &&\n        renderSliceRef({\n          trace: this.trace,\n          id: this.causeSliceDetails.id,\n          trackUri: EVENT_LATENCY_TRACK_URI,\n          title: this.data.jankCause,\n        });\n\n      if (this.hasSubcause()) {\n        result['Sub-cause of Jank'] =\n          exists(this.subcauseSliceDetails) &&\n          renderSliceRef({\n            trace: this.trace,\n            id: this.subcauseSliceDetails.id,\n            trackUri: EVENT_LATENCY_TRACK_URI,\n            title: this.data.jankCause,\n          });\n      }\n\n      const children = dictToTreeNodes(result);\n      if (exists(this.eventLatencySliceDetails)) {\n        children.unshift(\n          m(TreeNode, {\n            left: renderSliceRef({\n              trace: this.trace,\n              id: this.data.eventLatencyId,\n              trackUri: EVENT_LATENCY_TRACK_URI,\n              title: this.data.jankCause,\n            }),\n            right: '',\n          }),\n        );\n      } else {\n        children.unshift('Event Latency');\n      }\n\n      return children;\n    }\n\n    return dictToTreeNodes(result);\n  }\n\n  render() {\n    if (this.data === undefined) {\n      return m('h2', 'Loading');\n    }\n\n    const details = this.renderDetailsDictionary();\n\n    return m(\n      DetailsShell,\n      {\n        title: 'EventLatency',\n      },\n      m(\n        GridLayout,\n        m(GridLayoutColumn, m(Section, {title: 'Details'}, m(Tree, details))),\n        m(\n          GridLayoutColumn,\n          m(Section, {title: 'Description'}, this.getDescriptionText()),\n          m(Section, {title: 'Jank Cause'}, m(Tree, this.getLinksSection())),\n        ),\n      ),\n    );\n  }\n}\n"]}