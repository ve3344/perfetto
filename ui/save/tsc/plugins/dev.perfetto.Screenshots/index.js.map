{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/plugins/dev.perfetto.Screenshots/index.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAEjC,sDAAiD;AACjD,qEAAuD;AAGvD,2DAAqD;AAErD;IACE,MAAM,CAAU,EAAE,GAAG,0BAA0B,CAAC;IAChD,KAAK,CAAC,WAAW,CAAC,GAAU;QAC1B,MAAM,GAAG,GAAG,MAAM,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC;;;;;KAKlC,CAAC,CAAC;QACH,MAAM,EAAC,KAAK,EAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,EAAC,KAAK,EAAE,kBAAG,EAAC,CAAC,CAAC;QAE3C,IAAI,KAAK,GAAG,CAAC,EAAE,CAAC;YACd,MAAM,KAAK,GAAG,aAAa,CAAC;YAC5B,MAAM,GAAG,GAAG,cAAc,CAAC;YAC3B,GAAG,CAAC,MAAM,CAAC,aAAa,CAAC;gBACvB,GAAG;gBACH,KAAK;gBACL,KAAK,EAAE,IAAI,oCAAgB,CAAC,GAAG,EAAE,GAAG,CAAC;gBACrC,IAAI,EAAE;oBACJ,IAAI,EAAE,oCAAgB,CAAC,IAAI;iBAC5B;aACF,CAAC,CAAC;YACH,MAAM,SAAS,GAAG,IAAI,qBAAS,CAAC,EAAC,GAAG,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC,EAAE,EAAC,CAAC,CAAC;YAC9D,GAAG,CAAC,SAAS,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;QAC3C,CAAC;IACH,CAAC;;AAzBH,4BA0BC","sourcesContent":["// Copyright (C) 2023 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {TrackNode} from '../../public/workspace';\nimport {NUM} from '../../trace_processor/query_result';\nimport {Trace} from '../../public/trace';\nimport {PerfettoPlugin} from '../../public/plugin';\nimport {ScreenshotsTrack} from './screenshots_track';\n\nexport default class implements PerfettoPlugin {\n  static readonly id = 'dev.perfetto.Screenshots';\n  async onTraceLoad(ctx: Trace): Promise<void> {\n    const res = await ctx.engine.query(`\n      INCLUDE PERFETTO MODULE android.screenshots;\n      select\n        count() as count\n      from android_screenshots\n    `);\n    const {count} = res.firstRow({count: NUM});\n\n    if (count > 0) {\n      const title = 'Screenshots';\n      const uri = '/screenshots';\n      ctx.tracks.registerTrack({\n        uri,\n        title,\n        track: new ScreenshotsTrack(ctx, uri),\n        tags: {\n          kind: ScreenshotsTrack.kind,\n        },\n      });\n      const trackNode = new TrackNode({uri, title, sortOrder: -60});\n      ctx.workspace.addChildInOrder(trackNode);\n    }\n  }\n}\n"]}