{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/plugins/dev.perfetto.PinSysUITracks/index.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAEjC,qEAAuD;AAIvD,wBAAwB;AACxB,MAAM,aAAa,GAAa;IAC9B,iBAAiB;IACjB,mBAAmB;IACnB,iBAAiB;IACjB,kBAAkB;IAClB,aAAa;IACb,IAAI;IACJ,WAAW;CACZ,CAAC;AACF,MAAM,iBAAiB,GAAW,sBAAsB,CAAC;AAEzD,oDAAoD;AACpD;IACE,MAAM,CAAU,EAAE,GAAG,6BAA6B,CAAC;IACnD,KAAK,CAAC,WAAW,CAAC,GAAU;QAC1B,sCAAsC;QACtC,MAAM,MAAM,GAAG,MAAM,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC;;;;;;;KAOrC,CAAC,CAAC;QACH,IAAI,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,EAAE,CAAC;YAC3B,OAAO;QACT,CAAC;QACD,MAAM,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC;YAChC,IAAI,EAAE,kBAAG;SACV,CAAC,CAAC,IAAI,CAAC;QAER,GAAG,CAAC,QAAQ,CAAC,eAAe,CAAC;YAC3B,EAAE,EAAE,4CAA4C;YAChD,IAAI,EAAE,+BAA+B;YACrC,QAAQ,EAAE,GAAG,EAAE;gBACb,GAAG,CAAC,SAAS,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;oBACzC,IAAI,CAAC,KAAK,CAAC,GAAG;wBAAE,OAAO;oBACvB,iEAAiE;oBACjE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,YAAY,SAAS,EAAE,CAAC;wBAAE,OAAO;oBAC3D,IACE,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,EAAE,CAChC,KAAK,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,CAClC,EACD,CAAC;wBACD,OAAO;oBACT,CAAC;oBACD,KAAK,CAAC,GAAG,EAAE,CAAC;gBACd,CAAC,CAAC,CAAC;gBAEH,wCAAwC;gBACxC,GAAG,CAAC,SAAS,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;oBACzC,IAAI,KAAK,CAAC,WAAW,IAAI,KAAK,CAAC,KAAK,CAAC,UAAU,CAAC,iBAAiB,CAAC,EAAE,CAAC;wBACnE,KAAK,CAAC,MAAM,EAAE,CAAC;oBACjB,CAAC;gBACH,CAAC,CAAC,CAAC;YACL,CAAC;SACF,CAAC,CAAC;IACL,CAAC;;AA7CH,4BA8CC","sourcesContent":["// Copyright (C) 2024 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {NUM} from '../../trace_processor/query_result';\nimport {Trace} from '../../public/trace';\nimport {PerfettoPlugin} from '../../public/plugin';\n\n// List of tracks to pin\nconst TRACKS_TO_PIN: string[] = [\n  'Actual Timeline',\n  'Expected Timeline',\n  'ndroid.systemui',\n  'IKeyguardService',\n  'Transition:',\n  'L<',\n  'UI Events',\n];\nconst SYSTEM_UI_PROCESS: string = 'com.android.systemui';\n\n// Plugin that pins the tracks relevant to System UI\nexport default class implements PerfettoPlugin {\n  static readonly id = 'dev.perfetto.PinSysUITracks';\n  async onTraceLoad(ctx: Trace): Promise<void> {\n    // Find the upid for the sysui process\n    const result = await ctx.engine.query(`\n      INCLUDE PERFETTO MODULE android.process_metadata;\n      select\n        _process_available_info_summary.upid\n      from _process_available_info_summary\n      join process using(upid)\n      where process.name = 'com.android.systemui';\n    `);\n    if (result.numRows() === 0) {\n      return;\n    }\n    const sysuiUpid = result.firstRow({\n      upid: NUM,\n    }).upid;\n\n    ctx.commands.registerCommand({\n      id: 'dev.perfetto.PinSysUITracks#PinSysUITracks',\n      name: 'Pin: System UI Related Tracks',\n      callback: () => {\n        ctx.workspace.flatTracks.forEach((track) => {\n          if (!track.uri) return;\n          // Ensure we only grab tracks that are in the SysUI process group\n          if (!track.uri.startsWith(`/process_${sysuiUpid}`)) return;\n          if (\n            !TRACKS_TO_PIN.some((trackName) =>\n              track.title.startsWith(trackName),\n            )\n          ) {\n            return;\n          }\n          track.pin();\n        });\n\n        // expand the sysui process tracks group\n        ctx.workspace.flatTracks.forEach((track) => {\n          if (track.hasChildren && track.title.startsWith(SYSTEM_UI_PROCESS)) {\n            track.expand();\n          }\n        });\n      },\n    });\n  }\n}\n"]}