{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/plugins/dev.perfetto.Io/index.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAEjC,sDAAiD;AAGjD,qFAAoF;AAEpF,qEAAuD;AAEvD;IACE,MAAM,CAAU,EAAE,GAAG,iBAAiB,CAAC;IACvC,KAAK,CAAC,WAAW,CAAC,GAAU;QAC1B,MAAM,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,wCAAwC,CAAC,CAAC;QACjE,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACrD,MAAM,KAAK,GAAG,IAAI,qBAAS,CAAC;YAC1B,KAAK,EAAE,oBAAoB;YAC3B,SAAS,EAAE,CAAC,CAAC;YACb,SAAS,EAAE,IAAI;SAChB,CAAC,CAAC;QACH,KAAK,MAAM,MAAM,IAAI,OAAO,EAAE,CAAC;YAC7B,MAAM,GAAG,GAAG,mCAAmC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC;YAC9D,MAAM,KAAK,GAAG,aAAa,MAAM,CAAC,OAAO,CAAC,UAAU,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC;YACtE,MAAM,KAAK,GAAG,MAAM,IAAA,6CAAuB,EAAC;gBAC1C,KAAK,EAAE,GAAG;gBACV,GAAG;gBACH,IAAI,EAAE;oBACJ,SAAS,EACP;;0BAEc,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE;iBACvC;aACF,CAAC,CAAC;YACH,GAAG,CAAC,MAAM,CAAC,aAAa,CAAC;gBACvB,GAAG;gBACH,KAAK;gBACL,IAAI,EAAE;oBACJ,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC;oBACpB,SAAS,EAAE,oBAAoB;iBAChC;gBACD,KAAK;aACN,CAAC,CAAC;YACH,MAAM,IAAI,GAAG,IAAI,qBAAS,CAAC,EAAC,GAAG,EAAE,KAAK,EAAC,CAAC,CAAC;YACzC,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QAC9B,CAAC;QACD,IAAI,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;YAC1B,GAAG,CAAC,SAAS,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QACvC,CAAC;IACH,CAAC;IAEO,KAAK,CAAC,aAAa,CAAC,MAAc;QACxC,MAAM,KAAK,GAAE;;mEAEkD,CAAC;QAChE,MAAM,MAAM,GAAG,MAAM,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACzC,MAAM,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,EAAC,GAAG,EAAE,kBAAG,EAAE,KAAK,EAAE,kBAAG,EAAE,KAAK,EAAE,kBAAG,EAAC,CAAC,CAAC;QAE3D,MAAM,IAAI,GAAiC,EAAE,CAAC;QAE9C,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC;YAC7B,IAAI,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,EAAE,CAAC,GAAG,EAAE,OAAO,EAAE,EAAE,CAAC,KAAK,EAAE,OAAO,EAAE,EAAE,CAAC,KAAK,EAAC,CAAC,CAAC;QAClE,CAAC;QAED,OAAO,IAAI,CAAC;IACd,CAAC;;AAtDH,4BAuDC","sourcesContent":["// Copyright (C) 2024 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {TrackNode} from '../../public/workspace';\nimport {Trace} from '../../public/trace';\nimport {PerfettoPlugin} from '../../public/plugin';\nimport {createQueryCounterTrack} from '../../components/tracks/query_counter_track';\nimport {Engine} from '../../trace_processor/engine';\nimport {NUM} from '../../trace_processor/query_result';\n\nexport default class implements PerfettoPlugin {\n  static readonly id = 'dev.perfetto.Io';\n  async onTraceLoad(ctx: Trace) {\n    await ctx.engine.query(`INCLUDE PERFETTO MODULE linux.block_io`);\n    const devices = await this.lookupDevices(ctx.engine);\n    const group = new TrackNode({\n      title: 'Queued IO requests',\n      sortOrder: -5,\n      isSummary: true,\n    });\n    for (const device of devices) {\n      const uri = `/queued_io_request_count/device_${device['id']}`;\n      const title = `dev major:${device['major']} minor:${device['minor']}`;\n      const track = await createQueryCounterTrack({\n        trace: ctx,\n        uri,\n        data: {\n          sqlSource:\n            `SELECT ts, ops_in_queue_or_device as value\n            FROM linux_active_block_io_operations_by_device\n            WHERE dev = ${String(device['id'])}`\n        },\n      });\n      ctx.tracks.registerTrack({\n        uri,\n        title,\n        tags: {\n          device: device['id'],\n          groupName: 'Queued IO requests',\n        },\n        track,\n      });\n      const node = new TrackNode({uri, title});\n      group.addChildInOrder(node);\n    }\n    if (group.children.length) {\n      ctx.workspace.addChildInOrder(group);\n    }\n  }\n\n  private async lookupDevices(engine: Engine): Promise<{ [key: string]: number; }[]> {\n    const query =`\n      SELECT DISTINCT dev, linux_device_major_id(dev) as major, linux_device_minor_id(dev) as minor\n      FROM linux_active_block_io_operations_by_device ORDER BY dev`;\n    const result = await engine.query(query);\n    const it = result.iter({dev: NUM, major: NUM, minor: NUM});\n\n    const devs: { [key: string]: number; }[] = [];\n\n    for (; it.valid(); it.next()) {\n      devs.push({'id': it.dev, 'major': it.major, 'minor': it.minor});\n    }\n\n    return devs;\n  }\n}\n"]}