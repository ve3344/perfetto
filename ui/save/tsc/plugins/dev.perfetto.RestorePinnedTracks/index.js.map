{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/plugins/dev.perfetto.RestorePinnedTracks/index.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2024 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {TrackNode} from '../../public/workspace';\nimport {Trace} from '../../public/trace';\nimport {PerfettoPlugin} from '../../public/plugin';\nimport {TrackDescriptor} from '../../public/track';\nimport {z} from 'zod';\nimport {assertIsInstance} from '../../base/logging';\n\nconst PLUGIN_ID = 'dev.perfetto.RestorePinnedTrack';\nconst SAVED_TRACKS_KEY = `${PLUGIN_ID}#savedPerfettoTracks`;\n\nconst RESTORE_COMMAND_ID = `${PLUGIN_ID}#restore`;\n\n/**\n * Fuzzy save and restore of pinned tracks.\n *\n * Tries to persist pinned tracks. Uses full string matching between track name\n * and group name. When no match is found for a saved track, it tries again\n * without numbers.\n */\nexport default class implements PerfettoPlugin {\n  static readonly id = PLUGIN_ID;\n  private ctx!: Trace;\n\n  static onActivate() {\n    const input = document.createElement('input');\n    input.classList.add('pinned_tracks_import_selector');\n    input.setAttribute('type', 'file');\n    input.style.display = 'none';\n    input.addEventListener('change', async (e) => {\n      if (!(e.target instanceof HTMLInputElement)) {\n        throw new Error('Not an input element');\n      }\n      if (!e.target.files) {\n        return;\n      }\n      const file = e.target.files[0];\n      const textPromise = file.text();\n\n      // Reset the value so onchange will be fired with the same file.\n      e.target.value = '';\n\n      const rawFile = JSON.parse(await textPromise);\n      const parsed = SAVED_NAMED_PINNED_TRACKS_SCHEMA.safeParse(rawFile);\n      if (!parsed.success) {\n        alert('Unable to import saved tracks.');\n        return;\n      }\n      addOrReplaceNamedPinnedTracks(parsed.data);\n    });\n    document.body.appendChild(input);\n  }\n\n  async onTraceLoad(ctx: Trace): Promise<void> {\n    this.ctx = ctx;\n\n    ctx.commands.registerCommand({\n      id: `${PLUGIN_ID}#save`,\n      name: 'Save: Pinned tracks',\n      callback: () => {\n        setSavedState({\n          ...getSavedState(),\n          tracks: this.getCurrentPinnedTracks(),\n        });\n      },\n    });\n    ctx.commands.registerCommand({\n      id: RESTORE_COMMAND_ID,\n      name: 'Restore: Pinned tracks',\n      callback: () => {\n        const tracks = getSavedState()?.tracks;\n        if (!tracks) {\n          alert('No saved tracks. Use the Save command first');\n          return;\n        }\n        this.restoreTracks(tracks);\n      },\n    });\n\n    ctx.commands.registerCommand({\n      id: `${PLUGIN_ID}#saveByName`,\n      name: 'Save by name: Pinned tracks',\n      callback: async () => {\n        const name = await this.ctx.omnibox.prompt(\n          'Give a name to the pinned set of tracks',\n        );\n        if (name) {\n          const tracks = this.getCurrentPinnedTracks();\n          addOrReplaceNamedPinnedTracks({name, tracks});\n        }\n      },\n    });\n    ctx.commands.registerCommand({\n      id: `${PLUGIN_ID}#restoreByName`,\n      name: 'Restore by name: Pinned tracks',\n      callback: async () => {\n        const tracksByName = getSavedState()?.tracksByName ?? [];\n        if (tracksByName.length === 0) {\n          alert('No saved tracks. Use the Save by name command first');\n          return;\n        }\n        const res = await this.ctx.omnibox.prompt(\n          'Select name of set of pinned tracks to restore',\n          {\n            values: tracksByName,\n            getName: (x) => x.name,\n          },\n        );\n        if (res) {\n          this.restoreTracks(res.tracks);\n        }\n      },\n    });\n\n    ctx.commands.registerCommand({\n      id: `${PLUGIN_ID}#exportByName`,\n      name: 'Export by name: Pinned tracks',\n      callback: async () => {\n        const tracksByName = getSavedState()?.tracksByName ?? [];\n        if (tracksByName.length === 0) {\n          alert('No saved tracks. Use the Save by name command first');\n          return;\n        }\n        const tracks = await this.ctx.omnibox.prompt(\n          'Select name of set of pinned tracks to export',\n          {\n            values: tracksByName,\n            getName: (x) => x.name,\n          },\n        );\n        if (tracks) {\n          const a = document.createElement('a');\n          a.href =\n            'data:application/json;charset=utf-8,' + JSON.stringify(tracks);\n          a.download = 'perfetto-pinned-tracks-export.json';\n          a.target = '_blank';\n          document.body.appendChild(a);\n          a.click();\n          document.body.removeChild(a);\n        }\n      },\n    });\n    ctx.commands.registerCommand({\n      id: `${PLUGIN_ID}#importByName`,\n      name: 'Import by name: Pinned tracks',\n      callback: async () => {\n        const files = document.querySelector('.pinned_tracks_import_selector');\n        assertIsInstance<HTMLInputElement>(files, HTMLInputElement).click();\n      },\n    });\n  }\n\n  private restoreTracks(tracks: ReadonlyArray<SavedPinnedTrack>) {\n    const localTracks = this.ctx.workspace.flatTracks.map((track) => ({\n      savedTrack: this.toSavedTrack(track),\n      track: track,\n    }));\n    tracks.forEach((trackToRestore) => {\n      const foundTrack = this.findMatchingTrack(localTracks, trackToRestore);\n      if (foundTrack) {\n        foundTrack.pin();\n      } else {\n        console.warn(\n          '[RestorePinnedTracks] No track found that matches',\n          trackToRestore,\n        );\n      }\n    });\n  }\n\n  private getCurrentPinnedTracks() {\n    return this.ctx.workspace.pinnedTracks.map((track) =>\n      this.toSavedTrack(track),\n    );\n  }\n\n  private findMatchingTrack(\n    localTracks: Array<LocalTrack>,\n    savedTrack: SavedPinnedTrack,\n  ): TrackNode | undefined {\n    let mostSimilarTrack: LocalTrack | undefined = undefined;\n    let mostSimilarTrackDifferenceScore: number = 0;\n\n    for (let i = 0; i < localTracks.length; i++) {\n      const localTrack = localTracks[i];\n      const differenceScore = this.calculateSimilarityScore(\n        localTrack.savedTrack,\n        savedTrack,\n      );\n\n      // Return immediately if we found the exact match\n      if (differenceScore === Number.MAX_SAFE_INTEGER) {\n        return localTrack.track;\n      }\n\n      // Ignore too different objects\n      if (differenceScore === 0) {\n        continue;\n      }\n\n      if (differenceScore > mostSimilarTrackDifferenceScore) {\n        mostSimilarTrackDifferenceScore = differenceScore;\n        mostSimilarTrack = localTrack;\n      }\n    }\n\n    return mostSimilarTrack?.track || undefined;\n  }\n\n  /**\n   * Returns the similarity score where 0 means the objects are completely\n   * different, and the higher the number, the smaller the difference is.\n   * Returns Number.MAX_SAFE_INTEGER if the objects are completely equal.\n   * We attempt a fuzzy match based on the similarity score.\n   * For example, one of the ways we do this is we remove the numbers\n   * from the title to potentially pin a \"similar\" track from a different trace.\n   * Removing numbers allows flexibility; for instance, with multiple 'sysui'\n   * processes (e.g. track group name: \"com.android.systemui 123\") without\n   * this approach, any could be mistakenly pinned. The goal is to restore\n   * specific tracks within the same trace, ensuring that a previously pinned\n   * track is pinned again.\n   * If the specific process with that PID is unavailable, pinning any\n   * other process matching the package name is attempted.\n   * @param track1 first saved track to compare\n   * @param track2 second saved track to compare\n   * @private\n   */\n  private calculateSimilarityScore(\n    track1: SavedPinnedTrack,\n    track2: SavedPinnedTrack,\n  ): number {\n    // Return immediately when objects are equal\n    if (\n      track1.trackName === track2.trackName &&\n      track1.groupName === track2.groupName &&\n      track1.pluginId === track2.pluginId &&\n      track1.kind === track2.kind &&\n      track1.isMainThread === track2.isMainThread\n    ) {\n      return Number.MAX_SAFE_INTEGER;\n    }\n\n    let similarityScore = 0;\n    if (track1.trackName === track2.trackName) {\n      similarityScore += 100;\n    } else if (\n      this.removeNumbers(track1.trackName) ===\n      this.removeNumbers(track2.trackName)\n    ) {\n      similarityScore += 50;\n    }\n\n    if (track1.groupName === track2.groupName) {\n      similarityScore += 90;\n    } else if (\n      this.removeNumbers(track1.groupName) ===\n      this.removeNumbers(track2.groupName)\n    ) {\n      similarityScore += 45;\n    }\n\n    // Do not consider other parameters if there is no match in name/group\n    if (similarityScore === 0) return similarityScore;\n\n    if (track1.pluginId === track2.pluginId) {\n      similarityScore += 30;\n    }\n\n    if (track1.kind === track2.kind) {\n      similarityScore += 20;\n    }\n\n    if (track1.isMainThread === track2.isMainThread) {\n      similarityScore += 10;\n    }\n\n    return similarityScore;\n  }\n\n  private removeNumbers(inputString?: string): string | undefined {\n    return inputString?.replace(/\\d+/g, '');\n  }\n\n  private toSavedTrack(track: TrackNode): SavedPinnedTrack {\n    let trackDescriptor: TrackDescriptor | undefined = undefined;\n    if (track.uri != undefined) {\n      trackDescriptor = this.ctx.tracks.getTrack(track.uri);\n    }\n\n    return {\n      groupName: groupName(track),\n      trackName: track.title,\n      pluginId: trackDescriptor?.pluginId,\n      kind: trackDescriptor?.tags?.kind,\n      isMainThread: trackDescriptor?.chips?.includes('main thread') || false,\n    };\n  }\n}\n\nfunction getSavedState(): SavedState | undefined {\n  const savedStateString = window.localStorage.getItem(SAVED_TRACKS_KEY);\n  if (!savedStateString) {\n    return undefined;\n  }\n  const savedState = SAVED_STATE_SCHEMA.safeParse(JSON.parse(savedStateString));\n  if (!savedState.success) {\n    return undefined;\n  }\n  return savedState.data;\n}\n\nfunction setSavedState(state: SavedState) {\n  window.localStorage.setItem(SAVED_TRACKS_KEY, JSON.stringify(state));\n}\n\nfunction addOrReplaceNamedPinnedTracks({name, tracks}: SavedNamedPinnedTracks) {\n  const savedState = getSavedState();\n  const rawTracksByName = savedState?.tracksByName ?? [];\n  const tracksByNameMap = new Map(\n    rawTracksByName.map((x) => [x.name, x.tracks]),\n  );\n  tracksByNameMap.set(name, tracks);\n  setSavedState({\n    ...savedState,\n    tracksByName: Array.from(tracksByNameMap.entries()).map(([k, v]) => ({\n      name: k,\n      tracks: v,\n    })),\n  });\n}\n\n// Return the displayname of the containing group\n// If the track is a child of a workspace, return undefined...\nfunction groupName(track: TrackNode): string | undefined {\n  const parent = track.parent;\n  if (parent instanceof TrackNode) {\n    return parent.title;\n  }\n  return undefined;\n}\n\nconst SAVED_PINNED_TRACK_SCHEMA = z\n  .object({\n    // Optional: group name for the track. Usually matches with process name.\n    groupName: z.string().optional(),\n    // Track name to restore.\n    trackName: z.string(),\n    // Plugin used to create this track\n    pluginId: z.string().optional(),\n    // Kind of the track\n    kind: z.string().optional(),\n    // If it's a thread track, it should be true in case it's a main thread track\n    isMainThread: z.boolean(),\n  })\n  .readonly();\n\ntype SavedPinnedTrack = z.infer<typeof SAVED_PINNED_TRACK_SCHEMA>;\n\nconst SAVED_NAMED_PINNED_TRACKS_SCHEMA = z\n  .object({\n    name: z.string(),\n    tracks: z.array(SAVED_PINNED_TRACK_SCHEMA).readonly(),\n  })\n  .readonly();\n\ntype SavedNamedPinnedTracks = z.infer<typeof SAVED_NAMED_PINNED_TRACKS_SCHEMA>;\n\nconst SAVED_STATE_SCHEMA = z\n  .object({\n    tracks: z.array(SAVED_PINNED_TRACK_SCHEMA).optional().readonly(),\n    tracksByName: z\n      .array(SAVED_NAMED_PINNED_TRACKS_SCHEMA)\n      .optional()\n      .readonly(),\n  })\n  .readonly();\n\ntype SavedState = z.infer<typeof SAVED_STATE_SCHEMA>;\n\ninterface LocalTrack {\n  readonly savedTrack: SavedPinnedTrack;\n  readonly track: TrackNode;\n}\n"]}