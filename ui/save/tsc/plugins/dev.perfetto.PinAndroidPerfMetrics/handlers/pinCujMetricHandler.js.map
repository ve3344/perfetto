{"version":3,"file":"pinCujMetricHandler.js","sourceRoot":"","sources":["../../../../../src/plugins/dev.perfetto.PinAndroidPerfMetrics/handlers/pinCujMetricHandler.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;;AAIjC,6EAAoE;AAEpE,iDAAiD;AACjD,MAAM,mBAAmB;IACvB;;;;;OAKG;IACI,KAAK,CAAC,SAAiB;QAC5B,MAAM,OAAO,GAAG,yDAAyD,CAAC;QAC1E,MAAM,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACtC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,CAAC;YACnB,OAAO,SAAS,CAAC;QACnB,CAAC;QACD,OAAO;YACL,OAAO,EAAE,KAAK,CAAC,MAAM,CAAC,OAAO;SAC9B,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACI,KAAK,CAAC,cAAc,CAAC,UAAyB,EAAE,GAAU;QAC/D,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,UAAU,CAAC,OAAO,CAAC,CAAC;IAC7C,CAAC;IAEO,YAAY,CAAC,GAAU,EAAE,OAAe;QAC9C,MAAM,SAAS,GAAG,aAAa,OAAO,EAAE,CAAC;QACzC,IAAA,+CAAoB,EAAC,GAAG,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;IAChD,CAAC;CACF;AAEY,QAAA,cAAc,GAAG,IAAI,mBAAmB,EAAE,CAAC","sourcesContent":["// Copyright (C) 2024 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {CujMetricData, MetricHandler} from './metricUtils';\nimport {Trace} from '../../../public/trace';\nimport {addJankCUJDebugTrack} from '../../dev.perfetto.AndroidCujs';\n\n/** Pins a single CUJ from CUJ scoped metrics. */\nclass PinCujMetricHandler implements MetricHandler {\n  /**\n   * Matches metric key & return parsed data if successful.\n   *\n   * @param {string} metricKey The metric key to match.\n   * @returns {CujMetricData | undefined} Parsed data or undefined if no match.\n   */\n  public match(metricKey: string): CujMetricData | undefined {\n    const matcher = /perfetto_cuj_(?<process>.*)-(?<cujName>.*)-.*-missed_.*/;\n    const match = matcher.exec(metricKey);\n    if (!match?.groups) {\n      return undefined;\n    }\n    return {\n      cujName: match.groups.cujName,\n    };\n  }\n\n  /**\n   * Adds the debug tracks for cuj Scoped jank metrics\n   *\n   * @param {CujMetricData} metricData Parsed metric data for the cuj scoped jank\n   * @param {Trace} ctx PluginContextTrace for trace related properties and methods\n   * @returns {void} Adds one track for Jank CUJ slice and one for Janky CUJ frames\n   */\n  public async addMetricTrack(metricData: CujMetricData, ctx: Trace) {\n    this.pinSingleCuj(ctx, metricData.cujName);\n  }\n\n  private pinSingleCuj(ctx: Trace, cujName: string) {\n    const trackName = `Jank CUJ: ${cujName}`;\n    addJankCUJDebugTrack(ctx, trackName, cujName);\n  }\n}\n\nexport const pinCujInstance = new PinCujMetricHandler();\n"]}