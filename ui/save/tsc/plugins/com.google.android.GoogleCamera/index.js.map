{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/plugins/com.google.android.GoogleCamera/index.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;;AAIjC,iFAA2D;AAE3D;IACE,MAAM,CAAU,EAAE,GAAG,iCAAiC,CAAC;IACvD,KAAK,CAAC,WAAW,CAAC,GAAU;QAC1B,GAAG,CAAC,QAAQ,CAAC,eAAe,CAAC;YAC3B,EAAE,EAAE,6DAA6D;YACjE,IAAI,EAAE,iCAAiC;YACvC,QAAQ,EAAE,GAAG,EAAE;gBACb,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;YAC/B,CAAC;SACF,CAAC,CAAC;QAEH,GAAG,CAAC,QAAQ,CAAC,eAAe,CAAC;YAC3B,EAAE,EAAE,wDAAwD;YAC5D,IAAI,EAAE,2BAA2B;YACjC,QAAQ,EAAE,CAAC,UAAU,EAAE,EAAE;gBACvB,UAAU,GAAG,MAAM,CACjB,+EAA+E,EAC/E,EAAE,CACH,CAAC;gBACF,MAAM,aAAa,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAC9C,IAAY;oBAEZ,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;gBACrB,CAAC,CAAC,CAAC;gBACH,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,aAAa,CAAC,CAAC;YACrC,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAEO,kBAAkB,CAAC,GAAU;QACnC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,eAAe,CAAC,iBAAiB,CAAC,CAAC;QACvD,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,eAAe,CAAC,sBAAsB,CAAC,CAAC;IAC9D,CAAC;IAEO,SAAS,CAAC,GAAU,EAAE,UAAiC;QAC7D,GAAG,CAAC,SAAS,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;YACzC,UAAU,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,EAAE;gBAC/B,IAAI,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC;oBACjC,KAAK,CAAC,GAAG,EAAE,CAAC;gBACd,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;;AA1CH,4BA2CC","sourcesContent":["// Copyright (C) 2024 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Trace} from '../../public/trace';\nimport {PerfettoPlugin} from '../../public/plugin';\nimport * as cameraConstants from './googleCameraConstants';\n\nexport default class implements PerfettoPlugin {\n  static readonly id = 'com.google.android.GoogleCamera';\n  async onTraceLoad(ctx: Trace): Promise<void> {\n    ctx.commands.registerCommand({\n      id: 'com.google.android.GoogleCamera#LoadGoogleCameraStartupView',\n      name: 'Load google camera startup view',\n      callback: () => {\n        this.loadGCAStartupView(ctx);\n      },\n    });\n\n    ctx.commands.registerCommand({\n      id: 'com.google.android.GoogleCamera#PinCameraRelatedTracks',\n      name: 'Pin camera related tracks',\n      callback: (trackNames) => {\n        trackNames = prompt(\n          'List of additional track names that you would like to pin separated by commas',\n          '',\n        );\n        const trackNameList = trackNames.split(',').map(function (\n          item: string,\n        ) {\n          return item.trim();\n        });\n        this.pinTracks(ctx, trackNameList);\n      },\n    });\n  }\n\n  private loadGCAStartupView(ctx: Trace) {\n    this.pinTracks(ctx, cameraConstants.MAIN_THREAD_TRACK);\n    this.pinTracks(ctx, cameraConstants.STARTUP_RELATED_TRACKS);\n  }\n\n  private pinTracks(ctx: Trace, trackNames: ReadonlyArray<string>) {\n    ctx.workspace.flatTracks.forEach((track) => {\n      trackNames.forEach((trackName) => {\n        if (track.title.match(trackName)) {\n          track.pin();\n        }\n      });\n    });\n  }\n}\n"]}