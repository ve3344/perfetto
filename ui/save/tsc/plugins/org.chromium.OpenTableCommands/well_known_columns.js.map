{"version":3,"file":"well_known_columns.js","sourceRoot":"","sources":["../../../../src/plugins/org.chromium.OpenTableCommands/well_known_columns.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2024 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport m from 'mithril';\nimport {Icons} from '../../base/semantic_icons';\nimport {sqliteString} from '../../base/string_utils';\nimport {Duration, Time} from '../../base/time';\nimport {SqlValue, STR} from '../../trace_processor/query_result';\nimport {\n  asSchedSqlId,\n  asSliceSqlId,\n  asThreadStateSqlId,\n  asUpid,\n  asUtid,\n} from '../../components/sql_utils/core_types';\nimport {getProcessName} from '../../components/sql_utils/process';\nimport {getThreadName} from '../../components/sql_utils/thread';\nimport {Anchor} from '../../widgets/anchor';\nimport {renderError} from '../../widgets/error';\nimport {MenuDivider, MenuItem, PopupMenu2} from '../../widgets/menu';\nimport {DurationWidget} from '../../components/widgets/duration';\nimport {\n  processRefMenuItems,\n  showProcessDetailsMenuItem,\n} from '../../components/widgets/process';\nimport {SchedRef} from '../../components/widgets/sched';\nimport {SliceRef} from '../../components/widgets/slice';\nimport {\n  showThreadDetailsMenuItem,\n  threadRefMenuItems,\n} from '../../components/widgets/thread';\nimport {ThreadStateRef} from '../../components/widgets/thread_state';\nimport {Timestamp} from '../../components/widgets/timestamp';\nimport {\n  AggregationConfig,\n  SourceTable,\n  SqlColumn,\n  sqlColumnId,\n  LegacyTableColumn,\n  LegacyTableColumnSet,\n  LegacyTableManager,\n} from '../../components/widgets/sql/legacy_table/column';\nimport {\n  displayValue,\n  getStandardContextMenuItems,\n  getStandardFilters,\n  renderStandardCell,\n} from '../../components/widgets/sql/legacy_table/render_cell_utils';\n\nfunction wrongTypeError(type: string, name: SqlColumn, value: SqlValue) {\n  return renderError(\n    `Wrong type for ${type} column ${sqlColumnId(name)}: bigint expected, ${typeof value} found`,\n  );\n}\n\nexport type ColumnParams = {\n  alias?: string;\n  startsHidden?: boolean;\n  title?: string;\n};\n\nexport type StandardColumnParams = ColumnParams & {\n  aggregationType?: 'nominal' | 'quantitative';\n};\n\nexport interface IdColumnParams {\n  // Whether the column is guaranteed not to have null values.\n  // (this will allow us to upgrage the joins on this column to more performant INNER JOINs).\n  notNull?: boolean;\n}\n\ntype ColumnSetParams = {\n  title: string;\n  startsHidden?: boolean;\n};\n\nexport class StandardColumn extends LegacyTableColumn {\n  constructor(\n    private column: SqlColumn,\n    private params?: StandardColumnParams,\n  ) {\n    super(params);\n  }\n\n  primaryColumn(): SqlColumn {\n    return this.column;\n  }\n\n  aggregation(): AggregationConfig {\n    return {dataType: this.params?.aggregationType};\n  }\n\n  getTitle() {\n    return this.params?.title;\n  }\n\n  renderCell(value: SqlValue, tableManager: LegacyTableManager): m.Children {\n    return renderStandardCell(value, this.column, tableManager);\n  }\n}\n\nexport class TimestampColumn extends LegacyTableColumn {\n  constructor(\n    private column: SqlColumn,\n    private params?: ColumnParams,\n  ) {\n    super(params);\n  }\n\n  primaryColumn(): SqlColumn {\n    return this.column;\n  }\n\n  getTitle() {\n    return this.params?.title;\n  }\n\n  renderCell(value: SqlValue, tableManager: LegacyTableManager): m.Children {\n    if (typeof value !== 'bigint') {\n      return renderStandardCell(value, this.column, tableManager);\n    }\n    return m(Timestamp, {\n      ts: Time.fromRaw(value),\n      extraMenuItems: getStandardContextMenuItems(\n        value,\n        this.column,\n        tableManager,\n      ),\n    });\n  }\n}\n\nexport class DurationColumn extends LegacyTableColumn {\n  constructor(\n    private column: SqlColumn,\n    private params?: ColumnParams,\n  ) {\n    super(params);\n  }\n\n  primaryColumn(): SqlColumn {\n    return this.column;\n  }\n\n  getTitle() {\n    return this.params?.title;\n  }\n\n  renderCell(value: SqlValue, tableManager: LegacyTableManager): m.Children {\n    if (typeof value !== 'bigint') {\n      return renderStandardCell(value, this.column, tableManager);\n    }\n\n    return m(DurationWidget, {\n      dur: Duration.fromRaw(value),\n      extraMenuItems: getStandardContextMenuItems(\n        value,\n        this.column,\n        tableManager,\n      ),\n    });\n  }\n}\n\nexport class SliceIdColumn extends LegacyTableColumn {\n  private columns: {ts: SqlColumn; dur: SqlColumn; trackId: SqlColumn};\n\n  constructor(\n    private id: SqlColumn,\n    private params?: ColumnParams & IdColumnParams,\n  ) {\n    super(params);\n\n    const sliceTable: SourceTable = {\n      table: 'slice',\n      joinOn: {id: this.id},\n      // If the column is guaranteed not to have null values, we can use an INNER JOIN.\n      innerJoin: this.params?.notNull === true,\n    };\n\n    this.columns = {\n      ts: {\n        column: 'ts',\n        source: sliceTable,\n      },\n      dur: {\n        column: 'dur',\n        source: sliceTable,\n      },\n      trackId: {\n        column: 'track_id',\n        source: sliceTable,\n      },\n    };\n  }\n\n  primaryColumn(): SqlColumn {\n    return this.id;\n  }\n\n  getTitle() {\n    return this.params?.title;\n  }\n\n  dependentColumns() {\n    return this.columns;\n  }\n\n  renderCell(\n    value: SqlValue,\n    manager: LegacyTableManager,\n    data: {[key: string]: SqlValue},\n  ): m.Children {\n    const id = value;\n    const ts = data['ts'];\n    const dur = data['dur'] === null ? -1n : data['dur'];\n    const trackId = data['trackId'];\n\n    if (id === null) {\n      return renderStandardCell(id, this.id, manager);\n    }\n    if (ts === null || trackId === null) {\n      return renderError(`Slice with id ${id} not found`);\n    }\n    if (typeof id !== 'bigint') return wrongTypeError('id', this.id, id);\n    if (typeof ts !== 'bigint') {\n      return wrongTypeError('timestamp', this.columns.ts, ts);\n    }\n    if (typeof dur !== 'bigint') {\n      return wrongTypeError('duration', this.columns.dur, dur);\n    }\n    if (typeof trackId !== 'bigint') {\n      return wrongTypeError('track id', this.columns.trackId, trackId);\n    }\n\n    return m(SliceRef, {\n      id: asSliceSqlId(Number(id)),\n      name: `${id}`,\n      switchToCurrentSelectionTab: false,\n    });\n  }\n}\n\nexport class SliceColumnSet extends LegacyTableColumnSet {\n  constructor(\n    private id: SqlColumn,\n    private params?: ColumnSetParams,\n  ) {\n    super();\n  }\n\n  getTitle(): string {\n    return this.params?.title ?? `${sqlColumnId(this.id)} (slice)`;\n  }\n\n  async discover(): Promise<\n    {key: string; column: LegacyTableColumn | LegacyTableColumnSet}[]\n  > {\n    const column: (name: string) => SqlColumn = (name) => {\n      return {\n        column: name,\n        source: {\n          table: 'slice',\n          joinOn: {id: this.id},\n        },\n      };\n    };\n\n    return [\n      {\n        key: 'id',\n        column: new SliceIdColumn(this.id),\n      },\n      {\n        key: 'ts',\n        column: new TimestampColumn(column('ts')),\n      },\n      {\n        key: 'dur',\n        column: new DurationColumn(column('dur')),\n      },\n      {\n        key: 'name',\n        column: new StandardColumn(column('name')),\n      },\n      {\n        key: 'thread_dur',\n        column: new StandardColumn(column('thread_dur')),\n      },\n      {\n        key: 'parent_id',\n        column: new SliceColumnSet(column('parent_id')),\n      },\n    ];\n  }\n\n  initialColumns(): LegacyTableColumn[] {\n    if (this.params?.startsHidden) return [];\n    return [new SliceIdColumn(this.id)];\n  }\n}\n\nexport class SchedIdColumn extends LegacyTableColumn {\n  private columns: {ts: SqlColumn; dur: SqlColumn; cpu: SqlColumn};\n\n  constructor(\n    private id: SqlColumn,\n    private params?: ColumnParams & IdColumnParams,\n  ) {\n    super(params);\n\n    const schedTable: SourceTable = {\n      table: 'sched',\n      joinOn: {id: this.id},\n      // If the column is guaranteed not to have null values, we can use an INNER JOIN.\n      innerJoin: this.params?.notNull === true,\n    };\n\n    this.columns = {\n      ts: {\n        column: 'ts',\n        source: schedTable,\n      },\n      dur: {\n        column: 'dur',\n        source: schedTable,\n      },\n      cpu: {\n        column: 'cpu',\n        source: schedTable,\n      },\n    };\n  }\n\n  primaryColumn(): SqlColumn {\n    return this.id;\n  }\n\n  getTitle() {\n    return this.params?.title;\n  }\n\n  dependentColumns() {\n    return {\n      ts: this.columns.ts,\n      dur: this.columns.dur,\n      cpu: this.columns.cpu,\n    };\n  }\n\n  renderCell(\n    value: SqlValue,\n    manager: LegacyTableManager,\n    data: {[key: string]: SqlValue},\n  ): m.Children {\n    const id = value;\n    const ts = data['ts'];\n    const dur = data['dur'] === null ? -1n : data['dur'];\n    const cpu = data['cpu'];\n\n    if (id === null) {\n      return renderStandardCell(id, this.id, manager);\n    }\n    if (ts === null || cpu === null) {\n      return renderError(`Sched with id ${id} not found`);\n    }\n    if (typeof id !== 'bigint') return wrongTypeError('id', this.id, id);\n    if (typeof ts !== 'bigint') {\n      return wrongTypeError('timestamp', this.columns.ts, ts);\n    }\n    if (typeof dur !== 'bigint') {\n      return wrongTypeError('duration', this.columns.dur, dur);\n    }\n    if (typeof cpu !== 'bigint') {\n      return wrongTypeError('track id', this.columns.cpu, cpu);\n    }\n\n    return m(SchedRef, {\n      id: asSchedSqlId(Number(id)),\n      name: `${id}`,\n      switchToCurrentSelectionTab: false,\n    });\n  }\n}\n\nexport class ThreadStateIdColumn extends LegacyTableColumn {\n  private columns: {ts: SqlColumn; dur: SqlColumn; utid: SqlColumn};\n\n  constructor(\n    private id: SqlColumn,\n    private params?: ColumnParams & IdColumnParams,\n  ) {\n    super(params);\n\n    const threadStateTable: SourceTable = {\n      table: 'thread_state',\n      joinOn: {id: this.id},\n      // If the column is guaranteed not to have null values, we can use an INNER JOIN.\n      innerJoin: this.params?.notNull === true,\n    };\n\n    this.columns = {\n      ts: {\n        column: 'ts',\n        source: threadStateTable,\n      },\n      dur: {\n        column: 'dur',\n        source: threadStateTable,\n      },\n      utid: {\n        column: 'utid',\n        source: threadStateTable,\n      },\n    };\n  }\n\n  primaryColumn(): SqlColumn {\n    return this.id;\n  }\n\n  getTitle() {\n    return this.params?.title;\n  }\n\n  dependentColumns() {\n    return {\n      ts: this.columns.ts,\n      dur: this.columns.dur,\n      utid: this.columns.utid,\n    };\n  }\n\n  renderCell(\n    value: SqlValue,\n    manager: LegacyTableManager,\n    data: {[key: string]: SqlValue},\n  ): m.Children {\n    const id = value;\n    const ts = data['ts'];\n    const dur = data['dur'] === null ? -1n : data['dur'];\n    const utid = data['utid'];\n\n    if (id === null) {\n      return renderStandardCell(id, this.id, manager);\n    }\n    if (ts === null || utid === null) {\n      return renderError(`Thread state with id ${id} not found`);\n    }\n    if (typeof id !== 'bigint') return wrongTypeError('id', this.id, id);\n    if (typeof ts !== 'bigint') {\n      return wrongTypeError('timestamp', this.columns.ts, ts);\n    }\n    if (typeof dur !== 'bigint') {\n      return wrongTypeError('duration', this.columns.dur, dur);\n    }\n    if (typeof utid !== 'bigint') {\n      return wrongTypeError('track id', this.columns.utid, utid);\n    }\n\n    return m(ThreadStateRef, {\n      id: asThreadStateSqlId(Number(id)),\n      name: `${id}`,\n      switchToCurrentSelectionTab: false,\n    });\n  }\n}\n\nexport class ThreadColumn extends LegacyTableColumn {\n  private columns: {name: SqlColumn; tid: SqlColumn};\n\n  constructor(\n    private utid: SqlColumn,\n    private params?: ColumnParams & IdColumnParams,\n  ) {\n    // Both ThreadColumn and ThreadIdColumn are referencing the same underlying SQL column as primary,\n    // so we have to use tag to distinguish them.\n    super({tag: 'thread', ...params});\n\n    const threadTable: SourceTable = {\n      table: 'thread',\n      joinOn: {id: this.utid},\n      // If the column is guaranteed not to have null values, we can use an INNER JOIN.\n      innerJoin: this.params?.notNull === true,\n    };\n\n    this.columns = {\n      name: {\n        column: 'name',\n        source: threadTable,\n      },\n      tid: {\n        column: 'tid',\n        source: threadTable,\n      },\n    };\n  }\n\n  primaryColumn(): SqlColumn {\n    return this.utid;\n  }\n\n  getTitle() {\n    if (this.params?.title !== undefined) return this.params.title;\n    return `${sqlColumnId(this.utid)} (thread)`;\n  }\n\n  dependentColumns() {\n    return {\n      tid: this.columns.tid,\n      name: this.columns.name,\n    };\n  }\n\n  renderCell(\n    value: SqlValue,\n    manager: LegacyTableManager,\n    data: {[key: string]: SqlValue},\n  ): m.Children {\n    const utid = value;\n    const rawTid = data['tid'];\n    const rawName = data['name'];\n\n    if (utid === null) {\n      return renderStandardCell(utid, this.utid, manager);\n    }\n    if (typeof utid !== 'bigint') {\n      return wrongTypeError('utid', this.utid, utid);\n    }\n    if (rawTid !== null && typeof rawTid !== 'bigint') {\n      return wrongTypeError('tid', this.columns.tid, rawTid);\n    }\n    if (rawName !== null && typeof rawName !== 'string') {\n      return wrongTypeError('name', this.columns.name, rawName);\n    }\n\n    const name: string | undefined = rawName ?? undefined;\n    const tid: number | undefined =\n      rawTid !== null ? Number(rawTid) : undefined;\n\n    return m(\n      PopupMenu2,\n      {\n        trigger: m(\n          Anchor,\n          getThreadName({\n            name: name ?? undefined,\n            tid: tid !== null ? Number(tid) : undefined,\n          }),\n        ),\n      },\n      threadRefMenuItems({utid: asUtid(Number(utid)), name, tid}),\n      m(MenuDivider),\n      m(\n        MenuItem,\n        {\n          label: 'Add filter',\n          icon: Icons.Filter,\n        },\n        m(\n          MenuItem,\n          {\n            label: 'utid',\n          },\n          getStandardFilters(utid, this.utid, manager),\n        ),\n        m(\n          MenuItem,\n          {\n            label: 'thread name',\n          },\n          getStandardFilters(rawName, this.columns.name, manager),\n        ),\n        m(\n          MenuItem,\n          {\n            label: 'tid',\n          },\n          getStandardFilters(rawTid, this.columns.tid, manager),\n        ),\n      ),\n    );\n  }\n\n  aggregation(): AggregationConfig {\n    return {\n      dataType: 'nominal',\n    };\n  }\n}\n\n// ThreadIdColumn is a column type for displaying primary key of the `thread` table.\n// All other references (foreign keys) should use `ThreadColumn` instead.\nexport class ThreadIdColumn extends LegacyTableColumn {\n  private columns: {tid: SqlColumn};\n\n  constructor(private utid: SqlColumn) {\n    super({});\n\n    const threadTable: SourceTable = {\n      table: 'thread',\n      joinOn: {id: this.utid},\n      innerJoin: true,\n    };\n\n    this.columns = {\n      tid: {\n        column: 'tid',\n        source: threadTable,\n      },\n    };\n  }\n\n  primaryColumn(): SqlColumn {\n    return this.utid;\n  }\n\n  getTitle() {\n    return 'utid';\n  }\n\n  dependentColumns() {\n    return {\n      tid: this.columns.tid,\n    };\n  }\n\n  renderCell(\n    value: SqlValue,\n    manager: LegacyTableManager,\n    data: {[key: string]: SqlValue},\n  ): m.Children {\n    const utid = value;\n    const rawTid = data['tid'];\n\n    if (utid === null) {\n      return renderStandardCell(utid, this.utid, manager);\n    }\n\n    if (typeof utid !== 'bigint') {\n      throw new Error(\n        `thread.utid is expected to be bigint, got ${typeof utid}`,\n      );\n    }\n\n    return m(\n      PopupMenu2,\n      {\n        trigger: m(Anchor, `${utid}`),\n      },\n\n      showThreadDetailsMenuItem(\n        asUtid(Number(utid)),\n        rawTid === null ? undefined : Number(rawTid),\n      ),\n      getStandardContextMenuItems(utid, this.utid, manager),\n    );\n  }\n\n  aggregation(): AggregationConfig {\n    return {dataType: 'nominal'};\n  }\n}\n\nexport class ThreadColumnSet extends LegacyTableColumnSet {\n  constructor(\n    private id: SqlColumn,\n    private params: ColumnSetParams & {\n      notNull?: boolean;\n    },\n  ) {\n    super();\n  }\n\n  getTitle(): string {\n    return `${this.params.title} (thread)`;\n  }\n\n  initialColumns(): LegacyTableColumn[] {\n    if (this.params.startsHidden === true) return [];\n    return [new ThreadColumn(this.id)];\n  }\n\n  async discover() {\n    const column: (name: string) => SqlColumn = (name) => ({\n      column: name,\n      source: {\n        table: 'thread',\n        joinOn: {id: this.id},\n      },\n      innerJoin: this.params.notNull === true,\n    });\n\n    return [\n      {\n        key: 'thread',\n        column: new ThreadColumn(this.id),\n      },\n      {\n        key: 'utid',\n        column: new ThreadIdColumn(this.id),\n      },\n      {\n        key: 'tid',\n        column: new StandardColumn(column('tid'), {aggregationType: 'nominal'}),\n      },\n      {\n        key: 'name',\n        column: new StandardColumn(column('name')),\n      },\n      {\n        key: 'start_ts',\n        column: new TimestampColumn(column('start_ts')),\n      },\n      {\n        key: 'end_ts',\n        column: new TimestampColumn(column('end_ts')),\n      },\n      {\n        key: 'upid',\n        column: new ProcessColumnSet(column('upid'), {title: 'upid'}),\n      },\n      {\n        key: 'is_main_thread',\n        column: new StandardColumn(column('is_main_thread'), {\n          aggregationType: 'nominal',\n        }),\n      },\n    ];\n  }\n}\n\nexport class ProcessColumn extends LegacyTableColumn {\n  private columns: {name: SqlColumn; pid: SqlColumn};\n\n  constructor(\n    private upid: SqlColumn,\n    private params?: ColumnParams & IdColumnParams,\n  ) {\n    // Both ProcessColumn and ProcessIdColumn are referencing the same underlying SQL column as primary,\n    // so we have to use tag to distinguish them.\n    super({tag: 'process', ...params});\n\n    const processTable: SourceTable = {\n      table: 'process',\n      joinOn: {id: this.upid},\n      // If the column is guaranteed not to have null values, we can use an INNER JOIN.\n      innerJoin: this.params?.notNull === true,\n    };\n\n    this.columns = {\n      name: {\n        column: 'name',\n        source: processTable,\n      },\n      pid: {\n        column: 'pid',\n        source: processTable,\n      },\n    };\n  }\n\n  primaryColumn(): SqlColumn {\n    return this.upid;\n  }\n\n  getTitle() {\n    if (this.params?.title !== undefined) return this.params.title;\n    return `${sqlColumnId(this.upid)} (process)`;\n  }\n\n  dependentColumns() {\n    return this.columns;\n  }\n\n  renderCell(\n    value: SqlValue,\n    manager: LegacyTableManager,\n    data: {[key: string]: SqlValue},\n  ): m.Children {\n    const upid = value;\n    const rawPid = data['pid'];\n    const rawName = data['name'];\n\n    if (upid === null) {\n      return renderStandardCell(upid, this.upid, manager);\n    }\n    if (typeof upid !== 'bigint') {\n      return wrongTypeError('upid', this.upid, upid);\n    }\n    if (rawPid !== null && typeof rawPid !== 'bigint') {\n      return wrongTypeError('pid', this.columns.pid, rawPid);\n    }\n    if (rawName !== null && typeof rawName !== 'string') {\n      return wrongTypeError('name', this.columns.name, rawName);\n    }\n\n    const name: string | undefined = rawName ?? undefined;\n    const pid: number | undefined =\n      rawPid !== null ? Number(rawPid) : undefined;\n\n    return m(\n      PopupMenu2,\n      {\n        trigger: m(\n          Anchor,\n          getProcessName({\n            name: name ?? undefined,\n            pid: pid !== null ? Number(pid) : undefined,\n          }),\n        ),\n      },\n      processRefMenuItems({upid: asUpid(Number(upid)), name, pid}),\n      m(MenuDivider),\n      m(\n        MenuItem,\n        {\n          label: 'Add filter',\n          icon: Icons.Filter,\n        },\n        m(\n          MenuItem,\n          {\n            label: 'upid',\n          },\n          getStandardFilters(upid, this.upid, manager),\n        ),\n        m(\n          MenuItem,\n          {\n            label: 'process name',\n          },\n          getStandardFilters(rawName, this.columns.name, manager),\n        ),\n        m(\n          MenuItem,\n          {\n            label: 'tid',\n          },\n          getStandardFilters(rawPid, this.columns.pid, manager),\n        ),\n      ),\n    );\n  }\n\n  aggregation(): AggregationConfig {\n    return {\n      dataType: 'nominal',\n    };\n  }\n}\n\n// ProcessIdColumn is a column type for displaying primary key of the `process` table.\n// All other references (foreign keys) should use `ProcessColumn` instead.\nexport class ProcessIdColumn extends LegacyTableColumn {\n  private columns: {pid: SqlColumn};\n\n  constructor(private upid: SqlColumn) {\n    super({});\n\n    const processTable: SourceTable = {\n      table: 'process',\n      joinOn: {id: this.upid},\n      innerJoin: true,\n    };\n\n    this.columns = {\n      pid: {\n        column: 'pid',\n        source: processTable,\n      },\n    };\n  }\n\n  primaryColumn(): SqlColumn {\n    return this.upid;\n  }\n\n  getTitle() {\n    return 'upid';\n  }\n\n  dependentColumns() {\n    return {\n      pid: this.columns.pid,\n    };\n  }\n\n  renderCell(\n    value: SqlValue,\n    manager: LegacyTableManager,\n    data: {[key: string]: SqlValue},\n  ): m.Children {\n    const upid = value;\n    const rawPid = data['pid'];\n\n    if (upid === null) {\n      return renderStandardCell(upid, this.upid, manager);\n    }\n\n    if (typeof upid !== 'bigint') {\n      throw new Error(\n        `process.upid is expected to be bigint, got ${typeof upid}`,\n      );\n    }\n\n    return m(\n      PopupMenu2,\n      {\n        trigger: m(Anchor, `${upid}`),\n      },\n\n      showProcessDetailsMenuItem(\n        asUpid(Number(upid)),\n        rawPid === null ? undefined : Number(rawPid),\n      ),\n      getStandardContextMenuItems(upid, this.upid, manager),\n    );\n  }\n\n  aggregation(): AggregationConfig {\n    return {dataType: 'nominal'};\n  }\n}\n\nexport class ProcessColumnSet extends LegacyTableColumnSet {\n  constructor(\n    private id: SqlColumn,\n    private params: ColumnSetParams & {\n      notNull?: boolean;\n    },\n  ) {\n    super();\n  }\n\n  getTitle(): string {\n    return `${this.params.title} (process)`;\n  }\n\n  initialColumns(): LegacyTableColumn[] {\n    if (this.params.startsHidden === true) return [];\n    return [new ProcessColumn(this.id)];\n  }\n\n  async discover() {\n    const column: (name: string) => SqlColumn = (name) => ({\n      column: name,\n      source: {\n        table: 'process',\n        joinOn: {id: this.id},\n      },\n      innerJoin: this.params.notNull === true,\n    });\n\n    return [\n      {\n        key: 'process',\n        column: new ProcessColumn(this.id),\n      },\n      {\n        key: 'upid',\n        column: new ProcessIdColumn(this.id),\n      },\n      {\n        key: 'pid',\n        column: new StandardColumn(column('pid'), {aggregationType: 'nominal'}),\n      },\n      {\n        key: 'name',\n        column: new StandardColumn(column('name')),\n      },\n      {\n        key: 'start_ts',\n        column: new TimestampColumn(column('start_ts')),\n      },\n      {\n        key: 'end_ts',\n        column: new TimestampColumn(column('end_ts')),\n      },\n      {\n        key: 'parent_upid',\n        column: new ProcessColumnSet(column('parent_upid'), {\n          title: 'parent_upid',\n        }),\n      },\n      {\n        key: 'uid',\n        column: new StandardColumn(column('uid'), {aggregationType: 'nominal'}),\n      },\n      {\n        key: 'android_appid',\n        column: new StandardColumn(column('android_appid'), {\n          aggregationType: 'nominal',\n        }),\n      },\n      {\n        key: 'cmdline',\n        column: new StandardColumn(column('cmdline')),\n      },\n      {\n        key: 'arg_set_id (args)',\n        column: new ArgSetColumnSet(column('arg_set_id')),\n      },\n    ];\n  }\n}\n\nclass ArgColumn extends LegacyTableColumn {\n  private displayValue: SqlColumn;\n  private stringValue: SqlColumn;\n  private intValue: SqlColumn;\n  private realValue: SqlColumn;\n\n  constructor(\n    private argSetId: SqlColumn,\n    private key: string,\n  ) {\n    super();\n\n    const argTable: SourceTable = {\n      table: 'args',\n      joinOn: {\n        arg_set_id: argSetId,\n        key: sqliteString(key),\n      },\n    };\n\n    this.displayValue = {\n      column: 'display_value',\n      source: argTable,\n    };\n    this.stringValue = {\n      column: 'string_value',\n      source: argTable,\n    };\n    this.intValue = {\n      column: 'int_value',\n      source: argTable,\n    };\n    this.realValue = {\n      column: 'real_value',\n      source: argTable,\n    };\n  }\n\n  override primaryColumn(): SqlColumn {\n    return this.displayValue;\n  }\n\n  override sortColumns(): SqlColumn[] {\n    return [this.stringValue, this.intValue, this.realValue];\n  }\n\n  override dependentColumns() {\n    return {\n      stringValue: this.stringValue,\n      intValue: this.intValue,\n      realValue: this.realValue,\n    };\n  }\n\n  getTitle() {\n    return `${sqlColumnId(this.argSetId)}[${this.key}]`;\n  }\n\n  renderCell(\n    value: SqlValue,\n    tableManager: LegacyTableManager,\n    dependentColumns: {[key: string]: SqlValue},\n  ): m.Children {\n    const strValue = dependentColumns['stringValue'];\n    const intValue = dependentColumns['intValue'];\n    const realValue = dependentColumns['realValue'];\n\n    let contextMenuItems: m.Child[] = [];\n    if (strValue !== null) {\n      contextMenuItems = getStandardContextMenuItems(\n        strValue,\n        this.stringValue,\n        tableManager,\n      );\n    } else if (intValue !== null) {\n      contextMenuItems = getStandardContextMenuItems(\n        intValue,\n        this.intValue,\n        tableManager,\n      );\n    } else if (realValue !== null) {\n      contextMenuItems = getStandardContextMenuItems(\n        realValue,\n        this.realValue,\n        tableManager,\n      );\n    } else {\n      contextMenuItems = getStandardContextMenuItems(\n        value,\n        this.displayValue,\n        tableManager,\n      );\n    }\n    return m(\n      PopupMenu2,\n      {\n        trigger: m(Anchor, displayValue(value)),\n      },\n      ...contextMenuItems,\n    );\n  }\n}\n\nexport class ArgSetColumnSet extends LegacyTableColumnSet {\n  constructor(\n    private column: SqlColumn,\n    private title?: string,\n  ) {\n    super();\n  }\n\n  getTitle(): string {\n    return this.title ?? sqlColumnId(this.column);\n  }\n\n  async discover(\n    manager: LegacyTableManager,\n  ): Promise<{key: string; column: LegacyTableColumn}[]> {\n    const queryResult = await manager.trace.engine.query(`\n      -- Encapsulate the query in a CTE to avoid clashes between filters\n      -- and columns of the 'args' table.\n      SELECT\n        DISTINCT args.key\n      FROM (${manager.getSqlQuery({arg_set_id: this.column})}) data\n      JOIN args USING (arg_set_id)\n    `);\n    const result = [];\n    const it = queryResult.iter({key: STR});\n    for (; it.valid(); it.next()) {\n      result.push({\n        key: it.key,\n        column: argTableColumn(this.column, it.key),\n      });\n    }\n    return result;\n  }\n}\n\nexport function argSqlColumn(argSetId: SqlColumn, key: string): SqlColumn {\n  return {\n    column: 'display_value',\n    source: {\n      table: 'args',\n      joinOn: {\n        arg_set_id: argSetId,\n        key: sqliteString(key),\n      },\n    },\n  };\n}\n\nexport function argTableColumn(argSetId: SqlColumn, key: string) {\n  return new ArgColumn(argSetId, key);\n}\n"]}