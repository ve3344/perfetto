{"version":3,"file":"tables.js","sourceRoot":"","sources":["../../../../src/plugins/org.chromium.OpenTableCommands/tables.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2024 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {SqlTableDescription} from '../../components/widgets/sql/legacy_table/table_description';\nimport {\n  ArgSetColumnSet,\n  DurationColumn,\n  ProcessColumn,\n  ProcessColumnSet,\n  ProcessIdColumn,\n  SchedIdColumn,\n  SliceIdColumn,\n  StandardColumn,\n  ThreadColumn,\n  ThreadColumnSet,\n  ThreadIdColumn,\n  ThreadStateIdColumn,\n  TimestampColumn,\n} from './well_known_columns';\n\nexport function getThreadTable(): SqlTableDescription {\n  return {\n    name: 'thread',\n    columns: [\n      new ThreadIdColumn('utid'),\n      new StandardColumn('tid', {aggregationType: 'nominal'}),\n      new StandardColumn('name'),\n      new TimestampColumn('start_ts'),\n      new TimestampColumn('end_ts'),\n      new ProcessColumnSet('upid', {title: 'upid', notNull: true}),\n      new StandardColumn('is_main_thread', {\n        aggregationType: 'nominal',\n      }),\n    ],\n  };\n}\n\nexport function getProcessTable(): SqlTableDescription {\n  return {\n    name: 'process',\n    columns: [\n      new ProcessIdColumn('upid'),\n      new StandardColumn('pid', {aggregationType: 'nominal'}),\n      new StandardColumn('name'),\n      new TimestampColumn('start_ts'),\n      new TimestampColumn('end_ts'),\n      new ProcessColumn('parent_upid'),\n      new StandardColumn('uid', {aggregationType: 'nominal'}),\n      new StandardColumn('android_appid', {aggregationType: 'nominal'}),\n      new StandardColumn('cmdline', {startsHidden: true}),\n      new StandardColumn('machine_id', {aggregationType: 'nominal'}),\n      new ArgSetColumnSet('arg_set_id'),\n    ],\n  };\n}\n\nexport function getSliceTable(): SqlTableDescription {\n  return {\n    imports: ['slices.slices'],\n    name: '_slice_with_thread_and_process_info',\n    displayName: 'slice',\n    columns: [\n      new SliceIdColumn('id', {notNull: true}),\n      new TimestampColumn('ts', {title: 'Timestamp'}),\n      new DurationColumn('dur', {title: 'Duration'}),\n      new DurationColumn('thread_dur', {title: 'Thread duration'}),\n      new StandardColumn('category', {title: 'Category'}),\n      new StandardColumn('name', {title: 'Name'}),\n      new StandardColumn('track_id', {\n        title: 'Track ID',\n        aggregationType: 'nominal',\n        startsHidden: true,\n      }),\n      new ThreadColumnSet('utid', {title: 'utid'}),\n      new ProcessColumnSet('upid', {title: 'upid'}),\n      new StandardColumn('depth', {title: 'Depth', startsHidden: true}),\n      new SliceIdColumn('parent_id', {\n        startsHidden: true,\n      }),\n      new ArgSetColumnSet('arg_set_id'),\n    ],\n  };\n}\n\nexport function getAndroidLogsTable(): SqlTableDescription {\n  return {\n    name: 'android_logs',\n    columns: [\n      new StandardColumn('id', {aggregationType: 'nominal'}),\n      new TimestampColumn('ts'),\n      new StandardColumn('tag'),\n      new StandardColumn('prio', {aggregationType: 'nominal'}),\n      new ThreadColumnSet('utid', {title: 'utid', notNull: true}),\n      new ProcessColumnSet(\n        {\n          column: 'upid',\n          source: {\n            table: 'thread',\n            joinOn: {utid: 'utid'},\n          },\n        },\n        {title: 'upid', notNull: true},\n      ),\n      new StandardColumn('msg'),\n    ],\n  };\n}\n\nexport function getSchedTable(): SqlTableDescription {\n  return {\n    name: 'sched',\n    columns: [\n      new SchedIdColumn('id'),\n      new TimestampColumn('ts'),\n      new DurationColumn('dur'),\n      new StandardColumn('cpu', {aggregationType: 'nominal'}),\n      new StandardColumn('priority', {aggregationType: 'nominal'}),\n      new ThreadColumnSet('utid', {title: 'utid', notNull: true}),\n      new ProcessColumnSet(\n        {\n          column: 'upid',\n          source: {\n            table: 'thread',\n            joinOn: {\n              utid: 'utid',\n            },\n            innerJoin: true,\n          },\n        },\n        {title: 'upid', notNull: true},\n      ),\n      new StandardColumn('end_state'),\n      new StandardColumn('ucpu', {\n        aggregationType: 'nominal',\n        startsHidden: true,\n      }),\n    ],\n  };\n}\n\nexport function getThreadStateTable(): SqlTableDescription {\n  return {\n    name: 'thread_state',\n    columns: [\n      new ThreadStateIdColumn('id', {notNull: true}),\n      new TimestampColumn('ts'),\n      new DurationColumn('dur'),\n      new StandardColumn('state'),\n      new StandardColumn('cpu', {aggregationType: 'nominal'}),\n      new ThreadColumnSet('utid', {title: 'utid', notNull: true}),\n      new ProcessColumnSet(\n        {\n          column: 'upid',\n          source: {\n            table: 'thread',\n            joinOn: {\n              utid: 'utid',\n            },\n            innerJoin: true,\n          },\n        },\n        {title: 'upid (process)', notNull: true},\n      ),\n      new StandardColumn('io_wait', {aggregationType: 'nominal'}),\n      new StandardColumn('blocked_function'),\n      new ThreadColumn('waker_utid', {title: 'Waker thread'}),\n      new ThreadStateIdColumn('waker_id'),\n      new StandardColumn('irq_context', {aggregationType: 'nominal'}),\n      new StandardColumn('ucpu', {\n        aggregationType: 'nominal',\n        startsHidden: true,\n      }),\n    ],\n  };\n}\n"]}