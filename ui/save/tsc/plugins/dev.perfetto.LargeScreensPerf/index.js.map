{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/plugins/dev.perfetto.LargeScreensPerf/index.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAKjC;IACE,MAAM,CAAU,EAAE,GAAG,+BAA+B,CAAC;IACrD,KAAK,CAAC,WAAW,CAAC,GAAU;QAC1B,GAAG,CAAC,QAAQ,CAAC,eAAe,CAAC;YAC3B,EAAE,EAAE,sDAAsD;YAC1D,IAAI,EAAE,4BAA4B;YAClC,QAAQ,EAAE,GAAG,EAAE;gBACb,GAAG,CAAC,SAAS,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;oBACzC,IACE,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,kBAAkB,CAAC;wBAC1C,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,mBAAmB,CAAC;wBACzC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC;wBAClC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,mCAAmC,CAAC;wBACzD,KAAK,CAAC,KAAK,CAAC,UAAU,CAAC,wBAAwB,CAAC;wBAChD,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,cAAc,CAAC;wBACpC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC;wBAC/B,KAAK,CAAC,KAAK,IAAI,2CAA2C;wBAC1D,KAAK,CAAC,KAAK,IAAI,aAAa;wBAC5B,KAAK,CAAC,KAAK,IAAI,YAAY,EAC3B,CAAC;wBACD,KAAK,CAAC,GAAG,EAAE,CAAC;oBACd,CAAC;gBACH,CAAC,CAAC,CAAC;YACL,CAAC;SACF,CAAC,CAAC;IACL,CAAC;;AAzBH,4BA0BC","sourcesContent":["// Copyright (C) 2023 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Trace} from '../../public/trace';\nimport {PerfettoPlugin} from '../../public/plugin';\n\nexport default class implements PerfettoPlugin {\n  static readonly id = 'dev.perfetto.LargeScreensPerf';\n  async onTraceLoad(ctx: Trace): Promise<void> {\n    ctx.commands.registerCommand({\n      id: 'dev.perfetto.LargeScreensPerf#PinUnfoldLatencyTracks',\n      name: 'Pin: Unfold latency tracks',\n      callback: () => {\n        ctx.workspace.flatTracks.forEach((track) => {\n          if (\n            !!track.title.includes('UnfoldTransition') ||\n            track.title.includes('Screen on blocked') ||\n            track.title.includes('hingeAngle') ||\n            track.title.includes('UnfoldLightRevealOverlayAnimation') ||\n            track.title.startsWith('waitForAllWindowsDrawn') ||\n            track.title.endsWith('UNFOLD_ANIM>') ||\n            track.title.endsWith('UNFOLD>') ||\n            track.title == 'Waiting for KeyguardDrawnCallback#onDrawn' ||\n            track.title == 'FoldedState' ||\n            track.title == 'FoldUpdate'\n          ) {\n            track.pin();\n          }\n        });\n      },\n    });\n  }\n}\n"]}