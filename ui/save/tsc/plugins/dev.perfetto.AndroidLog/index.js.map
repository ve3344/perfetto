{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/plugins/dev.perfetto.AndroidLog/index.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2021 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport m from 'mithril';\nimport {LogFilteringCriteria, LogPanel} from './logs_panel';\nimport {ANDROID_LOGS_TRACK_KIND} from '../../public/track_kinds';\nimport {Trace} from '../../public/trace';\nimport {PerfettoPlugin} from '../../public/plugin';\nimport {NUM} from '../../trace_processor/query_result';\nimport {AndroidLogTrack} from './logs_track';\nimport {exists} from '../../base/utils';\nimport {TrackNode} from '../../public/workspace';\n\nconst VERSION = 1;\n\nconst DEFAULT_STATE: AndroidLogPluginState = {\n  version: VERSION,\n  filter: {\n    // The first two log priorities are ignored.\n    minimumLevel: 2,\n    tags: [],\n    textEntry: '',\n    hideNonMatching: true,\n  },\n};\n\ninterface AndroidLogPluginState {\n  version: number;\n  filter: LogFilteringCriteria;\n}\n\nexport default class implements PerfettoPlugin {\n  static readonly id = 'dev.perfetto.AndroidLog';\n  async onTraceLoad(ctx: Trace): Promise<void> {\n    const store = ctx.mountStore<AndroidLogPluginState>((init) => {\n      return exists(init) && (init as {version: unknown}).version === VERSION\n        ? (init as AndroidLogPluginState)\n        : DEFAULT_STATE;\n    });\n\n    const result = await ctx.engine.query(\n      `select count(1) as cnt from android_logs`,\n    );\n    const logCount = result.firstRow({cnt: NUM}).cnt;\n    const uri = 'perfetto.AndroidLog';\n    const title = 'Android logs';\n    if (logCount > 0) {\n      ctx.tracks.registerTrack({\n        uri,\n        title,\n        tags: {kind: ANDROID_LOGS_TRACK_KIND},\n        track: new AndroidLogTrack(ctx.engine),\n      });\n      const track = new TrackNode({title, uri});\n      ctx.workspace.addChildInOrder(track);\n    }\n\n    const androidLogsTabUri = 'perfetto.AndroidLog#tab';\n\n    // Eternal tabs should always be available even if there is nothing to show\n    const filterStore = store.createSubStore(\n      ['filter'],\n      (x) => x as LogFilteringCriteria,\n    );\n\n    ctx.tabs.registerTab({\n      isEphemeral: false,\n      uri: androidLogsTabUri,\n      content: {\n        render: () => m(LogPanel, {filterStore: filterStore, trace: ctx}),\n        getTitle: () => 'Android Logs',\n      },\n    });\n\n    if (logCount > 0) {\n      ctx.tabs.addDefaultTab(androidLogsTabUri);\n    }\n\n    ctx.commands.registerCommand({\n      id: 'perfetto.AndroidLog#ShowLogsTab',\n      name: 'Show android logs tab',\n      callback: () => {\n        ctx.tabs.showTab(androidLogsTabUri);\n      },\n    });\n  }\n}\n"]}