{"version":3,"file":"table_showcase.js","sourceRoot":"","sources":["../../../../src/plugins/dev.perfetto.WidgetsPage/table_showcase.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;;;AAEjC,8DAAwB;AACxB,+CAM6B;AAc7B,MAAM,aAAa,GAA0B;IAC3C;QACE,EAAE,EAAE,CAAC;QACL,IAAI,EAAE,YAAY;QAClB,IAAI,EAAE,IAAI;KACX;IACD;QACE,EAAE,EAAE,CAAC;QACL,IAAI,EAAE,YAAY;QAClB,IAAI,EAAE,IAAI;KACX;IACD;QACE,EAAE,EAAE,CAAC;QACL,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE,IAAI;KACX;CACF,CAAC;AAEF,MAAM,OAAO,GAA4C;IACvD,IAAA,oBAAY,EAAC,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;IAC/B,IAAA,oBAAY,EAAC,MAAM,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;IACnC,IAAA,oBAAY,EAAC,MAAM,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;CACpC,CAAC;AAEF,MAAa,aAAa;IACxB,IAAI,GAAG,IAAI,iBAAS,CAAC,aAAa,CAAC,CAAC;IAEpC,IAAI;QACF,OAAO,IAAA,iBAAC,EAAC,aAAK,EAAE;YACd,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,OAAO;SACR,CAAC,CAAC;IACL,CAAC;CACF;AATD,sCASC","sourcesContent":["// Copyright (C) 2023 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport m from 'mithril';\nimport {\n  ColumnDescriptor,\n  numberColumn,\n  stringColumn,\n  Table,\n  TableData,\n} from '../../widgets/table';\n\n// This file serves as an example of a table component present in the widgets\n// showcase. Since table is somewhat complicated component that requires some\n// setup spread across several declarations, all the necessary code resides in a\n// separate file (this one) and provides a no-argument wrapper component that\n// can be used in the widgets showcase directly.\n\ninterface ProgrammingLanguage {\n  id: number;\n  name: string;\n  year: number;\n}\n\nconst languagesList: ProgrammingLanguage[] = [\n  {\n    id: 1,\n    name: 'TypeScript',\n    year: 2012,\n  },\n  {\n    id: 2,\n    name: 'JavaScript',\n    year: 1995,\n  },\n  {\n    id: 3,\n    name: 'Lean',\n    year: 2013,\n  },\n];\n\nconst columns: ColumnDescriptor<ProgrammingLanguage>[] = [\n  numberColumn('ID', (x) => x.id),\n  stringColumn('Name', (x) => x.name),\n  numberColumn('Year', (x) => x.year),\n];\n\nexport class TableShowcase implements m.ClassComponent {\n  data = new TableData(languagesList);\n\n  view(): m.Child {\n    return m(Table, {\n      data: this.data,\n      columns,\n    });\n  }\n}\n"]}