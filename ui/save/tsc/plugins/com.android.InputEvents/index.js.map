{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/plugins/com.android.InputEvents/index.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAEjC,qEAAwD;AAGxD,iFAAgF;AAChF,sDAAiD;AACjD,kEAA6E;AAE7E;IACE,MAAM,CAAU,EAAE,GAAG,yBAAyB,CAAC;IAE/C,KAAK,CAAC,WAAW,CAAC,GAAU;QAC1B,MAAM,GAAG,GAAG,MAAM,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC;;;;;KAKlC,CAAC,CAAC;QACH,IAAI,GAAG,CAAC,QAAQ,CAAC,EAAC,GAAG,EAAE,mBAAI,EAAC,CAAC,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC;YACxC,OAAO;QACT,CAAC;QAED,MAAM,UAAU,GAAG;;;;;;;OAOhB,CAAC;QAEJ,MAAM,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,wCAAwC,CAAC,CAAC;QACjE,MAAM,GAAG,GAAG,0CAA0C,CAAC;QACvD,MAAM,KAAK,GAAG,cAAc,CAAC;QAC7B,MAAM,KAAK,GAAG,MAAM,IAAA,yCAAqB,EAAC;YACxC,KAAK,EAAE,GAAG;YACV,GAAG;YACH,IAAI,EAAE;gBACJ,SAAS,EAAE,UAAU;aACtB;SACF,CAAC,CAAC;QACH,GAAG,CAAC,MAAM,CAAC,aAAa,CAAC;YACvB,GAAG;YACH,KAAK,EAAE,KAAK;YACZ,KAAK;SACN,CAAC,CAAC;QACH,MAAM,IAAI,GAAG,IAAI,qBAAS,CAAC,EAAC,GAAG,EAAE,KAAK,EAAC,CAAC,CAAC;QACzC,MAAM,KAAK,GAAG,IAAA,iDAA+B,EAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAC7D,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;;AAzCH,4BA0CC","sourcesContent":["// Copyright (C) 2024 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {LONG} from '../../trace_processor/query_result';\nimport {PerfettoPlugin} from '../../public/plugin';\nimport {Trace} from '../../public/trace';\nimport {createQuerySliceTrack} from '../../components/tracks/query_slice_track';\nimport {TrackNode} from '../../public/workspace';\nimport {getOrCreateUserInteractionGroup} from '../../public/standard_groups';\n\nexport default class implements PerfettoPlugin {\n  static readonly id = 'com.android.InputEvents';\n\n  async onTraceLoad(ctx: Trace): Promise<void> {\n    const cnt = await ctx.engine.query(`\n      SELECT\n        count(*) as cnt\n      FROM slice\n      WHERE name GLOB 'UnwantedInteractionBlocker::notifyMotion*'\n    `);\n    if (cnt.firstRow({cnt: LONG}).cnt == 0n) {\n      return;\n    }\n\n    const SQL_SOURCE = `\n      SELECT\n        read_time as ts,\n        end_to_end_latency_dur as dur,\n        CONCAT(event_type, ' ', event_action, ': ', process_name, ' (', input_event_id, ')') as name\n      FROM android_input_events\n      WHERE end_to_end_latency_dur IS NOT NULL\n      `;\n\n    await ctx.engine.query('INCLUDE PERFETTO MODULE android.input;');\n    const uri = 'com.android.InputEvents#InputEventsTrack';\n    const title = 'Input Events';\n    const track = await createQuerySliceTrack({\n      trace: ctx,\n      uri,\n      data: {\n        sqlSource: SQL_SOURCE,\n      },\n    });\n    ctx.tracks.registerTrack({\n      uri,\n      title: title,\n      track,\n    });\n    const node = new TrackNode({uri, title});\n    const group = getOrCreateUserInteractionGroup(ctx.workspace);\n    group.addChildInOrder(node);\n  }\n}\n"]}