{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/plugins/dev.perfetto.Debug/index.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAEjC,uEAG8C;AAG9C,4CAAwC;AAExC;IACE,MAAM,CAAU,EAAE,GAAG,0BAA0B,CAAC;IAChD,KAAK,CAAC,WAAW,CAAC,GAAU;QAC1B,GAAG,CAAC,QAAQ,CAAC,eAAe,CAAC;YAC3B,EAAE,EAAE,yCAAyC;YAC7C,IAAI,EAAE,uBAAuB;YAC7B,QAAQ,EAAE,KAAK,EAAE,GAAY,EAAE,EAAE;gBAC/B,qEAAqE;gBACrE,wEAAwE;gBACxE,mDAAmD;gBACnD,MAAM,KAAK,GAAG,MAAM,wBAAwB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;gBACvD,IAAI,IAAA,cAAM,EAAC,KAAK,CAAC,EAAE,CAAC;oBAClB,MAAM,IAAA,iCAAkB,EAAC;wBACvB,KAAK,EAAE,GAAG;wBACV,IAAI,EAAE;4BACJ,SAAS,EAAE,KAAK;yBACjB;wBACD,KAAK,EAAE,mBAAmB;qBAC3B,CAAC,CAAC;gBACL,CAAC;YACH,CAAC;SACF,CAAC,CAAC;QAEH,GAAG,CAAC,QAAQ,CAAC,eAAe,CAAC;YAC3B,EAAE,EAAE,2CAA2C;YAC/C,IAAI,EAAE,yBAAyB;YAC/B,QAAQ,EAAE,KAAK,EAAE,GAAY,EAAE,EAAE;gBAC/B,MAAM,KAAK,GAAG,MAAM,wBAAwB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;gBACvD,IAAI,IAAA,cAAM,EAAC,KAAK,CAAC,EAAE,CAAC;oBAClB,MAAM,IAAA,mCAAoB,EAAC;wBACzB,KAAK,EAAE,GAAG;wBACV,IAAI,EAAE;4BACJ,SAAS,EAAE,KAAK;yBACjB;wBACD,KAAK,EAAE,mBAAmB;qBAC3B,CAAC,CAAC;gBACL,CAAC;YACH,CAAC;SACF,CAAC,CAAC;IACL,CAAC;;AAvCH,4BAwCC;AAED,4EAA4E;AAC5E,gFAAgF;AAChF,sCAAsC;AACtC,KAAK,UAAU,wBAAwB,CACrC,GAAU,EACV,GAAY;IAEZ,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE,CAAC;QAC5B,OAAO,GAAG,CAAC;IACb,CAAC;SAAM,CAAC;QACN,OAAO,MAAM,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;IACtD,CAAC;AACH,CAAC","sourcesContent":["// Copyright (C) 2023 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {\n  addDebugCounterTrack,\n  addDebugSliceTrack,\n} from '../../components/tracks/debug_tracks';\nimport {Trace} from '../../public/trace';\nimport {PerfettoPlugin} from '../../public/plugin';\nimport {exists} from '../../base/utils';\n\nexport default class implements PerfettoPlugin {\n  static readonly id = 'dev.perfetto.DebugTracks';\n  async onTraceLoad(ctx: Trace): Promise<void> {\n    ctx.commands.registerCommand({\n      id: 'perfetto.DebugTracks#addDebugSliceTrack',\n      name: 'Add debug slice track',\n      callback: async (arg: unknown) => {\n        // This command takes a query and creates a debug track out of it The\n        // query can be passed in using the first arg, or if this is not defined\n        // or is the wrong type, we prompt the user for it.\n        const query = await getStringFromArgOrPrompt(ctx, arg);\n        if (exists(query)) {\n          await addDebugSliceTrack({\n            trace: ctx,\n            data: {\n              sqlSource: query,\n            },\n            title: 'Debug slice track',\n          });\n        }\n      },\n    });\n\n    ctx.commands.registerCommand({\n      id: 'perfetto.DebugTracks#addDebugCounterTrack',\n      name: 'Add debug counter track',\n      callback: async (arg: unknown) => {\n        const query = await getStringFromArgOrPrompt(ctx, arg);\n        if (exists(query)) {\n          await addDebugCounterTrack({\n            trace: ctx,\n            data: {\n              sqlSource: query,\n            },\n            title: 'Debug slice track',\n          });\n        }\n      },\n    });\n  }\n}\n\n// If arg is a string, return it, otherwise prompt the user for a string. An\n// exception is thrown if the prompt is cancelled, so this function handles this\n// and returns undefined in this case.\nasync function getStringFromArgOrPrompt(\n  ctx: Trace,\n  arg: unknown,\n): Promise<string | undefined> {\n  if (typeof arg === 'string') {\n    return arg;\n  } else {\n    return await ctx.omnibox.prompt('Enter a query...');\n  }\n}\n"]}