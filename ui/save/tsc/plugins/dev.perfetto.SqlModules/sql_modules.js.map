{"version":3,"file":"sql_modules.js","sourceRoot":"","sources":["../../../../src/plugins/dev.perfetto.SqlModules/sql_modules.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC","sourcesContent":["// Copyright (C) 2024 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {\n  LegacyTableColumn,\n  LegacyTableColumnSet,\n} from '../../components/widgets/sql/legacy_table/column';\nimport {SqlTableDescription} from '../../components/widgets/sql/legacy_table/table_description';\nimport {SimpleColumn} from '../../components/widgets/sql/table/table';\n\n// Handles the access to all of the Perfetto SQL modules accessible to Trace\n//  Processor.\nexport interface SqlModules {\n  // Returns names of all tables/views between all loaded Perfetto SQL modules.\n  listTables(): string[];\n\n  // Returns Perfetto SQL table/view if it was loaded in one of the Perfetto\n  // SQL module.\n  getModuleForTable(tableName: string): SqlModule | undefined;\n}\n\n// Handles the access to a specific Perfetto SQL Package. Package consists of\n// Perfetto SQL modules.\nexport interface SqlPackage {\n  readonly name: string;\n  readonly modules: SqlModule[];\n\n  // Returns names of all tables/views in this package.\n  listTables(): string[];\n\n  // Returns sqlModule containing table with provided name.\n  getModuleForTable(tableName: string): SqlModule | undefined;\n\n  // Returns sqlTableDescription of the table with provided name.\n  getSqlTableDescription(tableName: string): SqlTableDescription | undefined;\n}\n\n// Handles the access to a specific Perfetto SQL module.\nexport interface SqlModule {\n  readonly includeKey: string;\n  readonly dataObjects: SqlTable[];\n  readonly functions: SqlFunction[];\n  readonly tableFunctions: SqlTableFunction[];\n  readonly macros: SqlMacro[];\n\n  // Returns sqlTable with provided name.\n  getTable(tableName: string): SqlTable | undefined;\n\n  // Returns sqlTableDescription of the table with provided name.\n  getSqlTableDescription(tableName: string): SqlTableDescription | undefined;\n}\n\n// The definition of Perfetto SQL table/view.\nexport interface SqlTable {\n  readonly name: string;\n  readonly description: string;\n  readonly type: string;\n  readonly columns: SqlColumn[];\n\n  // Returns all columns as TableColumns.\n  getTableColumns(): (LegacyTableColumn | LegacyTableColumnSet)[];\n}\n\n// The definition of Perfetto SQL function.\nexport interface SqlFunction {\n  readonly name: string;\n  readonly description: string;\n  readonly args: SqlArgument[];\n  readonly returnType: string;\n  readonly returnDesc: string;\n}\n\n// The definition of Perfetto SQL table function.\nexport interface SqlTableFunction {\n  readonly name: string;\n  readonly description: string;\n  readonly args: SqlArgument[];\n  readonly returnCols: SqlColumn[];\n}\n\n// The definition of Perfetto SQL macro.\nexport interface SqlMacro {\n  readonly name: string;\n  readonly description: string;\n  readonly args: SqlArgument[];\n  readonly returnType: string;\n}\n\n// The definition of Perfetto SQL column.\nexport interface SqlColumn {\n  readonly name: string;\n  readonly description: string;\n  readonly type: string;\n\n  // Translates this column to SimpleColumn.\n  asSimpleColumn(tableName: string): SimpleColumn;\n}\n\n// The definition of Perfetto SQL argument. Can be used for functions, table\n// functions or macros.\nexport interface SqlArgument {\n  readonly name: string;\n  readonly description: string;\n  readonly type: string;\n}\n"]}