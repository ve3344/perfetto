{"version":3,"file":"sql_modules_impl.js","sourceRoot":"","sources":["../../../../src/plugins/dev.perfetto.SqlModules/sql_modules_impl.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2024 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {z} from 'zod';\nimport {\n  SqlModules,\n  SqlColumn,\n  SqlFunction,\n  SqlArgument,\n  SqlMacro,\n  SqlModule,\n  SqlPackage,\n  SqlTable,\n  SqlTableFunction,\n} from './sql_modules';\nimport {SqlTableDescription} from '../../components/widgets/sql/legacy_table/table_description';\nimport {\n  FromSimpleColumn,\n  LegacyTableColumn,\n  LegacyTableColumnSet,\n} from '../../components/widgets/sql/legacy_table/column';\nimport {\n  createDurationColumn,\n  createProcessIdColumn,\n  createSchedIdColumn,\n  createSliceIdColumn,\n  createStandardColumn,\n  createThreadIdColumn,\n  createThreadStateIdColumn,\n  createTimestampColumn,\n  SimpleColumn,\n} from '../../components/widgets/sql/table/table';\n\nexport class SqlModulesImpl implements SqlModules {\n  readonly packages: SqlPackage[];\n\n  constructor(docs: SqlModulesDocsSchema) {\n    this.packages = docs.map((json) => new StdlibPackageImpl(json));\n  }\n\n  listTables(): string[] {\n    return this.packages.flatMap((p) => p.listTables());\n  }\n\n  getModuleForTable(tableName: string): SqlModule | undefined {\n    for (const stdlibPackage of this.packages) {\n      const maybeTable = stdlibPackage.getModuleForTable(tableName);\n      if (maybeTable) {\n        return maybeTable;\n      }\n    }\n    return undefined;\n  }\n}\n\nexport class StdlibPackageImpl implements SqlPackage {\n  readonly name: string;\n  readonly modules: SqlModule[];\n\n  constructor(docs: DocsPackageSchemaType) {\n    this.name = docs.name;\n    this.modules = [];\n    for (const moduleJson of docs.modules) {\n      this.modules.push(new StdlibModuleImpl(moduleJson));\n    }\n  }\n\n  getModuleForTable(tableName: string): SqlModule | undefined {\n    for (const module of this.modules) {\n      for (const dataObj of module.dataObjects) {\n        if (dataObj.name == tableName) {\n          return module;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  listTables(): string[] {\n    return this.modules.flatMap((module) =>\n      module.dataObjects.map((dataObj) => dataObj.name),\n    );\n  }\n\n  getSqlTableDescription(tableName: string): SqlTableDescription | undefined {\n    for (const module of this.modules) {\n      for (const dataObj of module.dataObjects) {\n        if (dataObj.name == tableName) {\n          return module.getSqlTableDescription(tableName);\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\nexport class StdlibModuleImpl implements SqlModule {\n  readonly includeKey: string;\n  readonly dataObjects: SqlTable[];\n  readonly functions: SqlFunction[];\n  readonly tableFunctions: SqlTableFunction[];\n  readonly macros: SqlMacro[];\n\n  constructor(docs: DocsModuleSchemaType) {\n    this.includeKey = docs.module_name;\n    this.dataObjects = docs.data_objects.map(\n      (json) => new StdlibDataObjectImpl(json),\n    );\n    this.functions = docs.functions.map((json) => new StdlibFunctionImpl(json));\n    this.tableFunctions = docs.table_functions.map(\n      (json) => new StdlibTableFunctionImpl(json),\n    );\n    this.macros = docs.macros.map((json) => new StdlibMacroImpl(json));\n  }\n\n  getTable(tableName: string): SqlTable | undefined {\n    for (const obj of this.dataObjects) {\n      if (obj.name == tableName) {\n        return obj;\n      }\n    }\n    return undefined;\n  }\n\n  getSqlTableDescription(tableName: string): SqlTableDescription | undefined {\n    const sqlTable = this.getTable(tableName);\n    if (sqlTable === undefined) {\n      return undefined;\n    }\n    return {\n      imports: [this.includeKey],\n      name: sqlTable.name,\n      columns: sqlTable.getTableColumns(),\n    };\n  }\n}\n\nclass StdlibMacroImpl implements SqlMacro {\n  readonly name: string;\n  readonly summaryDesc: string;\n  readonly description: string;\n  readonly args: SqlArgument[];\n  readonly returnType: string;\n\n  constructor(docs: DocsMacroSchemaType) {\n    this.name = docs.name;\n    this.summaryDesc = docs.summary_desc;\n    this.description = docs.desc;\n    this.returnType = docs.return_type;\n    this.args = [];\n    this.args = docs.args.map((json) => new StdlibFunctionArgImpl(json));\n  }\n}\n\nclass StdlibTableFunctionImpl implements SqlTableFunction {\n  readonly name: string;\n  readonly summaryDesc: string;\n  readonly description: string;\n  readonly args: SqlArgument[];\n  readonly returnCols: SqlColumn[];\n\n  constructor(docs: DocsTableFunctionSchemaType) {\n    this.name = docs.name;\n    this.summaryDesc = docs.summary_desc;\n    this.description = docs.desc;\n    this.args = docs.args.map((json) => new StdlibFunctionArgImpl(json));\n    this.returnCols = docs.cols.map((json) => new StdlibColumnImpl(json));\n  }\n}\n\nclass StdlibFunctionImpl implements SqlFunction {\n  readonly name: string;\n  readonly summaryDesc: string;\n  readonly description: string;\n  readonly args: SqlArgument[];\n  readonly returnType: string;\n  readonly returnDesc: string;\n\n  constructor(docs: DocsFunctionSchemaType) {\n    this.name = docs.name;\n    this.summaryDesc = docs.summary_desc;\n    this.description = docs.desc;\n    this.returnType = docs.return_type;\n    this.returnDesc = docs.return_desc;\n    this.args = docs.args.map((json) => new StdlibFunctionArgImpl(json));\n  }\n}\n\nclass StdlibDataObjectImpl implements SqlTable {\n  name: string;\n  description: string;\n  type: string;\n  columns: SqlColumn[];\n\n  constructor(docs: DocsDataObjectSchemaType) {\n    this.name = docs.name;\n    this.description = docs.desc;\n    this.type = docs.type;\n    this.columns = docs.cols.map((json) => new StdlibColumnImpl(json));\n  }\n\n  getTableColumns(): (LegacyTableColumn | LegacyTableColumnSet)[] {\n    return this.columns.map(\n      (col) => new FromSimpleColumn(col.asSimpleColumn(this.name)),\n    );\n  }\n}\n\nclass StdlibColumnImpl implements SqlColumn {\n  name: string;\n  type: string;\n  description: string;\n\n  constructor(docs: DocsArgOrColSchemaType) {\n    this.type = docs.type;\n    this.description = docs.desc;\n    this.name = docs.name;\n  }\n\n  asSimpleColumn(tableName: string): SimpleColumn {\n    if (this.type === 'TIMESTAMP') {\n      return createTimestampColumn(this.name);\n    }\n    if (this.type === 'DURATION') {\n      return createDurationColumn(this.name);\n    }\n\n    if (this.name === 'ID') {\n      if (tableName === 'slice') {\n        return createSliceIdColumn(this.name);\n      }\n      if (tableName === 'thread') {\n        return createThreadIdColumn(this.name);\n      }\n      if (tableName === 'process') {\n        return createProcessIdColumn(this.name);\n      }\n      if (tableName === 'thread_state') {\n        return createThreadStateIdColumn(this.name);\n      }\n      if (tableName === 'sched') {\n        return createSchedIdColumn(this.name);\n      }\n      return createStandardColumn(this.name);\n    }\n\n    if (this.type === 'JOINID(slice.id)') {\n      return createSliceIdColumn(this.name);\n    }\n    if (this.type === 'JOINID(thread.id)') {\n      return createThreadIdColumn(this.name);\n    }\n    if (this.type === 'JOINID(process.id)') {\n      return createProcessIdColumn(this.name);\n    }\n    if (this.type === 'JOINID(thread_state.id)') {\n      return createThreadStateIdColumn(this.name);\n    }\n    if (this.type === 'JOINID(sched.id)') {\n      return createSchedIdColumn(this.name);\n    }\n    return createStandardColumn(this.name);\n  }\n}\n\nclass StdlibFunctionArgImpl implements SqlArgument {\n  name: string;\n  description: string;\n  type: string;\n\n  constructor(docs: DocsArgOrColSchemaType) {\n    this.type = docs.type;\n    this.description = docs.desc;\n    this.name = docs.name;\n  }\n}\n\nconst ARG_OR_COL_SCHEMA = z.object({\n  name: z.string(),\n  type: z.string(),\n  desc: z.string(),\n});\ntype DocsArgOrColSchemaType = z.infer<typeof ARG_OR_COL_SCHEMA>;\n\nconst DATA_OBJECT_SCHEMA = z.object({\n  name: z.string(),\n  desc: z.string(),\n  summary_desc: z.string(),\n  type: z.string(),\n  cols: z.array(ARG_OR_COL_SCHEMA),\n});\ntype DocsDataObjectSchemaType = z.infer<typeof DATA_OBJECT_SCHEMA>;\n\nconst FUNCTION_SCHEMA = z.object({\n  name: z.string(),\n  desc: z.string(),\n  summary_desc: z.string(),\n  args: z.array(ARG_OR_COL_SCHEMA),\n  return_type: z.string(),\n  return_desc: z.string(),\n});\ntype DocsFunctionSchemaType = z.infer<typeof FUNCTION_SCHEMA>;\n\nconst TABLE_FUNCTION_SCHEMA = z.object({\n  name: z.string(),\n  desc: z.string(),\n  summary_desc: z.string(),\n  args: z.array(ARG_OR_COL_SCHEMA),\n  cols: z.array(ARG_OR_COL_SCHEMA),\n});\ntype DocsTableFunctionSchemaType = z.infer<typeof TABLE_FUNCTION_SCHEMA>;\n\nconst MACRO_SCHEMA = z.object({\n  name: z.string(),\n  desc: z.string(),\n  summary_desc: z.string(),\n  return_desc: z.string(),\n  return_type: z.string(),\n  args: z.array(ARG_OR_COL_SCHEMA),\n});\ntype DocsMacroSchemaType = z.infer<typeof MACRO_SCHEMA>;\n\nconst MODULE_SCHEMA = z.object({\n  module_name: z.string(),\n  data_objects: z.array(DATA_OBJECT_SCHEMA),\n  functions: z.array(FUNCTION_SCHEMA),\n  table_functions: z.array(TABLE_FUNCTION_SCHEMA),\n  macros: z.array(MACRO_SCHEMA),\n});\ntype DocsModuleSchemaType = z.infer<typeof MODULE_SCHEMA>;\n\nconst PACKAGE_SCHEMA = z.object({\n  name: z.string(),\n  modules: z.array(MODULE_SCHEMA),\n});\ntype DocsPackageSchemaType = z.infer<typeof PACKAGE_SCHEMA>;\n\nexport const SQL_MODULES_DOCS_SCHEMA = z.array(PACKAGE_SCHEMA);\nexport type SqlModulesDocsSchema = z.infer<typeof SQL_MODULES_DOCS_SCHEMA>;\n"]}