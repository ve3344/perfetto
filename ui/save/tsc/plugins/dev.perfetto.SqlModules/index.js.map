{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/plugins/dev.perfetto.SqlModules/index.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAEjC,8CAA2C;AAC3C,gDAAgD;AAIhD,yDAA2E;AAC3E,4DAAuD;AAEvD;IACE,MAAM,CAAU,EAAE,GAAG,yBAAyB,CAAC;IACvC,UAAU,CAAc;IAEhC,KAAK,CAAC,WAAW,CAAC,GAAU;QAC1B,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,IAAA,iBAAQ,EAAC,kBAAkB,CAAC,CAAC,CAAC;QACvD,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC;QAC/B,MAAM,IAAI,GAAG,0CAAuB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACjD,MAAM,UAAU,GAAG,IAAI,iCAAc,CAAC,IAAI,CAAC,CAAC;QAC5C,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAE7B,GAAG,CAAC,QAAQ,CAAC,eAAe,CAAC;YAC3B,EAAE,EAAE,8BAA8B;YAClC,IAAI,EAAE,eAAe;YACrB,QAAQ,EAAE,KAAK,IAAI,EAAE;gBACnB,MAAM,MAAM,GAAG,UAAU,CAAC,UAAU,EAAE,CAAC;gBACvC,MAAM,SAAS,GAAG,MAAM,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,mBAAmB,EAAE,MAAM,CAAC,CAAC;gBACxE,IAAI,SAAS,KAAK,SAAS,EAAE,CAAC;oBAC5B,OAAO;gBACT,CAAC;gBACD,MAAM,MAAM,GAAG,UAAU,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC;gBACvD,IAAI,MAAM,KAAK,SAAS,EAAE,CAAC;oBACzB,OAAO;gBACT,CAAC;gBACD,MAAM,QAAQ,GAAG,MAAM,CAAC,sBAAsB,CAAC,SAAS,CAAC,CAAC;gBAC1D,QAAQ;oBACN,uBAAU,CAAC,oBAAoB,CAAC,GAAG,EAAE;wBACnC,KAAK,EAAE,QAAQ;qBAChB,CAAC,CAAC;YACP,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,aAAa;QACX,OAAO,IAAA,sBAAY,EAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACvC,CAAC;;AAnCH,4BAoCC","sourcesContent":["// Copyright (C) 2024 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {assetSrc} from '../../base/assets';\nimport {assertExists} from '../../base/logging';\nimport {PerfettoPlugin} from '../../public/plugin';\nimport {Trace} from '../../public/trace';\nimport {SqlModules} from './sql_modules';\nimport {SQL_MODULES_DOCS_SCHEMA, SqlModulesImpl} from './sql_modules_impl';\nimport {extensions} from '../../components/extensions';\n\nexport default class implements PerfettoPlugin {\n  static readonly id = 'dev.perfetto.SqlModules';\n  private sqlModules?: SqlModules;\n\n  async onTraceLoad(ctx: Trace) {\n    const resp = await fetch(assetSrc('stdlib_docs.json'));\n    const json = await resp.json();\n    const docs = SQL_MODULES_DOCS_SCHEMA.parse(json);\n    const sqlModules = new SqlModulesImpl(docs);\n    this.sqlModules = sqlModules;\n\n    ctx.commands.registerCommand({\n      id: 'perfetto.OpenSqlModulesTable',\n      name: 'Open table...',\n      callback: async () => {\n        const tables = sqlModules.listTables();\n        const tableName = await ctx.omnibox.prompt('Choose a table...', tables);\n        if (tableName === undefined) {\n          return;\n        }\n        const module = sqlModules.getModuleForTable(tableName);\n        if (module === undefined) {\n          return;\n        }\n        const sqlTable = module.getSqlTableDescription(tableName);\n        sqlTable &&\n          extensions.addLegacySqlTableTab(ctx, {\n            table: sqlTable,\n          });\n      },\n    });\n  }\n\n  getSqlModules() {\n    return assertExists(this.sqlModules);\n  }\n}\n"]}