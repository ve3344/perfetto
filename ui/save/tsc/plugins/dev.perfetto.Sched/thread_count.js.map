{"version":3,"file":"thread_count.js","sourceRoot":"","sources":["../../../../src/plugins/dev.perfetto.Sched/thread_count.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;;AAEjC,mFAGoD;AAGpD,MAAe,gBAAiB,SAAQ,qCAAgB;IACtD,YAAY,KAAY,EAAE,GAAW;QACnC,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IACpB,CAAC;IAES,wBAAwB;QAChC,MAAM,OAAO,GAAG,KAAK,CAAC,wBAAwB,EAAE,CAAC;QACjD,OAAO,CAAC,cAAc,GAAG,QAAQ,CAAC;QAClC,OAAO,CAAC,MAAM,GAAG,UAAU,CAAC;QAC5B,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,KAAK,CAAC,MAAM;QACV,MAAM,IAAI,CAAC,MAAM,CAAC,KAAK,CACrB,wDAAwD,CACzD,CAAC;IACJ,CAAC;CACF;AAED,MAAa,wBAAyB,SAAQ,gBAAgB;IAC5D,YAAY;QACV,OAAO;;;;;KAKN,CAAC;IACJ,CAAC;CACF;AATD,4DASC;AAED,MAAa,oCAAqC,SAAQ,gBAAgB;IACxE,YAAY;QACV,OAAO;;;;;KAKN,CAAC;IACJ,CAAC;CACF;AATD,oFASC","sourcesContent":["// Copyright (C) 2023 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {\n  BaseCounterTrack,\n  CounterOptions,\n} from '../../components/tracks/base_counter_track';\nimport {Trace} from '../../public/trace';\n\nabstract class ThreadCountTrack extends BaseCounterTrack {\n  constructor(trace: Trace, uri: string) {\n    super(trace, uri);\n  }\n\n  protected getDefaultCounterOptions(): CounterOptions {\n    const options = super.getDefaultCounterOptions();\n    options.yRangeRounding = 'strict';\n    options.yRange = 'viewport';\n    return options;\n  }\n\n  async onInit() {\n    await this.engine.query(\n      `INCLUDE PERFETTO MODULE sched.thread_level_parallelism`,\n    );\n  }\n}\n\nexport class RunnableThreadCountTrack extends ThreadCountTrack {\n  getSqlSource() {\n    return `\n      select\n        ts,\n        runnable_thread_count as value\n      from sched_runnable_thread_count\n    `;\n  }\n}\n\nexport class UninterruptibleSleepThreadCountTrack extends ThreadCountTrack {\n  getSqlSource() {\n    return `\n      select\n        ts,\n        uninterruptible_sleep_thread_count as value\n      from sched_uninterruptible_sleep_thread_count\n    `;\n  }\n}\n"]}