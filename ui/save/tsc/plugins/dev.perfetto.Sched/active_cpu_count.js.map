{"version":3,"file":"active_cpu_count.js","sourceRoot":"","sources":["../../../../src/plugins/dev.perfetto.Sched/active_cpu_count.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;;;AAEjC,8DAAwB;AACxB,8DAAgD;AAChD,0DAAqD;AACrD,mFAGoD;AAEpD,iDAA4C;AAG5C,IAAY,OAIX;AAJD,WAAY,OAAO;IACjB,sBAAW,CAAA;IACX,sBAAW,CAAA;IACX,4BAAiB,CAAA;AACnB,CAAC,EAJW,OAAO,uBAAP,OAAO,QAIlB;AAED,MAAa,mBAAoB,SAAQ,qCAAgB;IACtC,OAAO,CAAW;IAEnC,YAAY,GAAiB,EAAE,KAAY,EAAE,OAAiB;QAC5D,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC3B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;IAED,oBAAoB;QAClB,OAAO,IAAA,iBAAC,EAAC,eAAM,EAAE;YACf,OAAO,EAAE,GAAG,EAAE;gBACZ,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,EAAE,CAAC;YAC1D,CAAC;YACD,IAAI,EAAE,sBAAK,CAAC,KAAK;YACjB,KAAK,EAAE,OAAO;YACd,OAAO,EAAE,IAAI;SACd,CAAC,CAAC;IACL,CAAC;IAES,wBAAwB;QAChC,MAAM,OAAO,GAAG,KAAK,CAAC,wBAAwB,EAAE,CAAC;QACjD,OAAO,CAAC,cAAc,GAAG,QAAQ,CAAC;QAClC,OAAO,CAAC,MAAM,GAAG,UAAU,CAAC;QAC5B,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,KAAK,CAAC,MAAM;QACV,MAAM,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;;;KAGvB,CAAC,CAAC;IACL,CAAC;IAED,YAAY;QACV,MAAM,WAAW,GACf,IAAI,CAAC,OAAO,KAAK,SAAS;YACxB,CAAC,CAAC,wBAAwB;YAC1B,CAAC,CAAC,sCAAsC,IAAA,2BAAY,EAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC;QAC1E,OAAO;;;;aAIE,WAAW;KACnB,CAAC;IACJ,CAAC;CACF;AA7CD,kDA6CC","sourcesContent":["// Copyright (C) 2023 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport m from 'mithril';\nimport {Icons} from '../../base/semantic_icons';\nimport {sqliteString} from '../../base/string_utils';\nimport {\n  BaseCounterTrack,\n  CounterOptions,\n} from '../../components/tracks/base_counter_track';\nimport {TrackContext} from '../../public/track';\nimport {Button} from '../../widgets/button';\nimport {Trace} from '../../public/trace';\n\nexport enum CPUType {\n  Big = 'big',\n  Mid = 'mid',\n  Little = 'little',\n}\n\nexport class ActiveCPUCountTrack extends BaseCounterTrack {\n  private readonly cpuType?: CPUType;\n\n  constructor(ctx: TrackContext, trace: Trace, cpuType?: CPUType) {\n    super(trace, ctx.trackUri);\n    this.cpuType = cpuType;\n  }\n\n  getTrackShellButtons(): m.Children {\n    return m(Button, {\n      onclick: () => {\n        this.trace.workspace.findTrackByUri(this.uri)?.remove();\n      },\n      icon: Icons.Close,\n      title: 'Close',\n      compact: true,\n    });\n  }\n\n  protected getDefaultCounterOptions(): CounterOptions {\n    const options = super.getDefaultCounterOptions();\n    options.yRangeRounding = 'strict';\n    options.yRange = 'viewport';\n    return options;\n  }\n\n  async onInit() {\n    await this.engine.query(`\n      INCLUDE PERFETTO MODULE sched.thread_level_parallelism;\n      INCLUDE PERFETTO MODULE android.cpu.cluster_type;\n    `);\n  }\n\n  getSqlSource() {\n    const sourceTable =\n      this.cpuType === undefined\n        ? 'sched_active_cpu_count'\n        : `_active_cpu_count_for_cluster_type(${sqliteString(this.cpuType)})`;\n    return `\n      select\n        ts,\n        active_cpu_count as value\n      from ${sourceTable}\n    `;\n  }\n}\n"]}