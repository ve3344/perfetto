{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/plugins/dev.perfetto.Sched/index.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2023 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {TrackNode} from '../../public/workspace';\nimport {Trace} from '../../public/trace';\nimport {PerfettoPlugin} from '../../public/plugin';\nimport {ActiveCPUCountTrack, CPUType} from './active_cpu_count';\nimport {\n  RunnableThreadCountTrack,\n  UninterruptibleSleepThreadCountTrack,\n} from './thread_count';\n\nexport default class implements PerfettoPlugin {\n  static readonly id = 'dev.perfetto.Sched';\n  async onTraceLoad(ctx: Trace) {\n    const runnableThreadCountUri = `/runnable_thread_count`;\n    ctx.tracks.registerTrack({\n      uri: runnableThreadCountUri,\n      title: 'Runnable thread count',\n      track: new RunnableThreadCountTrack(ctx, runnableThreadCountUri),\n    });\n    ctx.commands.registerCommand({\n      id: 'dev.perfetto.Sched.AddRunnableThreadCountTrackCommand',\n      name: 'Add track: runnable thread count',\n      callback: () =>\n        addPinnedTrack(ctx, runnableThreadCountUri, 'Runnable thread count'),\n    });\n\n    const uninterruptibleSleepThreadCountUri = `/uninterruptible_sleep_thread_count`;\n    ctx.tracks.registerTrack({\n      uri: uninterruptibleSleepThreadCountUri,\n      title: 'Uninterruptible Sleep thread count',\n      track: new UninterruptibleSleepThreadCountTrack(\n        ctx,\n        uninterruptibleSleepThreadCountUri,\n      ),\n    });\n    ctx.commands.registerCommand({\n      id: 'dev.perfetto.Sched.AddUninterruptibleSleepThreadCountTrackCommand',\n      name: 'Add track: uninterruptible sleep thread count',\n      callback: () =>\n        addPinnedTrack(\n          ctx,\n          uninterruptibleSleepThreadCountUri,\n          'Uninterruptible Sleep thread count',\n        ),\n    });\n\n    const uri = uriForActiveCPUCountTrack();\n    const title = 'Active CPU count';\n    ctx.tracks.registerTrack({\n      uri,\n      title: title,\n      track: new ActiveCPUCountTrack({trackUri: uri}, ctx),\n    });\n    ctx.commands.registerCommand({\n      id: 'dev.perfetto.Sched.AddActiveCPUCountTrackCommand',\n      name: 'Add track: active CPU count',\n      callback: () => addPinnedTrack(ctx, uri, title),\n    });\n\n    for (const cpuType of Object.values(CPUType)) {\n      const uri = uriForActiveCPUCountTrack(cpuType);\n      const title = `Active ${cpuType} CPU count`;\n      ctx.tracks.registerTrack({\n        uri,\n        title: title,\n        track: new ActiveCPUCountTrack({trackUri: uri}, ctx, cpuType),\n      });\n\n      ctx.commands.registerCommand({\n        id: `dev.perfetto.Sched.AddActiveCPUCountTrackCommand.${cpuType}`,\n        name: `Add track: active ${cpuType} CPU count`,\n        callback: () => addPinnedTrack(ctx, uri, title),\n      });\n    }\n  }\n}\n\nfunction uriForActiveCPUCountTrack(cpuType?: CPUType): string {\n  const prefix = `/active_cpus`;\n  if (cpuType !== undefined) {\n    return `${prefix}_${cpuType}`;\n  } else {\n    return prefix;\n  }\n}\n\nfunction addPinnedTrack(ctx: Trace, uri: string, title: string) {\n  const track = new TrackNode({uri, title});\n  // Add track to the top of the stack\n  ctx.workspace.addChildFirst(track);\n  track.pin();\n}\n"]}