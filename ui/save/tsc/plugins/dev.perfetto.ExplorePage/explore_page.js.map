{"version":3,"file":"explore_page.js","sourceRoot":"","sources":["../../../../src/plugins/dev.perfetto.ExplorePage/explore_page.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2024 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport m from 'mithril';\nimport {PageWithTraceAttrs} from '../../public/page';\nimport {SqlTableState as SqlTableViewState} from '../../components/widgets/sql/legacy_table/state';\nimport {SqlTable as SqlTableView} from '../../components/widgets/sql/legacy_table/table';\nimport {exists} from '../../base/utils';\nimport {Menu, MenuItem, MenuItemAttrs} from '../../widgets/menu';\nimport {Button} from '../../widgets/button';\nimport {Icons} from '../../base/semantic_icons';\nimport {DetailsShell} from '../../widgets/details_shell';\nimport {\n  Chart,\n  ChartOption,\n  createChartConfigFromSqlTableState,\n  renderChartComponent,\n} from '../../components/widgets/charts/chart';\nimport {AddChartMenuItem} from '../../components/widgets/charts/add_chart_menu';\nimport {\n  SplitPanel,\n  SplitPanelDrawerVisibility,\n} from '../../widgets/split_panel';\nimport {Trace} from '../../public/trace';\nimport SqlModulesPlugin from '../dev.perfetto.SqlModules';\nimport {scheduleFullRedraw} from '../../widgets/raf';\n\nexport interface ExploreTableState {\n  sqlTableViewState?: SqlTableViewState;\n  selectedTableName?: string;\n}\n\ninterface ExplorePageAttrs extends PageWithTraceAttrs {\n  readonly state: ExploreTableState;\n  readonly charts: Set<Chart>;\n}\n\nexport class ExplorePage implements m.ClassComponent<ExplorePageAttrs> {\n  private visibility = SplitPanelDrawerVisibility.VISIBLE;\n\n  // Show menu with standard library tables\n  private renderSelectableTablesMenuItems(\n    trace: Trace,\n    state: ExploreTableState,\n  ): m.Vnode<MenuItemAttrs, unknown>[] {\n    const sqlModules = trace.plugins\n      .getPlugin(SqlModulesPlugin)\n      .getSqlModules();\n    return sqlModules.listTables().map((tableName) => {\n      const sqlTable = sqlModules\n        .getModuleForTable(tableName)\n        ?.getTable(tableName);\n      const sqlTableViewDescription = sqlModules\n        .getModuleForTable(tableName)\n        ?.getSqlTableDescription(tableName);\n\n      return m(MenuItem, {\n        label: tableName,\n        onclick: () => {\n          if (\n            (state.selectedTableName &&\n              tableName === state.selectedTableName) ||\n            sqlTable === undefined ||\n            sqlTableViewDescription === undefined\n          ) {\n            return;\n          }\n\n          state.selectedTableName = sqlTable.name;\n          state.sqlTableViewState = new SqlTableViewState(\n            trace,\n            {\n              name: tableName,\n              columns: sqlTable.getTableColumns(),\n            },\n            {imports: sqlTableViewDescription.imports},\n          );\n        },\n      });\n    });\n  }\n\n  private renderSqlTable(state: ExploreTableState, charts: Set<Chart>) {\n    const sqlTableViewState = state.sqlTableViewState;\n\n    if (sqlTableViewState === undefined) return;\n\n    const range = sqlTableViewState.getDisplayedRange();\n    const rowCount = sqlTableViewState.getTotalRowCount();\n\n    const navigation = [\n      exists(range) &&\n        exists(rowCount) &&\n        `Showing rows ${range.from}-${range.to} of ${rowCount}`,\n      m(Button, {\n        icon: Icons.GoBack,\n        disabled: !sqlTableViewState.canGoBack(),\n        onclick: () => sqlTableViewState!.goBack(),\n      }),\n      m(Button, {\n        icon: Icons.GoForward,\n        disabled: !sqlTableViewState.canGoForward(),\n        onclick: () => sqlTableViewState!.goForward(),\n      }),\n    ];\n\n    return m(\n      DetailsShell,\n      {\n        title: 'Explore Table',\n        buttons: navigation,\n        fillParent: false,\n      },\n      m(SqlTableView, {\n        state: sqlTableViewState,\n        addColumnMenuItems: (column, columnAlias) =>\n          m(AddChartMenuItem, {\n            chartConfig: createChartConfigFromSqlTableState(\n              column,\n              columnAlias,\n              sqlTableViewState,\n            ),\n            chartOptions: [ChartOption.HISTOGRAM],\n            addChart: (chart) => charts.add(chart),\n          }),\n      }),\n    );\n  }\n\n  private renderRemovableChart(chart: Chart, charts: Set<Chart>) {\n    return m(\n      '.chart-card',\n      {\n        key: `${chart.option}-${chart.config.columnTitle}`,\n      },\n      m(Button, {\n        icon: Icons.Close,\n        onclick: () => {\n          charts.delete(chart);\n          scheduleFullRedraw();\n        },\n      }),\n      renderChartComponent(chart),\n    );\n  }\n\n  view({attrs}: m.CVnode<ExplorePageAttrs>) {\n    const {trace, state, charts} = attrs;\n\n    return m(\n      '.page.explore-page',\n      m(\n        SplitPanel,\n        {\n          visibility: this.visibility,\n          onVisibilityChange: (visibility) => {\n            this.visibility = visibility;\n          },\n          drawerContent: this.renderSqlTable(state, charts),\n        },\n        m(\n          '.chart-container',\n          m(Menu, this.renderSelectableTablesMenuItems(trace, state)),\n        ),\n        m(\n          '.chart-container',\n          Array.from(charts.values()).map((chart) =>\n            this.renderRemovableChart(chart, charts),\n          ),\n        ),\n      ),\n    );\n  }\n}\n"]}