{"version":3,"file":"frame_selection_aggregator.js","sourceRoot":"","sources":["../../../../src/plugins/dev.perfetto.Frames/frame_selection_aggregator.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;;AAIjC,0DAAwE;AAIxE,MAAa,wBAAwB;IAC1B,EAAE,GAAG,mBAAmB,CAAC;IAElC,KAAK,CAAC,mBAAmB,CAAC,MAAc,EAAE,IAAmB;QAC3D,MAAM,mBAAmB,GAAa,EAAE,CAAC;QACzC,KAAK,MAAM,SAAS,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;YACpC,IAAI,SAAS,EAAE,IAAI,EAAE,IAAI,KAAK,4CAA8B,EAAE,CAAC;gBAC7D,SAAS,CAAC,IAAI,CAAC,QAAQ;oBACrB,mBAAmB,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACzD,CAAC;QACH,CAAC;QACD,IAAI,mBAAmB,CAAC,MAAM,KAAK,CAAC;YAAE,OAAO,KAAK,CAAC;QAEnD,MAAM,MAAM,CAAC,KAAK,CAAC;yCACkB,IAAI,CAAC,EAAE;;;;;;;;2BAQrB,mBAAmB;yBACrB,IAAI,CAAC,KAAK;mBAChB,IAAI,CAAC,GAAG;;KAEtB,CAAC,CAAC;QACH,OAAO,IAAI,CAAC;IACd,CAAC;IAED,UAAU;QACR,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED,KAAK,CAAC,QAAQ,KAAI,CAAC;IAEnB,iBAAiB;QACf,OAAO,EAAC,MAAM,EAAE,aAAa,EAAE,SAAS,EAAE,MAAM,EAAC,CAAC;IACpD,CAAC;IAED,oBAAoB;QAClB,OAAO;YACL;gBACE,KAAK,EAAE,WAAW;gBAClB,IAAI,EAAE,QAAQ;gBACd,iBAAiB,EAAE,WAAW;gBAC9B,QAAQ,EAAE,WAAW;aACtB;YACD;gBACE,KAAK,EAAE,cAAc;gBACrB,IAAI,EAAE,QAAQ;gBACd,iBAAiB,EAAE,WAAW;gBAC9B,QAAQ,EAAE,QAAQ;aACnB;YACD;gBACE,KAAK,EAAE,cAAc;gBACrB,IAAI,EAAE,QAAQ;gBACd,iBAAiB,EAAE,WAAW;gBAC9B,QAAQ,EAAE,QAAQ;aACnB;YACD;gBACE,KAAK,EAAE,eAAe;gBACtB,IAAI,EAAE,QAAQ;gBACd,iBAAiB,EAAE,WAAW;gBAC9B,QAAQ,EAAE,SAAS;aACpB;YACD;gBACE,KAAK,EAAE,aAAa;gBACpB,IAAI,EAAE,QAAQ;gBACd,iBAAiB,EAAE,WAAW;gBAC9B,QAAQ,EAAE,aAAa;gBACvB,GAAG,EAAE,IAAI;aACV;SACF,CAAC;IACJ,CAAC;CACF;AA3ED,4DA2EC","sourcesContent":["// Copyright (C) 2021 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {ColumnDef, Sorting} from '../../public/aggregation';\nimport {AreaSelection} from '../../public/selection';\nimport {ACTUAL_FRAMES_SLICE_TRACK_KIND} from '../../public/track_kinds';\nimport {Engine} from '../../trace_processor/engine';\nimport {AreaSelectionAggregator} from '../../public/selection';\n\nexport class FrameSelectionAggregator implements AreaSelectionAggregator {\n  readonly id = 'frame_aggregation';\n\n  async createAggregateView(engine: Engine, area: AreaSelection) {\n    const selectedSqlTrackIds: number[] = [];\n    for (const trackInfo of area.tracks) {\n      if (trackInfo?.tags?.kind === ACTUAL_FRAMES_SLICE_TRACK_KIND) {\n        trackInfo.tags.trackIds &&\n          selectedSqlTrackIds.push(...trackInfo.tags.trackIds);\n      }\n    }\n    if (selectedSqlTrackIds.length === 0) return false;\n\n    await engine.query(`\n      create or replace perfetto table ${this.id} as\n      select\n        jank_type,\n        count(1) as occurrences,\n        min(dur) as minDur,\n        avg(dur) as meanDur,\n        max(dur) as maxDur\n      from actual_frame_timeline_slice\n      where track_id in (${selectedSqlTrackIds})\n        AND ts + dur > ${area.start}\n        AND ts < ${area.end}\n      group by jank_type\n    `);\n    return true;\n  }\n\n  getTabName() {\n    return 'Frames';\n  }\n\n  async getExtra() {}\n\n  getDefaultSorting(): Sorting {\n    return {column: 'occurrences', direction: 'DESC'};\n  }\n\n  getColumnDefinitions(): ColumnDef[] {\n    return [\n      {\n        title: 'Jank Type',\n        kind: 'STRING',\n        columnConstructor: Uint16Array,\n        columnId: 'jank_type',\n      },\n      {\n        title: 'Min duration',\n        kind: 'NUMBER',\n        columnConstructor: Uint16Array,\n        columnId: 'minDur',\n      },\n      {\n        title: 'Max duration',\n        kind: 'NUMBER',\n        columnConstructor: Uint16Array,\n        columnId: 'maxDur',\n      },\n      {\n        title: 'Mean duration',\n        kind: 'NUMBER',\n        columnConstructor: Uint16Array,\n        columnId: 'meanDur',\n      },\n      {\n        title: 'Occurrences',\n        kind: 'NUMBER',\n        columnConstructor: Uint16Array,\n        columnId: 'occurrences',\n        sum: true,\n      },\n    ];\n  }\n}\n"]}