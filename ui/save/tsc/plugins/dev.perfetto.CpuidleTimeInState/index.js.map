{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/plugins/dev.perfetto.CpuidleTimeInState/index.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAKjC,sDAAiD;AACjD,qFAAoF;AAEpF;IACE,MAAM,CAAU,EAAE,GAAG,iCAAiC,CAAC;IAC/C,KAAK,CAAC,eAAe,CAC3B,GAAU,EACV,IAAY,EACZ,KAAa,EACb,KAAiB,EACjB,OAAiC;QAEjC,MAAM,GAAG,GAAG,0BAA0B,IAAI,EAAE,CAAC;QAC7C,MAAM,KAAK,GAAG,MAAM,IAAA,6CAAuB,EAAC;YAC1C,KAAK,EAAE,GAAG;YACV,GAAG;YACH,IAAI,EAAE;gBACJ,SAAS,EAAE,KAAK;gBAChB,OAAO,EAAE,CAAC,IAAI,EAAE,OAAO,CAAC;aACzB;YACD,OAAO,EAAE,EAAC,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAC;YACnC,OAAO;SACR,CAAC,CAAC;QACH,GAAG,CAAC,MAAM,CAAC,aAAa,CAAC;YACvB,GAAG;YACH,KAAK,EAAE,IAAI;YACX,KAAK;SACN,CAAC,CAAC;QACH,MAAM,SAAS,GAAG,IAAI,qBAAS,CAAC,EAAC,GAAG,EAAE,KAAK,EAAE,IAAI,EAAC,CAAC,CAAC;QACpD,IAAI,KAAK,EAAE,CAAC;YACV,KAAK,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;QACnC,CAAC;IACH,CAAC;IAED,KAAK,CAAC,WAAW,CAAC,GAAU;QAC1B,MAAM,KAAK,GAAG,IAAI,qBAAS,CAAC;YAC1B,KAAK,EAAE,uBAAuB;YAC9B,SAAS,EAAE,IAAI;SAChB,CAAC,CAAC;QAEH,MAAM,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC;QACrB,MAAM,CAAC,CAAC,KAAK,CAAC,uDAAuD,CAAC,CAAC;QACvE,MAAM,MAAM,GAAG,MAAM,CAAC,CAAC,KAAK,CAC1B,iEAAiE,CAClE,CAAC;QACF,MAAM,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,EAAC,UAAU,EAAE,KAAK,EAAC,CAAC,CAAC;QAC5C,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC;YAC7B,IAAI,CAAC,eAAe,CAClB,GAAG,EACH,EAAE,CAAC,UAAU,EACb;;;;;gCAKwB,EAAE,CAAC,UAAU;SACpC,EACD,KAAK,EACL,EAAC,IAAI,EAAE,SAAS,EAAC,CAClB,CAAC;QACJ,CAAC;QACD,IAAI,KAAK,CAAC,WAAW,EAAE,CAAC;YACtB,GAAG,CAAC,SAAS,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QACvC,CAAC;IACH,CAAC;;AA7DH,4BA8DC","sourcesContent":["// Copyright (C) 2024 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Trace} from '../../public/trace';\nimport {PerfettoPlugin} from '../../public/plugin';\nimport {CounterOptions} from '../../components/tracks/base_counter_track';\nimport {TrackNode} from '../../public/workspace';\nimport {createQueryCounterTrack} from '../../components/tracks/query_counter_track';\n\nexport default class implements PerfettoPlugin {\n  static readonly id = 'dev.perfetto.CpuidleTimeInState';\n  private async addCounterTrack(\n    ctx: Trace,\n    name: string,\n    query: string,\n    group?: TrackNode,\n    options?: Partial<CounterOptions>,\n  ) {\n    const uri = `/cpuidle_time_in_state_${name}`;\n    const track = await createQueryCounterTrack({\n      trace: ctx,\n      uri,\n      data: {\n        sqlSource: query,\n        columns: ['ts', 'value'],\n      },\n      columns: {ts: 'ts', value: 'value'},\n      options,\n    });\n    ctx.tracks.registerTrack({\n      uri,\n      title: name,\n      track,\n    });\n    const trackNode = new TrackNode({uri, title: name});\n    if (group) {\n      group.addChildInOrder(trackNode);\n    }\n  }\n\n  async onTraceLoad(ctx: Trace): Promise<void> {\n    const group = new TrackNode({\n      title: 'Cpuidle Time In State',\n      isSummary: true,\n    });\n\n    const e = ctx.engine;\n    await e.query(`INCLUDE PERFETTO MODULE linux.cpu.idle_time_in_state;`);\n    const result = await e.query(\n      `select distinct state_name from cpu_idle_time_in_state_counters`,\n    );\n    const it = result.iter({state_name: 'str'});\n    for (; it.valid(); it.next()) {\n      this.addCounterTrack(\n        ctx,\n        it.state_name,\n        `\n          select\n            ts,\n            idle_percentage as value\n          from cpu_idle_time_in_state_counters\n          where state_name = '${it.state_name}'\n        `,\n        group,\n        {unit: 'percent'},\n      );\n    }\n    if (group.hasChildren) {\n      ctx.workspace.addChildInOrder(group);\n    }\n  }\n}\n"]}