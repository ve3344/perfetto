{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/plugins/dev.perfetto.AndroidStartup/index.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAEjC,qEAAwD;AAGxD,iFAAgF;AAChF,sDAAiD;AACjD,mDAAmD;AAEnD;IACE,MAAM,CAAU,EAAE,GAAG,6BAA6B,CAAC;IAEnD,KAAK,CAAC,WAAW,CAAC,GAAU;QAC1B,MAAM,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC;QACrB,MAAM,CAAC,CAAC,KAAK,CAAC;;;UAGR,CAAC,CAAC;QAER,MAAM,GAAG,GAAG,MAAM,CAAC,CAAC,KAAK,CAAC,0CAA0C,CAAC,CAAC;QACtE,IAAI,GAAG,CAAC,QAAQ,CAAC,EAAC,GAAG,EAAE,mBAAI,EAAC,CAAC,CAAC,GAAG,KAAK,EAAE,EAAE,CAAC;YACzC,OAAO;QACT,CAAC;QAED,MAAM,WAAW,GAAG;;;KAGnB,CAAC;QACF,MAAM,oBAAoB,GAAG;;;;;;KAM5B,CAAC;QAEF,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAC3C,GAAG,EACH,WAAW,EACX,mBAAmB,EACnB,sBAAsB,CACvB,CAAC;QACF,MAAM,kBAAkB,GAAG,MAAM,IAAI,CAAC,gBAAgB,CACpD,GAAG,EACH,oBAAoB,EACpB,6BAA6B,EAC7B,gCAAgC,CACjC,CAAC;QACF,MAAM,aAAa,GAAG,MAAM,IAAA,kCAAkB,EAAC,GAAG,CAAC,CAAC;QACpD,GAAG,CAAC,SAAS,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;QACzC,SAAS,CAAC,YAAY,CAAC,kBAAkB,CAAC,CAAC;QAC3C,IAAI,CAAC,CAAC,aAAa,EAAE,CAAC;YACpB,SAAS,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;QACxC,CAAC;IACH,CAAC;IAEO,KAAK,CAAC,gBAAgB,CAC5B,GAAU,EACV,SAAiB,EACjB,GAAW,EACX,KAAa;QAEb,MAAM,KAAK,GAAG,MAAM,IAAA,yCAAqB,EAAC;YACxC,KAAK,EAAE,GAAG;YACV,GAAG;YACH,IAAI,EAAE;gBACJ,SAAS;gBACT,OAAO,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC;aAC/B;SACF,CAAC,CAAC;QACH,GAAG,CAAC,MAAM,CAAC,aAAa,CAAC;YACvB,GAAG;YACH,KAAK;YACL,KAAK;SACN,CAAC,CAAC;QACH,qFAAqF;QACrF,OAAO,IAAI,qBAAS,CAAC,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,CAAC,CAAC,EAAC,CAAC,CAAC;IACpD,CAAC;;AApEH,4BAqEC","sourcesContent":["// Copyright (C) 2024 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {LONG} from '../../trace_processor/query_result';\nimport {Trace} from '../../public/trace';\nimport {PerfettoPlugin} from '../../public/plugin';\nimport {createQuerySliceTrack} from '../../components/tracks/query_slice_track';\nimport {TrackNode} from '../../public/workspace';\nimport {optimizationsTrack} from './optimizations';\n\nexport default class implements PerfettoPlugin {\n  static readonly id = 'dev.perfetto.AndroidStartup';\n\n  async onTraceLoad(ctx: Trace): Promise<void> {\n    const e = ctx.engine;\n    await e.query(`\n          include perfetto module android.startup.startups;\n          include perfetto module android.startup.startup_breakdowns;\n         `);\n\n    const cnt = await e.query('select count() cnt from android_startups');\n    if (cnt.firstRow({cnt: LONG}).cnt === 0n) {\n      return;\n    }\n\n    const trackSource = `\n          SELECT l.ts AS ts, l.dur AS dur, l.package AS name\n          FROM android_startups l\n    `;\n    const trackBreakdownSource = `\n        SELECT\n          ts,\n          dur,\n          reason AS name\n          FROM android_startup_opinionated_breakdown\n    `;\n\n    const trackNode = await this.loadStartupTrack(\n      ctx,\n      trackSource,\n      `/android_startups`,\n      'Android App Startups',\n    );\n    const trackBreakdownNode = await this.loadStartupTrack(\n      ctx,\n      trackBreakdownSource,\n      `/android_startups_breakdown`,\n      'Android App Startups Breakdown',\n    );\n    const optimizations = await optimizationsTrack(ctx);\n    ctx.workspace.addChildInOrder(trackNode);\n    trackNode.addChildLast(trackBreakdownNode);\n    if (!!optimizations) {\n      trackNode.addChildLast(optimizations);\n    }\n  }\n\n  private async loadStartupTrack(\n    ctx: Trace,\n    sqlSource: string,\n    uri: string,\n    title: string,\n  ): Promise<TrackNode> {\n    const track = await createQuerySliceTrack({\n      trace: ctx,\n      uri,\n      data: {\n        sqlSource,\n        columns: ['ts', 'dur', 'name'],\n      },\n    });\n    ctx.tracks.registerTrack({\n      uri,\n      title,\n      track,\n    });\n    // Needs a sort order lower than 'Ftrace Events' so that it is prioritized in the UI.\n    return new TrackNode({title, uri, sortOrder: -6});\n  }\n}\n"]}