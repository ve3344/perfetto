{"version":3,"file":"optimizations.js","sourceRoot":"","sources":["../../../../src/plugins/dev.perfetto.AndroidStartup/optimizations.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2024 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Trace} from '../../public/trace';\nimport {STR, LONG, NUM} from '../../trace_processor/query_result';\nimport {createQuerySliceTrack} from '../../components/tracks/query_slice_track';\nimport {TrackNode} from '../../public/workspace';\n\n// The metadata container that keeps track of optimizations for packages that have startup events.\ninterface Startup {\n  // The startup id.\n  id: number;\n  // The package name.\n  package: string;\n  // Time start\n  ts: bigint;\n  // Time end\n  ts_end: bigint;\n  // compilation filter\n  filter?: string;\n  // optimization status\n  optimized?: boolean;\n}\n\n// The log tag\nconst tag = 'DexOptInsights';\n// The pattern for the optimization filter.\nconst FILTER_PATTERN = /filter=([^\\s]+)/;\n\n/**\n * Returns a track node that contains optimization status\n * for the packages that started up in a trace.\n * @param trace The loaded trace.\n * @returns a track node with the optimizations status.\n * `undefined` if there are no app startups detected.\n */\nexport async function optimizationsTrack(\n  trace: Trace,\n): Promise<TrackNode | undefined> {\n  const startups: Array<Startup> = [];\n\n  // Find app startups\n  let result = await trace.engine.query(\n    `\n        INCLUDE PERFETTO MODULE android.startup.startups;\n        SELECT startup_id AS id, package, ts, ts_end FROM android_startups;`,\n    tag,\n  );\n\n  const it = result.iter({id: NUM, package: STR, ts: LONG, ts_end: LONG});\n  for (; it.valid(); it.next()) {\n    startups.push({\n      id: it.id,\n      package: it.package,\n      ts: it.ts,\n      ts_end: it.ts_end,\n    });\n  }\n\n  if (startups.length === 0) {\n    // Nothing interesting to report.\n    return undefined;\n  }\n\n  for (const startup of startups) {\n    // For each startup id get the optimization status\n    result = await trace.engine.query(\n      `\n        INCLUDE PERFETTO MODULE android.startup.startups;\n        SELECT slice_name AS name FROM\n          android_slices_for_startup_and_slice_name(${startup.id}, 'location=* status=* filter=* reason=*');`,\n      tag,\n    );\n    const it = result.iter({name: STR});\n    for (; it.valid(); it.next()) {\n      const name = it.name;\n      const relevant = name.indexOf(startup.package) >= 0;\n      if (relevant) {\n        const matches = name.match(FILTER_PATTERN);\n        if (matches) {\n          const filter = matches[1];\n          startup.filter = filter;\n          startup.optimized = filter === 'speed-profile';\n        }\n      }\n    }\n  }\n\n  // Create the optimizations track and also avoid re-querying for the data we already have.\n  const sqlSource = startups\n    .map((startup) => {\n      return `SELECT\n        ${startup.ts} AS ts,\n        ${startup.ts_end - startup.ts} AS dur,\n        '${buildName(startup)}' AS name,\n        '${buildDetails(startup)}' AS details\n      `;\n    })\n    .join('UNION ALL '); // The trailing space is important.\n\n  const uri = '/android_startups_optimization_status';\n  const title = 'Optimization Status';\n  const track = await createQuerySliceTrack({\n    trace: trace,\n    uri: uri,\n    data: {\n      sqlSource: sqlSource,\n      columns: ['ts', 'dur', 'name', 'details'],\n    },\n    argColumns: ['details'],\n  });\n  trace.tracks.registerTrack({\n    uri,\n    title,\n    track,\n  });\n  return new TrackNode({title, uri});\n}\n\nfunction buildName(startup: Startup): string {\n  if (\n    !!startup.filter === false ||\n    startup.filter === 'verify' ||\n    startup.filter === 'speed'\n  ) {\n    return `Sub-optimal compilation state (${startup.filter})`;\n  } else if (startup.filter === 'speed-profile') {\n    return 'Ideal compilation state (speed-profile)';\n  } else {\n    return `Unknown compilation state (${startup.filter})`;\n  }\n}\n\nfunction buildDetails(startup: Startup): string {\n  if (startup.filter === 'verify' || !!startup.filter === false) {\n    return `No methods are precompiled, and class loading is unoptimized`;\n  } else if (startup.filter === 'speed') {\n    return 'Methods are all precompiled, and class loading is unoptimized';\n  } else if (startup.filter === 'speed-profile') {\n    return 'Methods and classes in the profile are optimized';\n  } else {\n    return `Unknown compilation state (${startup.filter})`;\n  }\n}\n"]}