{"version":3,"file":"recording_settings.js","sourceRoot":"","sources":["../../../../src/plugins/dev.perfetto.RecordTrace/recording_settings.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2022 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport m from 'mithril';\nimport {RecordMode} from './state';\nimport {Slider} from './record_widgets';\nimport {RecordingSectionAttrs} from './recording_sections';\nimport {assetSrc} from '../../base/assets';\n\nexport class RecordingSettings\n  implements m.ClassComponent<RecordingSectionAttrs>\n{\n  view({attrs}: m.CVnode<RecordingSectionAttrs>) {\n    const S = (x: number) => x * 1000;\n    const M = (x: number) => x * 1000 * 60;\n    const H = (x: number) => x * 1000 * 60 * 60;\n\n    const recCfg = attrs.recState.recordConfig;\n\n    const recButton = (mode: RecordMode, title: string, img: string) => {\n      const checkboxArgs = {\n        checked: recCfg.mode === mode,\n        onchange: (e: InputEvent) => {\n          const checked = (e.target as HTMLInputElement).checked;\n          if (!checked) return;\n          recCfg.mode = mode;\n        },\n      };\n      return m(\n        `label${recCfg.mode === mode ? '.selected' : ''}`,\n        m(`input[type=radio][name=rec_mode]`, checkboxArgs),\n        m(`img[src=${assetSrc(`assets/${img}`)}]`),\n        m('span', title),\n      );\n    };\n\n    return m(\n      `.record-section${attrs.cssClass}`,\n      m('header', 'Recording mode'),\n      m(\n        '.record-mode',\n        recButton('STOP_WHEN_FULL', 'Stop when full', 'rec_one_shot.png'),\n        recButton('RING_BUFFER', 'Ring buffer', 'rec_ring_buf.png'),\n        recButton('LONG_TRACE', 'Long trace', 'rec_long_trace.png'),\n      ),\n\n      m(Slider, {\n        title: 'In-memory buffer size',\n        icon: '360',\n        values: [4, 8, 16, 32, 64, 128, 256, 512],\n        unit: 'MB',\n        set: (cfg, val) => (cfg.bufferSizeMb = val),\n        get: (cfg) => cfg.bufferSizeMb,\n        recCfg,\n      }),\n\n      m(Slider, {\n        title: 'Max duration',\n        icon: 'timer',\n        values: [S(10), S(15), S(30), S(60), M(5), M(30), H(1), H(6), H(12)],\n        isTime: true,\n        unit: 'h:m:s',\n        set: (cfg, val) => (cfg.durationMs = val),\n        get: (cfg) => cfg.durationMs,\n        recCfg,\n      }),\n      m(Slider, {\n        title: 'Max file size',\n        icon: 'save',\n        cssClass: recCfg.mode !== 'LONG_TRACE' ? '.hide' : '',\n        values: [5, 25, 50, 100, 500, 1000, 1000 * 5, 1000 * 10],\n        unit: 'MB',\n        set: (cfg, val) => (cfg.maxFileSizeMb = val),\n        get: (cfg) => cfg.maxFileSizeMb,\n        recCfg,\n      }),\n      m(Slider, {\n        title: 'Flush on disk every',\n        cssClass: recCfg.mode !== 'LONG_TRACE' ? '.hide' : '',\n        icon: 'av_timer',\n        values: [100, 250, 500, 1000, 2500, 5000],\n        unit: 'ms',\n        set: (cfg, val) => (cfg.fileWritePeriodMs = val),\n        get: (cfg) => cfg.fileWritePeriodMs || 0,\n        recCfg,\n      }),\n    );\n  }\n}\n"]}