{"version":3,"file":"record_controller_jsdomtest.js","sourceRoot":"","sources":["../../../../src/plugins/dev.perfetto.RecordTrace/record_controller_jsdomtest.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2018 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {assertExists} from '../../base/logging';\nimport {TraceConfig} from './protos';\nimport {createEmptyRecordConfig} from './record_config_types';\nimport {genConfigProto, toPbtxt} from './record_controller';\n\ntest('encodeConfig', () => {\n  const config = createEmptyRecordConfig();\n  config.durationMs = 20000;\n  const result = TraceConfig.decode(\n    genConfigProto(config, {os: 'Q', name: 'Android Q'}),\n  );\n  expect(result.durationMs).toBe(20000);\n});\n\ntest('SysConfig', () => {\n  const config = createEmptyRecordConfig();\n  config.cpuSyscall = true;\n  const result = TraceConfig.decode(\n    genConfigProto(config, {os: 'Q', name: 'Android Q'}),\n  );\n  const sources = assertExists(result.dataSources);\n  // TODO(hjd): This is all bad. Should just match the whole config.\n  const srcConfig = assertExists(sources[2].config);\n  const ftraceConfig = assertExists(srcConfig.ftraceConfig);\n  const ftraceEvents = assertExists(ftraceConfig.ftraceEvents);\n  expect(ftraceEvents.includes('raw_syscalls/sys_enter')).toBe(true);\n  expect(ftraceEvents.includes('raw_syscalls/sys_exit')).toBe(true);\n});\n\ntest('LinuxSystemInfo present', () => {\n  const config = createEmptyRecordConfig();\n  const result = TraceConfig.decode(\n    genConfigProto(config, {os: 'Q', name: 'Android Q'}),\n  );\n  const sources = assertExists(result.dataSources);\n  const sysInfoConfig = assertExists(sources[1].config);\n  expect(sysInfoConfig.name).toBe('linux.system_info');\n});\n\ntest('cpu scheduling includes kSyms if OS >= S', () => {\n  const config = createEmptyRecordConfig();\n  config.cpuSched = true;\n  const result = TraceConfig.decode(\n    genConfigProto(config, {os: 'S', name: 'Android S'}),\n  );\n  const sources = assertExists(result.dataSources);\n  const srcConfig = assertExists(sources[3].config);\n  const ftraceConfig = assertExists(srcConfig.ftraceConfig);\n  const ftraceEvents = assertExists(ftraceConfig.ftraceEvents);\n  expect(ftraceConfig.symbolizeKsyms).toBe(true);\n  expect(ftraceEvents.includes('sched/sched_blocked_reason')).toBe(true);\n});\n\ntest('cpu scheduling does not include kSyms if OS <= S', () => {\n  const config = createEmptyRecordConfig();\n  config.cpuSched = true;\n  const result = TraceConfig.decode(\n    genConfigProto(config, {os: 'Q', name: 'Android Q'}),\n  );\n  const sources = assertExists(result.dataSources);\n  const srcConfig = assertExists(sources[3].config);\n  const ftraceConfig = assertExists(srcConfig.ftraceConfig);\n  const ftraceEvents = assertExists(ftraceConfig.ftraceEvents);\n  expect(ftraceConfig.symbolizeKsyms).toBe(false);\n  expect(ftraceEvents.includes('sched/sched_blocked_reason')).toBe(false);\n});\n\ntest('kSyms can be enabled individually', () => {\n  const config = createEmptyRecordConfig();\n  config.ftrace = true;\n  config.symbolizeKsyms = true;\n  const result = TraceConfig.decode(\n    genConfigProto(config, {os: 'Q', name: 'Android Q'}),\n  );\n  const sources = assertExists(result.dataSources);\n  const srcConfig = assertExists(sources[2].config);\n  const ftraceConfig = assertExists(srcConfig.ftraceConfig);\n  const ftraceEvents = assertExists(ftraceConfig.ftraceEvents);\n  expect(ftraceConfig.symbolizeKsyms).toBe(true);\n  expect(ftraceEvents.includes('sched/sched_blocked_reason')).toBe(true);\n});\n\ntest('kSyms can be disabled individually', () => {\n  const config = createEmptyRecordConfig();\n  config.ftrace = true;\n  config.symbolizeKsyms = false;\n  const result = TraceConfig.decode(\n    genConfigProto(config, {os: 'Q', name: 'Android Q'}),\n  );\n  const sources = assertExists(result.dataSources);\n  const srcConfig = assertExists(sources[2].config);\n  const ftraceConfig = assertExists(srcConfig.ftraceConfig);\n  const ftraceEvents = assertExists(ftraceConfig.ftraceEvents);\n  expect(ftraceConfig.symbolizeKsyms).toBe(false);\n  expect(ftraceEvents.includes('sched/sched_blocked_reason')).toBe(false);\n});\n\ntest('toPbtxt', () => {\n  const config = {\n    durationMs: 1000,\n    maxFileSizeBytes: 43,\n    buffers: [\n      {\n        sizeKb: 42,\n      },\n    ],\n    dataSources: [\n      {\n        config: {\n          name: 'linux.ftrace',\n          targetBuffer: 1,\n          ftraceConfig: {\n            ftraceEvents: ['sched_switch', 'print'],\n          },\n        },\n      },\n    ],\n    producers: [\n      {\n        producerName: 'perfetto.traced_probes',\n      },\n    ],\n  };\n\n  const text = toPbtxt(TraceConfig.encode(config).finish());\n\n  expect(text).toEqual(`buffers: {\n    size_kb: 42\n}\ndata_sources: {\n    config {\n        name: \"linux.ftrace\"\n        target_buffer: 1\n        ftrace_config {\n            ftrace_events: \"sched_switch\"\n            ftrace_events: \"print\"\n        }\n    }\n}\nduration_ms: 1000\nproducers: {\n    producer_name: \"perfetto.traced_probes\"\n}\nmax_file_size_bytes: 43\n`);\n});\n\ntest('ChromeConfig', () => {\n  const config = createEmptyRecordConfig();\n  config.ipcFlows = true;\n  config.jsExecution = true;\n  config.mode = 'STOP_WHEN_FULL';\n  const result = TraceConfig.decode(\n    genConfigProto(config, {os: 'C', name: 'Chrome'}),\n  );\n  const sources = assertExists(result.dataSources);\n\n  const traceConfigSource = assertExists(sources[0].config);\n  expect(traceConfigSource.name).toBe('org.chromium.trace_event');\n  const chromeConfig = assertExists(traceConfigSource.chromeConfig);\n  expect(chromeConfig.privacyFilteringEnabled).toBe(false);\n  const traceConfig = assertExists(chromeConfig.traceConfig);\n\n  const trackEventConfigSource = assertExists(sources[1].config);\n  expect(trackEventConfigSource.name).toBe('track_event');\n  const trackEventConfig = assertExists(\n    trackEventConfigSource.trackEventConfig,\n  );\n  expect(trackEventConfig.filterDynamicEventNames).toBe(false);\n  expect(trackEventConfig.filterDebugAnnotations).toBe(false);\n  const chromeConfigT = assertExists(trackEventConfigSource.chromeConfig);\n  const traceConfigT = assertExists(chromeConfigT.traceConfig);\n\n  const metadataConfigSource = assertExists(sources[2].config);\n  expect(metadataConfigSource.name).toBe('org.chromium.trace_metadata');\n  const chromeConfigM = assertExists(metadataConfigSource.chromeConfig);\n  const traceConfigM = assertExists(chromeConfigM.traceConfig);\n\n  const expectedTraceConfig =\n    '{\"record_mode\":\"record-until-full\",' +\n    '\"included_categories\":' +\n    '[\"toplevel\",\"toplevel.flow\",\"disabled-by-default-ipc.flow\",' +\n    '\"mojom\",\"v8\"],' +\n    '\"excluded_categories\":[\"*\"],' +\n    '\"memory_dump_config\":{}}';\n  expect(traceConfig).toEqual(expectedTraceConfig);\n  expect(traceConfigT).toEqual(expectedTraceConfig);\n  expect(traceConfigM).toEqual(expectedTraceConfig);\n});\n\ntest('ChromeConfig with privacy filtering', () => {\n  const config = createEmptyRecordConfig();\n  config.ipcFlows = true;\n  config.jsExecution = true;\n  config.mode = 'STOP_WHEN_FULL';\n  config.chromePrivacyFiltering = true;\n  const result = TraceConfig.decode(\n    genConfigProto(config, {os: 'C', name: 'Chrome'}),\n  );\n  const sources = assertExists(result.dataSources);\n\n  const traceConfigSource = assertExists(sources[0].config);\n  expect(traceConfigSource.name).toBe('org.chromium.trace_event');\n  const chromeConfig = assertExists(traceConfigSource.chromeConfig);\n  expect(chromeConfig.privacyFilteringEnabled).toBe(true);\n\n  const trackEventConfigSource = assertExists(sources[1].config);\n  expect(trackEventConfigSource.name).toBe('track_event');\n  const trackEventConfig = assertExists(\n    trackEventConfigSource.trackEventConfig,\n  );\n  expect(trackEventConfig.filterDynamicEventNames).toBe(true);\n  expect(trackEventConfig.filterDebugAnnotations).toBe(true);\n});\n\ntest('ChromeMemoryConfig', () => {\n  const config = createEmptyRecordConfig();\n  config.chromeHighOverheadCategoriesSelected = [\n    'disabled-by-default-memory-infra',\n  ];\n  const result = TraceConfig.decode(\n    genConfigProto(config, {os: 'C', name: 'Chrome'}),\n  );\n  const sources = assertExists(result.dataSources);\n\n  const traceConfigSource = assertExists(sources[0].config);\n  expect(traceConfigSource.name).toBe('org.chromium.trace_event');\n  const chromeConfig = assertExists(traceConfigSource.chromeConfig);\n  const traceConfig = assertExists(chromeConfig.traceConfig);\n\n  const trackEventConfigSource = assertExists(sources[1].config);\n  expect(trackEventConfigSource.name).toBe('track_event');\n  const chromeConfigT = assertExists(trackEventConfigSource.chromeConfig);\n  const traceConfigT = assertExists(chromeConfigT.traceConfig);\n\n  const metadataConfigSource = assertExists(sources[2].config);\n  expect(metadataConfigSource.name).toBe('org.chromium.trace_metadata');\n  const chromeConfigM = assertExists(metadataConfigSource.chromeConfig);\n  const traceConfigM = assertExists(chromeConfigM.traceConfig);\n\n  const miConfigSource = assertExists(sources[3].config);\n  expect(miConfigSource.name).toBe('org.chromium.memory_instrumentation');\n  const chromeConfigI = assertExists(miConfigSource.chromeConfig);\n  const traceConfigI = assertExists(chromeConfigI.traceConfig);\n\n  const hpConfigSource = assertExists(sources[4].config);\n  expect(hpConfigSource.name).toBe('org.chromium.native_heap_profiler');\n  const chromeConfigH = assertExists(hpConfigSource.chromeConfig);\n  const traceConfigH = assertExists(chromeConfigH.traceConfig);\n\n  const expectedTraceConfig =\n    '{\"record_mode\":\"record-until-full\",' +\n    '\"included_categories\":[\"disabled-by-default-memory-infra\"],' +\n    '\"excluded_categories\":[\"*\"],' +\n    '\"memory_dump_config\":{\"allowed_dump_modes\":[\"background\",' +\n    '\"light\",\"detailed\"],\"triggers\":[{\"min_time_between_dumps_ms\":' +\n    '10000,\"mode\":\"detailed\",\"type\":\"periodic_interval\"}]}}';\n  expect(traceConfig).toEqual(expectedTraceConfig);\n  expect(traceConfigT).toEqual(expectedTraceConfig);\n  expect(traceConfigM).toEqual(expectedTraceConfig);\n  expect(traceConfigI).toEqual(expectedTraceConfig);\n  expect(traceConfigH).toEqual(expectedTraceConfig);\n});\n\ntest('ChromeCpuProfilerConfig', () => {\n  const config = createEmptyRecordConfig();\n  config.chromeHighOverheadCategoriesSelected = [\n    'disabled-by-default-cpu_profiler',\n  ];\n  const decoded = TraceConfig.decode(\n    genConfigProto(config, {os: 'C', name: 'Chrome'}),\n  );\n  const sources = assertExists(decoded.dataSources);\n\n  const traceConfigSource = assertExists(sources[0].config);\n  expect(traceConfigSource.name).toBe('org.chromium.trace_event');\n  const traceEventChromeConfig = assertExists(traceConfigSource.chromeConfig);\n  const traceEventConfig = assertExists(traceEventChromeConfig.traceConfig);\n\n  const trackEventConfigSource = assertExists(sources[1].config);\n  expect(trackEventConfigSource.name).toBe('track_event');\n  const chromeConfigT = assertExists(trackEventConfigSource.chromeConfig);\n  const traceConfigT = assertExists(chromeConfigT.traceConfig);\n\n  const metadataConfigSource = assertExists(sources[2].config);\n  expect(metadataConfigSource.name).toBe('org.chromium.trace_metadata');\n  const traceMetadataChromeConfig = assertExists(\n    metadataConfigSource.chromeConfig,\n  );\n  const traceMetadataConfig = assertExists(\n    traceMetadataChromeConfig.traceConfig,\n  );\n\n  const profilerConfigSource = assertExists(sources[3].config);\n  expect(profilerConfigSource.name).toBe('org.chromium.sampler_profiler');\n  const profilerChromeConfig = assertExists(profilerConfigSource.chromeConfig);\n  const profilerConfig = assertExists(profilerChromeConfig.traceConfig);\n\n  const expectedTraceConfig =\n    '{\"record_mode\":\"record-until-full\",' +\n    '\"included_categories\":[\"disabled-by-default-cpu_profiler\"],' +\n    '\"excluded_categories\":[\"*\"],\"memory_dump_config\":{}}';\n  expect(traceEventConfig).toEqual(expectedTraceConfig);\n  expect(traceConfigT).toEqual(expectedTraceConfig);\n  expect(traceMetadataConfig).toEqual(expectedTraceConfig);\n  expect(profilerConfig).toEqual(expectedTraceConfig);\n});\n\ntest('ChromeCpuProfilerDebugConfig', () => {\n  const config = createEmptyRecordConfig();\n  config.chromeHighOverheadCategoriesSelected = [\n    'disabled-by-default-cpu_profiler.debug',\n  ];\n  const decoded = TraceConfig.decode(\n    genConfigProto(config, {os: 'C', name: 'Chrome'}),\n  );\n  const sources = assertExists(decoded.dataSources);\n\n  const traceConfigSource = assertExists(sources[0].config);\n  expect(traceConfigSource.name).toBe('org.chromium.trace_event');\n  const traceEventChromeConfig = assertExists(traceConfigSource.chromeConfig);\n  const traceEventConfig = assertExists(traceEventChromeConfig.traceConfig);\n\n  const trackEventConfigSource = assertExists(sources[1].config);\n  expect(trackEventConfigSource.name).toBe('track_event');\n  const chromeConfigT = assertExists(trackEventConfigSource.chromeConfig);\n  const traceConfigT = assertExists(chromeConfigT.traceConfig);\n\n  const metadataConfigSource = assertExists(sources[2].config);\n  expect(metadataConfigSource.name).toBe('org.chromium.trace_metadata');\n  const traceMetadataChromeConfig = assertExists(\n    metadataConfigSource.chromeConfig,\n  );\n  const traceMetadataConfig = assertExists(\n    traceMetadataChromeConfig.traceConfig,\n  );\n\n  const profilerConfigSource = assertExists(sources[3].config);\n  expect(profilerConfigSource.name).toBe('org.chromium.sampler_profiler');\n  const profilerChromeConfig = assertExists(profilerConfigSource.chromeConfig);\n  const profilerConfig = assertExists(profilerChromeConfig.traceConfig);\n\n  const expectedTraceConfig =\n    '{\"record_mode\":\"record-until-full\",' +\n    '\"included_categories\":[\"disabled-by-default-cpu_profiler.debug\"],' +\n    '\"excluded_categories\":[\"*\"],\"memory_dump_config\":{}}';\n  expect(traceConfigT).toEqual(expectedTraceConfig);\n  expect(traceEventConfig).toEqual(expectedTraceConfig);\n  expect(traceMetadataConfig).toEqual(expectedTraceConfig);\n  expect(profilerConfig).toEqual(expectedTraceConfig);\n});\n\ntest('ChromeConfigRingBuffer', () => {\n  const config = createEmptyRecordConfig();\n  config.ipcFlows = true;\n  config.jsExecution = true;\n  config.mode = 'RING_BUFFER';\n  const result = TraceConfig.decode(\n    genConfigProto(config, {os: 'C', name: 'Chrome'}),\n  );\n  const sources = assertExists(result.dataSources);\n\n  const traceConfigSource = assertExists(sources[0].config);\n  expect(traceConfigSource.name).toBe('org.chromium.trace_event');\n  const chromeConfig = assertExists(traceConfigSource.chromeConfig);\n  const traceConfig = assertExists(chromeConfig.traceConfig);\n\n  const trackEventConfigSource = assertExists(sources[1].config);\n  expect(trackEventConfigSource.name).toBe('track_event');\n  const chromeConfigT = assertExists(trackEventConfigSource.chromeConfig);\n  const traceConfigT = assertExists(chromeConfigT.traceConfig);\n\n  const metadataConfigSource = assertExists(sources[2].config);\n  expect(metadataConfigSource.name).toBe('org.chromium.trace_metadata');\n  const chromeConfigM = assertExists(metadataConfigSource.chromeConfig);\n  const traceConfigM = assertExists(chromeConfigM.traceConfig);\n\n  const expectedTraceConfig =\n    '{\"record_mode\":\"record-continuously\",' +\n    '\"included_categories\":' +\n    '[\"toplevel\",\"toplevel.flow\",\"disabled-by-default-ipc.flow\",' +\n    '\"mojom\",\"v8\"],' +\n    '\"excluded_categories\":[\"*\"],\"memory_dump_config\":{}}';\n  expect(traceConfig).toEqual(expectedTraceConfig);\n  expect(traceConfigT).toEqual(expectedTraceConfig);\n  expect(traceConfigM).toEqual(expectedTraceConfig);\n});\n\ntest('ChromeConfigLongTrace', () => {\n  const config = createEmptyRecordConfig();\n  config.ipcFlows = true;\n  config.jsExecution = true;\n  config.mode = 'RING_BUFFER';\n  const result = TraceConfig.decode(\n    genConfigProto(config, {os: 'C', name: 'Chrome'}),\n  );\n  const sources = assertExists(result.dataSources);\n\n  const traceConfigSource = assertExists(sources[0].config);\n  expect(traceConfigSource.name).toBe('org.chromium.trace_event');\n  const chromeConfig = assertExists(traceConfigSource.chromeConfig);\n  const traceConfig = assertExists(chromeConfig.traceConfig);\n\n  const trackEventConfigSource = assertExists(sources[1].config);\n  expect(trackEventConfigSource.name).toBe('track_event');\n  const chromeConfigT = assertExists(trackEventConfigSource.chromeConfig);\n  const traceConfigT = assertExists(chromeConfigT.traceConfig);\n\n  const metadataConfigSource = assertExists(sources[2].config);\n  expect(metadataConfigSource.name).toBe('org.chromium.trace_metadata');\n  const chromeConfigM = assertExists(metadataConfigSource.chromeConfig);\n  const traceConfigM = assertExists(chromeConfigM.traceConfig);\n\n  const expectedTraceConfig =\n    '{\"record_mode\":\"record-continuously\",' +\n    '\"included_categories\":' +\n    '[\"toplevel\",\"toplevel.flow\",\"disabled-by-default-ipc.flow\",' +\n    '\"mojom\",\"v8\"],' +\n    '\"excluded_categories\":[\"*\"],\"memory_dump_config\":{}}';\n  expect(traceConfig).toEqual(expectedTraceConfig);\n  expect(traceConfigT).toEqual(expectedTraceConfig);\n  expect(traceConfigM).toEqual(expectedTraceConfig);\n});\n\ntest('ChromeConfigToPbtxt', () => {\n  const config = {\n    dataSources: [\n      {\n        config: {\n          name: 'org.chromium.trace_event',\n          chromeConfig: {\n            traceConfig: JSON.stringify({included_categories: ['v8']}),\n          },\n        },\n      },\n    ],\n  };\n  const text = toPbtxt(TraceConfig.encode(config).finish());\n\n  expect(text).toEqual(`data_sources: {\n    config {\n        name: \"org.chromium.trace_event\"\n        chrome_config {\n            trace_config: \"{\\\\\"included_categories\\\\\":[\\\\\"v8\\\\\"]}\"\n        }\n    }\n}\n`);\n});\n"]}