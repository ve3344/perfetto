{"version":3,"file":"reset_interface_modal.js","sourceRoot":"","sources":["../../../../src/plugins/dev.perfetto.RecordTrace/reset_interface_modal.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAMjC,wDAkDC;;AAtDD,8DAAwB;AACxB,+CAA8C;AAC9C,6DAAyD;AAEzD,SAAgB,sBAAsB,CACpC,OAA4B,EAC5B,QAAoB;IAEpB,IAAI,iBAAiB,GAAG,KAAK,CAAC;IAC9B,IAAA,iBAAS,EAAC;QACR,KAAK,EAAE,mCAAmC;QAC1C,OAAO,EAAE,IAAA,iBAAC,EACR,KAAK,EACL,IAAA,iBAAC,EACC,MAAM,EACN,uDAAuD;YACrD,+DAA+D;YAC/D,+CAA+C,CAClD,EACD,IAAA,iBAAC,EAAC,IAAI,CAAC,EACP,IAAA,iBAAC,EAAC,IAAI,CAAC,EACP,IAAA,iBAAC,EACC,iBAAiB,EACjB,wDAAwD;YACtD,4DAA4D,CAC/D,CACF;QACD,OAAO,EAAE;YACP;gBACE,IAAI,EAAE,wCAAmB;gBACzB,OAAO,EAAE,IAAI;gBACb,EAAE,EAAE,qBAAqB;gBACzB,MAAM,EAAE,GAAG,EAAE;oBACX,iBAAiB,GAAG,IAAI,CAAC;oBACzB,OAAO,EAAE,CAAC;gBACZ,CAAC;aACF;YACD;gBACE,IAAI,EAAE,QAAQ;gBACd,OAAO,EAAE,KAAK;gBACd,EAAE,EAAE,sBAAsB;gBAC1B,MAAM,EAAE,GAAG,EAAE;oBACX,iBAAiB,GAAG,IAAI,CAAC;oBACzB,QAAQ,EAAE,CAAC;gBACb,CAAC;aACF;SACF;KACF,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;QACX,sEAAsE;QACtE,YAAY;QACZ,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACvB,QAAQ,EAAE,CAAC;QACb,CAAC;IACH,CAAC,CAAC,CAAC;AACL,CAAC","sourcesContent":["// Copyright (C) 2022 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport m from 'mithril';\nimport {showModal} from '../../widgets/modal';\nimport {FORCE_RESET_MESSAGE} from './recording_ui_utils';\n\nexport function couldNotClaimInterface(\n  onReset: () => Promise<void>,\n  onCancel: () => void,\n) {\n  let hasPressedAButton = false;\n  showModal({\n    title: 'Could not claim the USB interface',\n    content: m(\n      'div',\n      m(\n        'text',\n        'This can happen if you have the Android Debug Bridge ' +\n          '(adb) running on your workstation or any other tool which is ' +\n          'taking exclusive access of the USB interface.',\n      ),\n      m('br'),\n      m('br'),\n      m(\n        'text.small-font',\n        'Resetting will cause the ADB server to disconnect and ' +\n          'will try to reassign the interface to the current browser.',\n      ),\n    ),\n    buttons: [\n      {\n        text: FORCE_RESET_MESSAGE,\n        primary: true,\n        id: 'force_USB_interface',\n        action: () => {\n          hasPressedAButton = true;\n          onReset();\n        },\n      },\n      {\n        text: 'Cancel',\n        primary: false,\n        id: 'cancel_USB_interface',\n        action: () => {\n          hasPressedAButton = true;\n          onCancel();\n        },\n      },\n    ],\n  }).then(() => {\n    // If the user has clicked away from the modal, we interpret that as a\n    // 'Cancel'.\n    if (!hasPressedAButton) {\n      onCancel();\n    }\n  });\n}\n"]}