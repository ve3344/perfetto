{"version":3,"file":"consumer_port_types.js","sourceRoot":"","sources":["../../../../src/plugins/dev.perfetto.RecordTrace/consumer_port_types.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAgBjC,kCAKC;AAED,0BAEC;AAmBD,sDAEC;AAED,0DAIC;AAED,0DAIC;AAED,sDAEC;AAED,4DAIC;AAtDD,8EAA8E;AAC9E,iCAAiC;AACjC,SAAgB,WAAW,CACzB,GAAM,EACN,IAAO;IAEP,OAAO,GAAG,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;AAClC,CAAC;AAED,SAAgB,OAAO,CAAC,GAAW;IACjC,OAAO,GAAG,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;AACpC,CAAC;AAmBD,SAAgB,qBAAqB,CAAC,GAAU;IAC9C,OAAO,GAAG,CAAC,IAAI,KAAK,qBAAqB,CAAC;AAC5C,CAAC;AAED,SAAgB,uBAAuB,CACrC,GAAU;IAEV,OAAO,GAAG,CAAC,IAAI,KAAK,uBAAuB,CAAC;AAC9C,CAAC;AAED,SAAgB,uBAAuB,CACrC,GAAU;IAEV,OAAO,GAAG,CAAC,IAAI,KAAK,uBAAuB,CAAC;AAC9C,CAAC;AAED,SAAgB,qBAAqB,CAAC,GAAU;IAC9C,OAAO,GAAG,CAAC,IAAI,KAAK,qBAAqB,CAAC;AAC5C,CAAC;AAED,SAAgB,wBAAwB,CACtC,GAAU;IAEV,OAAO,GAAG,CAAC,IAAI,KAAK,wBAAwB,CAAC;AAC/C,CAAC","sourcesContent":["// Copyright (C) 2019 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {\n  IDisableTracingResponse,\n  IEnableTracingResponse,\n  IFreeBuffersResponse,\n  IGetTraceStatsResponse,\n  IReadBuffersResponse,\n} from './protos';\n\nexport interface Typed {\n  type: string;\n}\n\n// A type guard that can be used in order to be able to access the property of\n// an object in a checked manner.\nexport function hasProperty<T extends object, P extends string>(\n  obj: T,\n  prop: P,\n): obj is T & {[prop in P]: unknown} {\n  return obj.hasOwnProperty(prop);\n}\n\nexport function isTyped(obj: object): obj is Typed {\n  return obj.hasOwnProperty('type');\n}\n\nexport interface ReadBuffersResponse extends Typed, IReadBuffersResponse {}\nexport interface EnableTracingResponse extends Typed, IEnableTracingResponse {}\nexport interface GetTraceStatsResponse extends Typed, IGetTraceStatsResponse {}\nexport interface FreeBuffersResponse extends Typed, IFreeBuffersResponse {}\nexport interface GetCategoriesResponse extends Typed {}\nexport interface DisableTracingResponse\n  extends Typed,\n    IDisableTracingResponse {}\n\nexport type ConsumerPortResponse =\n  | EnableTracingResponse\n  | ReadBuffersResponse\n  | GetTraceStatsResponse\n  | GetCategoriesResponse\n  | FreeBuffersResponse\n  | DisableTracingResponse;\n\nexport function isReadBuffersResponse(obj: Typed): obj is ReadBuffersResponse {\n  return obj.type === 'ReadBuffersResponse';\n}\n\nexport function isEnableTracingResponse(\n  obj: Typed,\n): obj is EnableTracingResponse {\n  return obj.type === 'EnableTracingResponse';\n}\n\nexport function isGetTraceStatsResponse(\n  obj: Typed,\n): obj is GetTraceStatsResponse {\n  return obj.type === 'GetTraceStatsResponse';\n}\n\nexport function isFreeBuffersResponse(obj: Typed): obj is FreeBuffersResponse {\n  return obj.type === 'FreeBuffersResponse';\n}\n\nexport function isDisableTracingResponse(\n  obj: Typed,\n): obj is DisableTracingResponse {\n  return obj.type === 'DisableTracingResponse';\n}\n"]}