{"version":3,"file":"gpu_settings.js","sourceRoot":"","sources":["../../../../src/plugins/dev.perfetto.RecordTrace/gpu_settings.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;;;AAEjC,8DAAwB;AACxB,qDAAuC;AAGvC,MAAa,WAAW;IACtB,IAAI,CAAC,EAAC,KAAK,EAAkC;QAC3C,MAAM,MAAM,GAAG,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC;QAC3C,OAAO,IAAA,iBAAC,EACN,kBAAkB,KAAK,CAAC,QAAQ,EAAE,EAClC,IAAA,iBAAC,EAAC,sBAAK,EAAE;YACP,KAAK,EAAE,eAAe;YACtB,GAAG,EAAE,kBAAkB;YACvB,KAAK,EAAE,kCAAkC;YACzC,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,OAAO,GAAG,GAAG,CAAC;YAC7C,SAAS,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,OAAO;YAC/B,MAAM;SACP,CAAC,EACF,IAAA,iBAAC,EAAC,sBAAK,EAAE;YACP,KAAK,EAAE,YAAY;YACnB,GAAG,EAAE,uBAAuB;YAC5B,KAAK,EAAE;0DAC2C;YAClD,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,GAAG,CAAC;YACjD,SAAS,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,WAAW;YACnC,MAAM;SACP,CAAC,EACF,IAAA,iBAAC,EAAC,sBAAK,EAAE;YACP,KAAK,EAAE,iBAAiB;YACxB,GAAG,EAAE,qBAAqB;YAC1B,KAAK,EAAE;0DAC2C;YAClD,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,aAAa,GAAG,GAAG,CAAC;YACnD,SAAS,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,aAAa;YACrC,MAAM;SACP,CAAC,CACH,CAAC;IACJ,CAAC;CACF;AAjCD,kCAiCC","sourcesContent":["// Copyright (C) 2022 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport m from 'mithril';\nimport {Probe} from './record_widgets';\nimport {RecordingSectionAttrs} from './recording_sections';\n\nexport class GpuSettings implements m.ClassComponent<RecordingSectionAttrs> {\n  view({attrs}: m.CVnode<RecordingSectionAttrs>) {\n    const recCfg = attrs.recState.recordConfig;\n    return m(\n      `.record-section${attrs.cssClass}`,\n      m(Probe, {\n        title: 'GPU frequency',\n        img: 'rec_cpu_freq.png',\n        descr: 'Records gpu frequency via ftrace',\n        setEnabled: (cfg, val) => (cfg.gpuFreq = val),\n        isEnabled: (cfg) => cfg.gpuFreq,\n        recCfg,\n      }),\n      m(Probe, {\n        title: 'GPU memory',\n        img: 'rec_gpu_mem_total.png',\n        descr: `Allows to track per process and global total GPU memory usages.\n                (Available on recent Android 12+ kernels)`,\n        setEnabled: (cfg, val) => (cfg.gpuMemTotal = val),\n        isEnabled: (cfg) => cfg.gpuMemTotal,\n        recCfg,\n      }),\n      m(Probe, {\n        title: 'GPU work period',\n        img: 'rec_cpu_voltage.png',\n        descr: `Allows to track per package GPU work.\n                (Available on recent Android 14+ kernels)`,\n        setEnabled: (cfg, val) => (cfg.gpuWorkPeriod = val),\n        isEnabled: (cfg) => cfg.gpuWorkPeriod,\n        recCfg,\n      }),\n    );\n  }\n}\n"]}