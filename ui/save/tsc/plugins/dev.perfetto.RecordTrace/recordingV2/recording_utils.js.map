{"version":3,"file":"recording_utils.js","sourceRoot":"","sources":["../../../../../src/plugins/dev.perfetto.RecordTrace/recordingV2/recording_utils.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2022 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nexport const RECORDING_MODAL_DIALOG_KEY = 'recording_target';\n\n// Begin Websocket ////////////////////////////////////////////////////////\n\nexport const WEBSOCKET_UNABLE_TO_CONNECT =\n  'Unable to connect to device via websocket.';\n\n// https://www.rfc-editor.org/rfc/rfc6455#section-7.4.1\nexport const WEBSOCKET_CLOSED_ABNORMALLY_CODE = 1006;\n\n// The messages read by the adb server have their length prepended in hex.\n// This method adds the length at the beginning of the message.\n// Example: 'host:track-devices' -> '0012host:track-devices'\n// go/codesearch/aosp-android11/system/core/adb/SERVICES.TXT\nexport function buildAbdWebsocketCommand(cmd: string) {\n  const hdr = cmd.length.toString(16).padStart(4, '0');\n  return hdr + cmd;\n}\n\n// Sample user agent for Chrome on Mac OS:\n// 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36\n// (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36'\nexport function isMacOs(userAgent: string) {\n  return userAgent.toLowerCase().includes(' mac os ');\n}\n\n// Sample user agent for Chrome on Linux:\n// Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko)\n// Chrome/105.0.0.0 Safari/537.36\nexport function isLinux(userAgent: string) {\n  return userAgent.toLowerCase().includes(' linux ');\n}\n// Sample user agent for Chrome on Windows:\n// Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML,\n// like Gecko) Chrome/125.0.0.0 Safari/537.36\nexport function isWindows(userAgent: string) {\n  return userAgent.toLowerCase().includes('windows ');\n}\n\n// Sample user agent for Chrome on Chrome OS:\n// \"Mozilla/5.0 (X11; CrOS x86_64 14816.99.0) AppleWebKit/537.36\n// (KHTML, like Gecko) Chrome/103.0.5060.114 Safari/537.36\"\n// This condition is wider, in the unlikely possibility of different casing,\nexport function isCrOS(userAgent: string) {\n  return userAgent.toLowerCase().includes(' cros ');\n}\n\n// End Websocket //////////////////////////////////////////////////////////\n\n// Begin Adb //////////////////////////////////////////////////////////////\n\nexport const BINARY_PUSH_FAILURE = 'BinaryPushFailure';\nexport const BINARY_PUSH_UNKNOWN_RESPONSE = 'BinaryPushUnknownResponse';\n\n// In case the device doesn't have the tracebox, we upload the latest version\n// to this path.\nexport const TRACEBOX_DEVICE_PATH = '/data/local/tmp/tracebox';\n\n// Experimentally, this takes 900ms on the first fetch and 20-30ms after\n// because of caching.\nexport const TRACEBOX_FETCH_TIMEOUT = 30000;\n\n// Message shown to the user when they need to allow authentication on the\n// device in order to connect.\nexport const ALLOW_USB_DEBUGGING =\n  'Please allow USB debugging on device and try again.';\n\n// If the Android device has the tracing service on it (from API version 29),\n// then we can connect to this consumer socket.\nexport const DEFAULT_TRACED_CONSUMER_SOCKET_PATH =\n  'localfilesystem:/dev/socket/traced_consumer';\n\n// If the Android device does not have the tracing service on it (before API\n// version 29), we will have to push the tracebox on the device. Then, we\n// can connect to this consumer socket (using it does not require system admin\n// privileges).\nexport const CUSTOM_TRACED_CONSUMER_SOCKET_PATH =\n  'localabstract:traced_consumer';\n\n// End Adb /////////////////////////////////////////////////////////////////\n\n// Begin Webusb ///////////////////////////////////////////////////////////\n\nexport const NO_DEVICE_SELECTED = 'No device selected.';\n\nexport interface UsbInterfaceAndEndpoint {\n  readonly configurationValue: number;\n  readonly usbInterfaceNumber: number;\n  readonly endpoints: USBEndpoint[];\n}\n\nexport const ADB_DEVICE_FILTER = {\n  classCode: 255, // USB vendor specific code\n  subclassCode: 66, // Android vendor specific subclass\n  protocolCode: 1, // Adb protocol\n};\n\nexport function findInterfaceAndEndpoint(\n  device: USBDevice,\n): UsbInterfaceAndEndpoint | undefined {\n  const adbDeviceFilter = ADB_DEVICE_FILTER;\n  for (const config of device.configurations) {\n    for (const interface_ of config.interfaces) {\n      for (const alt of interface_.alternates) {\n        if (\n          alt.interfaceClass === adbDeviceFilter.classCode &&\n          alt.interfaceSubclass === adbDeviceFilter.subclassCode &&\n          alt.interfaceProtocol === adbDeviceFilter.protocolCode\n        ) {\n          return {\n            configurationValue: config.configurationValue,\n            usbInterfaceNumber: interface_.interfaceNumber,\n            endpoints: alt.endpoints,\n          };\n        } // if (alternate)\n      } // for (interface.alternates)\n    } // for (configuration.interfaces)\n  } // for (configurations)\n\n  return undefined;\n}\n\n// End Webusb //////////////////////////////////////////////////////////////\n\n// Begin Chrome ///////////////////////////////////////////////////////////\n\nexport const EXTENSION_ID = 'lfmkphfpdbjijhpomgecfikhfohaoine';\nexport const EXTENSION_URL = `https://chrome.google.com/webstore/detail/perfetto-ui/${EXTENSION_ID}`;\nexport const EXTENSION_NAME = 'Chrome extension';\nexport const EXTENSION_NOT_INSTALLED = `To trace Chrome from the Perfetto UI, you need to install our\n    ${EXTENSION_URL} and then reload this page.`;\n\nexport const MALFORMED_EXTENSION_MESSAGE = 'Malformed extension message.';\nexport const BUFFER_USAGE_NOT_ACCESSIBLE = 'Buffer usage not accessible';\nexport const BUFFER_USAGE_INCORRECT_FORMAT =\n  'The buffer usage data has am incorrect format';\n\n// End Chrome /////////////////////////////////////////////////////////////\n\n// Begin Traced //////////////////////////////////////////////////////////\n\nexport const RECORDING_IN_PROGRESS = 'Recording in progress';\nexport const PARSING_UNKNWON_REQUEST_ID = 'Unknown request id';\nexport const PARSING_UNABLE_TO_DECODE_METHOD = 'Unable to decode method';\nexport const PARSING_UNRECOGNIZED_PORT = 'Unrecognized consumer port response';\nexport const PARSING_UNRECOGNIZED_MESSAGE = 'Unrecognized frame message';\n\n// End Traced ///////////////////////////////////////////////////////////\n"]}