{"version":3,"file":"recording_error_handling.js","sourceRoot":"","sources":["../../../../../src/plugins/dev.perfetto.RecordTrace/recordingV2/recording_error_handling.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2022 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport m from 'mithril';\nimport {getErrorMessage} from '../../../base/errors';\nimport {showModal} from '../../../widgets/modal';\nimport {OnMessageCallback} from './recording_interfaces_v2';\nimport {\n  ALLOW_USB_DEBUGGING,\n  BINARY_PUSH_FAILURE,\n  BINARY_PUSH_UNKNOWN_RESPONSE,\n  EXTENSION_NOT_INSTALLED,\n  EXTENSION_URL,\n  NO_DEVICE_SELECTED,\n  PARSING_UNABLE_TO_DECODE_METHOD,\n  PARSING_UNKNWON_REQUEST_ID,\n  PARSING_UNRECOGNIZED_MESSAGE,\n  PARSING_UNRECOGNIZED_PORT,\n  WEBSOCKET_UNABLE_TO_CONNECT,\n} from './recording_utils';\n\n// The pattern for handling recording error can have the following nesting in\n// case of errors:\n// A. wrapRecordingError -> wraps a promise\n// B. onFailure -> has user defined logic and calls showRecordingModal\n// C. showRecordingModal -> shows UX for a given error; this is not called\n//    directly by wrapRecordingError, because we want the caller (such as the\n//    UI) to dictate the UX\n\n// This method takes a promise and a callback to be execute in case the promise\n// fails. It then awaits the promise and executes the callback in case of\n// failure. In the recording code it is used to wrap:\n// 1. Acessing the WebUSB API.\n// 2. Methods returning promises which can be rejected. For instance:\n// a) When the user clicks 'Add a new device' but then doesn't select a valid\n//    device.\n// b) When the user starts a tracing session, but cancels it before they\n//    authorize the session on the device.\nexport async function wrapRecordingError<T>(\n  promise: Promise<T>,\n  onFailure: OnMessageCallback,\n): Promise<T | undefined> {\n  try {\n    return await promise;\n  } catch (e) {\n    // Sometimes the message is wrapped in an Error object, sometimes not, so\n    // we make sure we transform it into a string.\n    const errorMessage = getErrorMessage(e);\n    onFailure(errorMessage);\n    return undefined;\n  }\n}\n\n// Shows a modal for every known type of error which can arise during recording.\n// In this way, errors occuring at different levels of the recording process\n// can be handled in a central location.\nexport function showRecordingModal(message: string): void {\n  if (\n    [\n      'Unable to claim interface.',\n      'The specified endpoint is not part of a claimed and selected ' +\n        'alternate interface.',\n      // thrown when calling the 'reset' method on a WebUSB device.\n      'Unable to reset the device.',\n    ].some((partOfMessage) => message.includes(partOfMessage))\n  ) {\n    showWebUSBErrorV2();\n  } else if (\n    [\n      'A transfer error has occurred.',\n      'The device was disconnected.',\n      'The transfer was cancelled.',\n    ].some((partOfMessage) => message.includes(partOfMessage)) ||\n    isDeviceDisconnectedError(message)\n  ) {\n    showConnectionLostError();\n  } else if (message === ALLOW_USB_DEBUGGING) {\n    showAllowUSBDebugging();\n  } else if (\n    isMessageComposedOf(message, [\n      BINARY_PUSH_FAILURE,\n      BINARY_PUSH_UNKNOWN_RESPONSE,\n    ])\n  ) {\n    showFailedToPushBinary(message.substring(message.indexOf(':') + 1));\n  } else if (message === NO_DEVICE_SELECTED) {\n    showNoDeviceSelected();\n  } else if (WEBSOCKET_UNABLE_TO_CONNECT === message) {\n    showWebsocketConnectionIssue(message);\n  } else if (message === EXTENSION_NOT_INSTALLED) {\n    showExtensionNotInstalled();\n  } else if (\n    isMessageComposedOf(message, [\n      PARSING_UNKNWON_REQUEST_ID,\n      PARSING_UNABLE_TO_DECODE_METHOD,\n      PARSING_UNRECOGNIZED_PORT,\n      PARSING_UNRECOGNIZED_MESSAGE,\n    ])\n  ) {\n    showIssueParsingTheTracedResponse(message);\n  } else {\n    throw new Error(`${message}`);\n  }\n}\n\nfunction isDeviceDisconnectedError(message: string) {\n  return (\n    message.includes('Device with serial') &&\n    message.includes('was disconnected.')\n  );\n}\n\nfunction isMessageComposedOf(message: string, issues: string[]) {\n  for (const issue of issues) {\n    if (message.includes(issue)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n// Exception thrown by the Recording logic.\nexport class RecordingError extends Error {}\n\nfunction showWebUSBErrorV2() {\n  showModal({\n    title: 'A WebUSB error occurred',\n    content: m(\n      'div',\n      m(\n        'span',\n        `Is adb already running on the host? Run this command and\n      try again.`,\n      ),\n      m('br'),\n      m('.modal-bash', '> adb kill-server'),\n      m('br'),\n      // The statement below covers the following edge case:\n      // 1. 'adb server' is running on the device.\n      // 2. The user selects the new Android target, so we try to fetch the\n      // OS version and do QSS.\n      // 3. The error modal is shown.\n      // 4. The user runs 'adb kill-server'.\n      // At this point we don't have a trigger to try fetching the OS version\n      // + QSS again. Therefore, the user will need to refresh the page.\n      m(\n        'span',\n        \"If after running 'adb kill-server', you don't see \" +\n          \"a 'Start Recording' button on the page and you don't see \" +\n          \"'Allow USB debugging' on the device, \" +\n          'you will need to reload this page.',\n      ),\n      m('br'),\n      m('br'),\n      m('span', 'For details see '),\n      m('a', {href: 'http://b/159048331', target: '_blank'}, 'b/159048331'),\n    ),\n  });\n}\n\nfunction showConnectionLostError(): void {\n  showModal({\n    title: 'Connection with the ADB device lost',\n    content: m(\n      'div',\n      m('span', `Please connect the device again to restart the recording.`),\n      m('br'),\n    ),\n  });\n}\n\nfunction showAllowUSBDebugging(): void {\n  showModal({\n    title: 'Could not connect to the device',\n    content: m(\n      'div',\n      m('span', 'Please allow USB debugging on the device.'),\n      m('br'),\n    ),\n  });\n}\n\nfunction showNoDeviceSelected(): void {\n  showModal({\n    title: 'No device was selected for recording',\n    content: m(\n      'div',\n      m(\n        'span',\n        `If you want to connect to an ADB device,\n           please select it from the list.`,\n      ),\n      m('br'),\n    ),\n  });\n}\n\nfunction showExtensionNotInstalled(): void {\n  showModal({\n    title: 'Perfetto Chrome extension not installed',\n    content: m(\n      'div',\n      m(\n        '.note',\n        `To trace Chrome from the Perfetto UI, you need to install our `,\n        m('a', {href: EXTENSION_URL, target: '_blank'}, 'Chrome extension'),\n        ' and then reload this page.',\n      ),\n      m('br'),\n    ),\n  });\n}\n\nfunction showIssueParsingTheTracedResponse(message: string): void {\n  showModal({\n    title:\n      'A problem was encountered while connecting to' +\n      ' the Perfetto tracing service',\n    content: m('div', m('span', message), m('br')),\n  });\n}\n\nfunction showFailedToPushBinary(message: string): void {\n  showModal({\n    title: 'Failed to push a binary to the device',\n    content: m(\n      'div',\n      m(\n        'span',\n        'This can happen if your Android device has an OS version lower ' +\n          'than Q. Perfetto tried to push the latest version of its ' +\n          'embedded binary but failed.',\n      ),\n      m('br'),\n      m('br'),\n      m('span', 'Error message:'),\n      m('br'),\n      m('span', message),\n    ),\n  });\n}\n\nfunction showWebsocketConnectionIssue(message: string): void {\n  showModal({\n    title: 'Unable to connect to the device via websocket',\n    content: m(\n      'div',\n      m('div', 'trace_processor_shell --httpd is unreachable or crashed.'),\n      m('pre', message),\n    ),\n  });\n}\n"]}