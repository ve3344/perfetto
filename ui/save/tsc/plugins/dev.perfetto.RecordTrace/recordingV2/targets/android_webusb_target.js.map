{"version":3,"file":"android_webusb_target.js","sourceRoot":"","sources":["../../../../../../src/plugins/dev.perfetto.RecordTrace/recordingV2/targets/android_webusb_target.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;;AAEjC,sDAAsD;AACtD,8EAAsE;AAGtE,qDAA+C;AAE/C,MAAa,mBAAoB,SAAQ,8BAAa;IAE1C;IADV,YACU,MAAiB,EACzB,UAAyB,EACzB,cAAsC;QAEtC,KAAK,CAAC,IAAI,oDAAuB,CAAC,MAAM,EAAE,UAAU,CAAC,EAAE,cAAc,CAAC,CAAC;QAJ/D,WAAM,GAAN,MAAM,CAAW;IAK3B,CAAC;IAED,OAAO;QACL,MAAM,IAAI,GACR,IAAA,sBAAY,EAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC;YACrC,GAAG;YACH,IAAA,sBAAY,EAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC;YACtC,SAAS,CAAC;QACZ,OAAO;YACL,UAAU,EAAE,SAAS;YACrB,+DAA+D;YAC/D,eAAe,EAAE,IAAI,CAAC,eAAe;YACrC,WAAW,EAAE,IAAI,CAAC,WAAW,IAAI,EAAE;YACnC,IAAI;SACL,CAAC;IACJ,CAAC;CACF;AAvBD,kDAuBC","sourcesContent":["// Copyright (C) 2022 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {assertExists} from '../../../../base/logging';\nimport {AdbConnectionOverWebusb} from '../adb_connection_over_webusb';\nimport {AdbKeyManager} from '../auth/adb_key_manager';\nimport {OnTargetChangeCallback, TargetInfo} from '../recording_interfaces_v2';\nimport {AndroidTarget} from './android_target';\n\nexport class AndroidWebusbTarget extends AndroidTarget {\n  constructor(\n    private device: USBDevice,\n    keyManager: AdbKeyManager,\n    onTargetChange: OnTargetChangeCallback,\n  ) {\n    super(new AdbConnectionOverWebusb(device, keyManager), onTargetChange);\n  }\n\n  getInfo(): TargetInfo {\n    const name =\n      assertExists(this.device.productName) +\n      ' ' +\n      assertExists(this.device.serialNumber) +\n      ' WebUsb';\n    return {\n      targetType: 'ANDROID',\n      // 'androidApiLevel' will be populated after ADB authorization.\n      androidApiLevel: this.androidApiLevel,\n      dataSources: this.dataSources || [],\n      name,\n    };\n  }\n}\n"]}