{"version":3,"file":"target_factory_registry.js","sourceRoot":"","sources":["../../../../../src/plugins/dev.perfetto.RecordTrace/recordingV2/target_factory_registry.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;;AAEjC,qDAAgD;AAGhD,MAAa,qBAAsB,SAAQ,mBAAuB;IAChE,WAAW;QACT,MAAM,OAAO,GAAwB,EAAE,CAAC;QACxC,KAAK,MAAM,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,CAAC;YAC7C,KAAK,MAAM,MAAM,IAAI,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC;gBAC3C,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACvB,CAAC;QACH,CAAC;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,mBAAmB;QACjB,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC;IAC5C,CAAC;IAED,qBAAqB;QACnB,MAAM,iBAAiB,GAAa,EAAE,CAAC;QACvC,KAAK,MAAM,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,CAAC;YAC7C,KAAK,MAAM,gBAAgB,IAAI,OAAO,CAAC,qBAAqB,EAAE,EAAE,CAAC;gBAC/D,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;YAC3C,CAAC;QACH,CAAC;QACD,OAAO,iBAAiB,CAAC;IAC3B,CAAC;CACF;AAxBD,sDAwBC;AAEY,QAAA,qBAAqB,GAAG,IAAI,qBAAqB,CAAC,CAAC,CAAC,EAAE,EAAE;IACnE,OAAO,CAAC,CAAC,IAAI,CAAC;AAChB,CAAC,CAAC,CAAC","sourcesContent":["// Copyright (C) 2022 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Registry} from '../../../base/registry';\nimport {RecordingTargetV2, TargetFactory} from './recording_interfaces_v2';\n\nexport class TargetFactoryRegistry extends Registry<TargetFactory> {\n  listTargets(): RecordingTargetV2[] {\n    const targets: RecordingTargetV2[] = [];\n    for (const factory of this.registry.values()) {\n      for (const target of factory.listTargets()) {\n        targets.push(target);\n      }\n    }\n    return targets;\n  }\n\n  listTargetFactories(): TargetFactory[] {\n    return Array.from(this.registry.values());\n  }\n\n  listRecordingProblems(): string[] {\n    const recordingProblems: string[] = [];\n    for (const factory of this.registry.values()) {\n      for (const recordingProblem of factory.listRecordingProblems()) {\n        recordingProblems.push(recordingProblem);\n      }\n    }\n    return recordingProblems;\n  }\n}\n\nexport const targetFactoryRegistry = new TargetFactoryRegistry((f) => {\n  return f.kind;\n});\n"]}