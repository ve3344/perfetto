{"version":3,"file":"memory_settings.js","sourceRoot":"","sources":["../../../../src/plugins/dev.perfetto.RecordTrace/memory_settings.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2022 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport m from 'mithril';\nimport {MeminfoCounters, VmstatCounters} from './protos';\nimport {Dropdown, Probe, Slider, Textarea, Toggle} from './record_widgets';\nimport {POLL_INTERVAL_MS, RecordingSectionAttrs} from './recording_sections';\n\nclass HeapSettings implements m.ClassComponent<RecordingSectionAttrs> {\n  view({attrs}: m.CVnode<RecordingSectionAttrs>) {\n    const valuesForMS = [\n      0,\n      1000,\n      10 * 1000,\n      30 * 1000,\n      60 * 1000,\n      5 * 60 * 1000,\n      10 * 60 * 1000,\n      30 * 60 * 1000,\n      60 * 60 * 1000,\n    ];\n    const valuesForShMemBuff = [\n      0,\n      512,\n      1024,\n      2 * 1024,\n      4 * 1024,\n      8 * 1024,\n      16 * 1024,\n      32 * 1024,\n      64 * 1024,\n      128 * 1024,\n      256 * 1024,\n      512 * 1024,\n      1024 * 1024,\n      64 * 1024 * 1024,\n      128 * 1024 * 1024,\n      256 * 1024 * 1024,\n      512 * 1024 * 1024,\n    ];\n    const recCfg = attrs.recState.recordConfig;\n    return m(\n      `.${attrs.cssClass}`,\n      m(Textarea, {\n        title: 'Names or pids of the processes to track (required)',\n        docsLink:\n          'https://perfetto.dev/docs/data-sources/native-heap-profiler#heapprofd-targets',\n        placeholder:\n          'One per line, e.g.:\\n' +\n          'system_server\\n' +\n          'com.google.android.apps.photos\\n' +\n          '1503',\n        set: (cfg, val) => (cfg.hpProcesses = val),\n        get: (cfg) => cfg.hpProcesses,\n        recCfg,\n      }),\n      m(Slider, {\n        title: 'Sampling interval',\n        cssClass: '.thin',\n        values: [\n          0, 1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192,\n          16384, 32768, 65536, 131072, 262144, 524288, 1048576,\n        ],\n        unit: 'B',\n        min: 0,\n        set: (cfg, val) => (cfg.hpSamplingIntervalBytes = val),\n        get: (cfg) => cfg.hpSamplingIntervalBytes,\n        recCfg,\n      }),\n      m(Slider, {\n        title: 'Continuous dumps interval ',\n        description: 'Time between following dumps (0 = disabled)',\n        cssClass: '.thin',\n        values: valuesForMS,\n        unit: 'ms',\n        min: 0,\n        set: (cfg, val) => {\n          cfg.hpContinuousDumpsInterval = val;\n        },\n        get: (cfg) => cfg.hpContinuousDumpsInterval,\n        recCfg,\n      }),\n      m(Slider, {\n        title: 'Continuous dumps phase',\n        description: 'Time before first dump',\n        cssClass: `.thin${\n          attrs.recState.recordConfig.hpContinuousDumpsInterval === 0\n            ? '.greyed-out'\n            : ''\n        }`,\n        values: valuesForMS,\n        unit: 'ms',\n        min: 0,\n        disabled: attrs.recState.recordConfig.hpContinuousDumpsInterval === 0,\n        set: (cfg, val) => (cfg.hpContinuousDumpsPhase = val),\n        get: (cfg) => cfg.hpContinuousDumpsPhase,\n        recCfg,\n      }),\n      m(Slider, {\n        title: `Shared memory buffer`,\n        cssClass: '.thin',\n        values: valuesForShMemBuff.filter(\n          (value) => value === 0 || (value >= 8192 && value % 4096 === 0),\n        ),\n        unit: 'B',\n        min: 0,\n        set: (cfg, val) => (cfg.hpSharedMemoryBuffer = val),\n        get: (cfg) => cfg.hpSharedMemoryBuffer,\n        recCfg,\n      }),\n      m(Toggle, {\n        title: 'Block client',\n        cssClass: '.thin',\n        descr: `Slow down target application if profiler cannot keep up.`,\n        setEnabled: (cfg, val) => (cfg.hpBlockClient = val),\n        isEnabled: (cfg) => cfg.hpBlockClient,\n        recCfg,\n      }),\n      m(Toggle, {\n        title: 'All custom allocators (Q+)',\n        cssClass: '.thin',\n        descr: `If the target application exposes custom allocators, also\nsample from those.`,\n        setEnabled: (cfg, val) => (cfg.hpAllHeaps = val),\n        isEnabled: (cfg) => cfg.hpAllHeaps,\n        recCfg,\n      }),\n      // TODO(hjd): Add advanced options.\n    );\n  }\n}\n\nclass JavaHeapDumpSettings implements m.ClassComponent<RecordingSectionAttrs> {\n  view({attrs}: m.CVnode<RecordingSectionAttrs>) {\n    const valuesForMS = [\n      0,\n      1000,\n      10 * 1000,\n      30 * 1000,\n      60 * 1000,\n      5 * 60 * 1000,\n      10 * 60 * 1000,\n      30 * 60 * 1000,\n      60 * 60 * 1000,\n    ];\n    const recCfg = attrs.recState.recordConfig;\n    return m(\n      `.${attrs.cssClass}`,\n      m(Textarea, {\n        title: 'Names or pids of the processes to track (required)',\n        placeholder: 'One per line, e.g.:\\n' + 'com.android.vending\\n' + '1503',\n        set: (cfg, val) => (cfg.jpProcesses = val),\n        get: (cfg) => cfg.jpProcesses,\n        recCfg,\n      }),\n      m(Slider, {\n        title: 'Continuous dumps interval ',\n        description: 'Time between following dumps (0 = disabled)',\n        cssClass: '.thin',\n        values: valuesForMS,\n        unit: 'ms',\n        min: 0,\n        set: (cfg, val) => {\n          cfg.jpContinuousDumpsInterval = val;\n        },\n        get: (cfg) => cfg.jpContinuousDumpsInterval,\n        recCfg,\n      }),\n      m(Slider, {\n        title: 'Continuous dumps phase',\n        description: 'Time before first dump',\n        cssClass: `.thin${\n          attrs.recState.recordConfig.jpContinuousDumpsInterval === 0\n            ? '.greyed-out'\n            : ''\n        }`,\n        values: valuesForMS,\n        unit: 'ms',\n        min: 0,\n        disabled: attrs.recState.recordConfig.jpContinuousDumpsInterval === 0,\n        set: (cfg, val) => (cfg.jpContinuousDumpsPhase = val),\n        get: (cfg) => cfg.jpContinuousDumpsPhase,\n        recCfg,\n      }),\n    );\n  }\n}\n\nexport class MemorySettings implements m.ClassComponent<RecordingSectionAttrs> {\n  view({attrs}: m.CVnode<RecordingSectionAttrs>) {\n    const recCfg = attrs.recState.recordConfig;\n    const meminfoOpts = new Map<string, string>();\n    for (const x in MeminfoCounters) {\n      if (\n        typeof MeminfoCounters[x] === 'number' &&\n        !`${x}`.endsWith('_UNSPECIFIED')\n      ) {\n        meminfoOpts.set(x, x.replace('MEMINFO_', '').toLowerCase());\n      }\n    }\n    const vmstatOpts = new Map<string, string>();\n    for (const x in VmstatCounters) {\n      if (\n        typeof VmstatCounters[x] === 'number' &&\n        !`${x}`.endsWith('_UNSPECIFIED')\n      ) {\n        vmstatOpts.set(x, x.replace('VMSTAT_', '').toLowerCase());\n      }\n    }\n    return m(\n      `.record-section${attrs.cssClass}`,\n      m(\n        Probe,\n        {\n          title: 'Native heap profiling',\n          img: 'rec_native_heap_profiler.png',\n          descr: `Track native heap allocations & deallocations of an Android\n               process. (Available on Android 10+)`,\n          setEnabled: (cfg, val) => (cfg.heapProfiling = val),\n          isEnabled: (cfg) => cfg.heapProfiling,\n          recCfg,\n        },\n        m(HeapSettings, attrs),\n      ),\n      m(\n        Probe,\n        {\n          title: 'Java heap dumps',\n          img: 'rec_java_heap_dump.png',\n          descr: `Dump information about the Java object graph of an\n          Android app. (Available on Android 11+)`,\n          setEnabled: (cfg, val) => (cfg.javaHeapDump = val),\n          isEnabled: (cfg) => cfg.javaHeapDump,\n          recCfg,\n        },\n        m(JavaHeapDumpSettings, attrs),\n      ),\n      m(\n        Probe,\n        {\n          title: 'Kernel meminfo',\n          img: 'rec_meminfo.png',\n          descr: 'Polling of /proc/meminfo',\n          setEnabled: (cfg, val) => (cfg.meminfo = val),\n          isEnabled: (cfg) => cfg.meminfo,\n          recCfg,\n        },\n        m(Slider, {\n          title: 'Poll interval',\n          cssClass: '.thin',\n          values: POLL_INTERVAL_MS,\n          unit: 'ms',\n          set: (cfg, val) => (cfg.meminfoPeriodMs = val),\n          get: (cfg) => cfg.meminfoPeriodMs,\n          recCfg,\n        }),\n        m(Dropdown, {\n          title: 'Select counters',\n          cssClass: '.multicolumn',\n          options: meminfoOpts,\n          set: (cfg, val) => (cfg.meminfoCounters = val),\n          get: (cfg) => cfg.meminfoCounters,\n          recCfg,\n        }),\n      ),\n      m(Probe, {\n        title: 'High-frequency memory events',\n        img: 'rec_mem_hifreq.png',\n        descr: `Allows to track short memory spikes and transitories through\n                ftrace's mm_event, rss_stat and ion events. Available only\n                on recent Android Q+ kernels`,\n        setEnabled: (cfg, val) => (cfg.memHiFreq = val),\n        isEnabled: (cfg) => cfg.memHiFreq,\n        recCfg,\n      }),\n      m(Probe, {\n        title: 'Low memory killer',\n        img: 'rec_lmk.png',\n        descr: `Record LMK events. Works both with the old in-kernel LMK\n                and the newer userspace lmkd. It also tracks OOM score\n                adjustments.`,\n        setEnabled: (cfg, val) => (cfg.memLmk = val),\n        isEnabled: (cfg) => cfg.memLmk,\n        recCfg,\n      }),\n      m(\n        Probe,\n        {\n          title: 'Per process stats',\n          img: 'rec_ps_stats.png',\n          descr: `Periodically samples all processes in the system tracking:\n                    their thread list, memory counters (RSS, swap and other\n                    /proc/status counters) and oom_score_adj.`,\n          setEnabled: (cfg, val) => (cfg.procStats = val),\n          isEnabled: (cfg) => cfg.procStats,\n          recCfg,\n        },\n        m(Slider, {\n          title: 'Poll interval',\n          cssClass: '.thin',\n          values: POLL_INTERVAL_MS,\n          unit: 'ms',\n          set: (cfg, val) => (cfg.procStatsPeriodMs = val),\n          get: (cfg) => cfg.procStatsPeriodMs,\n          recCfg,\n        }),\n      ),\n      m(\n        Probe,\n        {\n          title: 'Virtual memory stats',\n          img: 'rec_vmstat.png',\n          descr: `Periodically polls virtual memory stats from /proc/vmstat.\n                    Allows to gather statistics about swap, eviction,\n                    compression and pagecache efficiency`,\n          setEnabled: (cfg, val) => (cfg.vmstat = val),\n          isEnabled: (cfg) => cfg.vmstat,\n          recCfg,\n        },\n        m(Slider, {\n          title: 'Poll interval',\n          cssClass: '.thin',\n          values: POLL_INTERVAL_MS,\n          unit: 'ms',\n          set: (cfg, val) => (cfg.vmstatPeriodMs = val),\n          get: (cfg) => cfg.vmstatPeriodMs,\n          recCfg,\n        }),\n        m(Dropdown, {\n          title: 'Select counters',\n          cssClass: '.multicolumn',\n          options: vmstatOpts,\n          set: (cfg, val) => (cfg.vmstatCounters = val),\n          get: (cfg) => cfg.vmstatCounters,\n          recCfg,\n        }),\n      ),\n    );\n  }\n}\n"]}