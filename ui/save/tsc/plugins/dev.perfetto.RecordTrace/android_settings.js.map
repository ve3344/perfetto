{"version":3,"file":"android_settings.js","sourceRoot":"","sources":["../../../../src/plugins/dev.perfetto.RecordTrace/android_settings.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2022 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport m from 'mithril';\nimport {AtomId, DataSourceDescriptor} from './protos';\nimport {Dropdown, Probe, Slider, Textarea, Toggle} from './record_widgets';\nimport {RecordingSectionAttrs} from './recording_sections';\nimport {RecordConfig} from './record_config_types';\n\nconst PUSH_ATOM_IDS = new Map<string, string>();\nconst PULL_ATOM_IDS = new Map<string, string>();\nfor (const key in AtomId) {\n  if (!Object.hasOwn(AtomId, key)) continue;\n  const value = Number(AtomId[key]);\n  if (!isNaN(value)) {\n    if (value > 2 && value < 9999) {\n      PUSH_ATOM_IDS.set(String(value), key);\n    } else if (value >= 10000 && value < 99999) {\n      PULL_ATOM_IDS.set(String(value), key);\n    }\n  }\n}\n\nconst LOG_BUFFERS = new Map<string, string>();\nLOG_BUFFERS.set('LID_CRASH', 'Crash');\nLOG_BUFFERS.set('LID_DEFAULT', 'Main');\nLOG_BUFFERS.set('LID_EVENTS', 'Binary events');\nLOG_BUFFERS.set('LID_KERNEL', 'Kernel');\nLOG_BUFFERS.set('LID_RADIO', 'Radio');\nLOG_BUFFERS.set('LID_SECURITY', 'Security');\nLOG_BUFFERS.set('LID_STATS', 'Stats');\nLOG_BUFFERS.set('LID_SYSTEM', 'System');\n\nconst DEFAULT_ATRACE_CATEGORIES = new Map<string, string>();\nDEFAULT_ATRACE_CATEGORIES.set('adb', 'ADB');\nDEFAULT_ATRACE_CATEGORIES.set('aidl', 'AIDL calls');\nDEFAULT_ATRACE_CATEGORIES.set('am', 'Activity Manager');\nDEFAULT_ATRACE_CATEGORIES.set('audio', 'Audio');\nDEFAULT_ATRACE_CATEGORIES.set('binder_driver', 'Binder Kernel driver');\nDEFAULT_ATRACE_CATEGORIES.set('binder_lock', 'Binder global lock trace');\nDEFAULT_ATRACE_CATEGORIES.set('bionic', 'Bionic C library');\nDEFAULT_ATRACE_CATEGORIES.set('camera', 'Camera');\nDEFAULT_ATRACE_CATEGORIES.set('dalvik', 'ART & Dalvik');\nDEFAULT_ATRACE_CATEGORIES.set('database', 'Database');\nDEFAULT_ATRACE_CATEGORIES.set('gfx', 'Graphics');\nDEFAULT_ATRACE_CATEGORIES.set('hal', 'Hardware Modules');\nDEFAULT_ATRACE_CATEGORIES.set('input', 'Input');\nDEFAULT_ATRACE_CATEGORIES.set('network', 'Network');\nDEFAULT_ATRACE_CATEGORIES.set('nnapi', 'Neural Network API');\nDEFAULT_ATRACE_CATEGORIES.set('pm', 'Package Manager');\nDEFAULT_ATRACE_CATEGORIES.set('power', 'Power Management');\nDEFAULT_ATRACE_CATEGORIES.set('res', 'Resource Loading');\nDEFAULT_ATRACE_CATEGORIES.set('rro', 'Resource Overlay');\nDEFAULT_ATRACE_CATEGORIES.set('rs', 'RenderScript');\nDEFAULT_ATRACE_CATEGORIES.set('sm', 'Sync Manager');\nDEFAULT_ATRACE_CATEGORIES.set('ss', 'System Server');\nDEFAULT_ATRACE_CATEGORIES.set('vibrator', 'Vibrator');\nDEFAULT_ATRACE_CATEGORIES.set('video', 'Video');\nDEFAULT_ATRACE_CATEGORIES.set('view', 'View System');\nDEFAULT_ATRACE_CATEGORIES.set('webview', 'WebView');\nDEFAULT_ATRACE_CATEGORIES.set('wm', 'Window Manager');\n\nfunction isDataSourceDescriptor(\n  descriptor: unknown,\n): descriptor is DataSourceDescriptor {\n  if (descriptor instanceof Object) {\n    return (descriptor as DataSourceDescriptor).name !== undefined;\n  }\n  return false;\n}\n\ninterface AtraceAppsListAttrs {\n  recCfg: RecordConfig;\n}\n\nclass AtraceAppsList implements m.ClassComponent<AtraceAppsListAttrs> {\n  view({attrs}: m.CVnode<AtraceAppsListAttrs>) {\n    if (attrs.recCfg.allAtraceApps) {\n      return m('div');\n    }\n\n    return m(Textarea, {\n      placeholder:\n        'Apps to profile, one per line, e.g.:\\n' +\n        'com.android.phone\\n' +\n        'lmkd\\n' +\n        'com.android.nfc',\n      cssClass: '.record-apps-list',\n      set: (cfg, val) => (cfg.atraceApps = val),\n      get: (cfg) => cfg.atraceApps,\n      recCfg: attrs.recCfg,\n    });\n  }\n}\n\nexport class AndroidSettings\n  implements m.ClassComponent<RecordingSectionAttrs>\n{\n  view({attrs}: m.CVnode<RecordingSectionAttrs>) {\n    const recCfg = attrs.recState.recordConfig;\n    let atraceCategories = DEFAULT_ATRACE_CATEGORIES;\n    for (const dataSource of attrs.dataSources) {\n      if (\n        dataSource.name !== 'linux.ftrace' ||\n        !isDataSourceDescriptor(dataSource.descriptor)\n      ) {\n        continue;\n      }\n      const atraces = dataSource.descriptor.ftraceDescriptor?.atraceCategories;\n      if (!atraces || atraces.length === 0) {\n        break;\n      }\n\n      atraceCategories = new Map<string, string>();\n      for (const atrace of atraces) {\n        if (atrace.name) {\n          atraceCategories.set(atrace.name, atrace.description ?? '');\n        }\n      }\n    }\n\n    return m(\n      `.record-section${attrs.cssClass}`,\n      m(\n        Probe,\n        {\n          title: 'Atrace userspace annotations',\n          img: 'rec_atrace.png',\n          descr: `Enables C++ / Java codebase annotations (ATRACE_BEGIN() /\n                      os.Trace())`,\n          setEnabled: (cfg, val) => (cfg.atrace = val),\n          isEnabled: (cfg) => cfg.atrace,\n          recCfg,\n        },\n        m(Dropdown, {\n          title: 'Categories',\n          cssClass: '.multicolumn.atrace-categories',\n          options: atraceCategories,\n          set: (cfg, val) => (cfg.atraceCats = val),\n          get: (cfg) => cfg.atraceCats,\n          recCfg,\n        }),\n        m(Toggle, {\n          title: 'Record events from all Android apps and services',\n          descr: '',\n          setEnabled: (cfg, val) => (cfg.allAtraceApps = val),\n          isEnabled: (cfg) => cfg.allAtraceApps,\n          recCfg,\n        }),\n        m(AtraceAppsList, {recCfg}),\n      ),\n      m(\n        Probe,\n        {\n          title: 'Event log (logcat)',\n          img: 'rec_logcat.png',\n          descr: `Streams the event log into the trace. If no buffer filter is\n                      specified, all buffers are selected.`,\n          setEnabled: (cfg, val) => (cfg.androidLogs = val),\n          isEnabled: (cfg) => cfg.androidLogs,\n          recCfg,\n        },\n        m(Dropdown, {\n          title: 'Buffers',\n          cssClass: '.multicolumn',\n          options: LOG_BUFFERS,\n          set: (cfg, val) => (cfg.androidLogBuffers = val),\n          get: (cfg) => cfg.androidLogBuffers,\n          recCfg,\n        }),\n      ),\n      m(Probe, {\n        title: 'Frame timeline',\n        img: 'rec_frame_timeline.png',\n        descr: `Records expected/actual frame timings from surface_flinger.\n                      Requires Android 12 (S) or above.`,\n        setEnabled: (cfg, val) => (cfg.androidFrameTimeline = val),\n        isEnabled: (cfg) => cfg.androidFrameTimeline,\n        recCfg,\n      }),\n      m(Probe, {\n        title: 'Game intervention list',\n        img: '',\n        descr: `List game modes and interventions.\n                    Requires Android 13 (T) or above.`,\n        setEnabled: (cfg, val) => (cfg.androidGameInterventionList = val),\n        isEnabled: (cfg) => cfg.androidGameInterventionList,\n        recCfg,\n      }),\n      m(\n        Probe,\n        {\n          title: 'Network Tracing',\n          img: '',\n          descr: `Records detailed information on network packets.\n                      Requires Android 14 (U) or above.`,\n          setEnabled: (cfg, val) => (cfg.androidNetworkTracing = val),\n          isEnabled: (cfg) => cfg.androidNetworkTracing,\n          recCfg,\n        },\n        m(Slider, {\n          title: 'Poll interval',\n          cssClass: '.thin',\n          values: [100, 250, 500, 1000, 2500],\n          unit: 'ms',\n          set: (cfg, val) => (cfg.androidNetworkTracingPollMs = val),\n          get: (cfg) => cfg.androidNetworkTracingPollMs,\n          recCfg,\n        }),\n      ),\n      m(\n        Probe,\n        {\n          title: 'Statsd Atoms',\n          img: '',\n          descr:\n            \"Record instances of statsd atoms to the 'Statsd Atoms' track.\",\n          setEnabled: (cfg, val) => (cfg.androidStatsd = val),\n          isEnabled: (cfg) => cfg.androidStatsd,\n          recCfg,\n        },\n        m(Dropdown, {\n          title: 'Pushed Atoms',\n          cssClass: '.singlecolumn',\n          options: PUSH_ATOM_IDS,\n          set: (cfg, val) => (cfg.androidStatsdPushedAtoms = val),\n          get: (cfg) => cfg.androidStatsdPushedAtoms,\n          recCfg,\n        }),\n        m(Textarea, {\n          placeholder:\n            'Add raw pushed atoms IDs, one per line, e.g.:\\n' + '818\\n' + '819',\n          set: (cfg, val) => (cfg.androidStatsdRawPushedAtoms = val),\n          get: (cfg) => cfg.androidStatsdRawPushedAtoms,\n          recCfg,\n        }),\n        m(Dropdown, {\n          title: 'Pulled Atoms',\n          cssClass: '.singlecolumn',\n          options: PULL_ATOM_IDS,\n          set: (cfg, val) => (cfg.androidStatsdPulledAtoms = val),\n          get: (cfg) => cfg.androidStatsdPulledAtoms,\n          recCfg,\n        }),\n        m(Textarea, {\n          placeholder:\n            'Add raw pulled atom IDs, one per line, e.g.:\\n' +\n            '10063\\n' +\n            '10064\\n',\n          set: (cfg, val) => (cfg.androidStatsdRawPulledAtoms = val),\n          get: (cfg) => cfg.androidStatsdRawPulledAtoms,\n          recCfg,\n        }),\n        m(Slider, {\n          title: 'Pulled atom pull frequency (ms)',\n          cssClass: '.thin',\n          values: [500, 1000, 5000, 30000, 60000],\n          unit: 'ms',\n          set: (cfg, val) => (cfg.androidStatsdPulledAtomPullFrequencyMs = val),\n          get: (cfg) => cfg.androidStatsdPulledAtomPullFrequencyMs,\n          recCfg,\n        }),\n        m(Textarea, {\n          placeholder:\n            'Add pulled atom packages, one per line, e.g.:\\n' +\n            'com.android.providers.telephony',\n          set: (cfg, val) => (cfg.androidStatsdPulledAtomPackages = val),\n          get: (cfg) => cfg.androidStatsdPulledAtomPackages,\n          recCfg,\n        }),\n      ),\n    );\n  }\n}\n"]}