{"version":3,"file":"etw_settings.js","sourceRoot":"","sources":["../../../../src/plugins/dev.perfetto.RecordTrace/etw_settings.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;;;AAEjC,8DAAwB;AACxB,qDAAuC;AAGvC,MAAa,WAAW;IACtB,IAAI,CAAC,EAAC,KAAK,EAAkC;QAC3C,MAAM,MAAM,GAAG,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC;QAC3C,OAAO,IAAA,iBAAC,EACN,kBAAkB,KAAK,CAAC,QAAQ,EAAE,EAClC,IAAA,iBAAC,EAAC,sBAAK,EAAE;YACP,KAAK,EAAE,SAAS;YAChB,GAAG,EAAE,IAAI;YACT,KAAK,EAAE,2CAA2C;YAClD,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,UAAU,GAAG,GAAG,CAAC;YAChD,SAAS,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,UAAU;YAClC,MAAM;SACP,CAAC,EACF,IAAA,iBAAC,EAAC,sBAAK,EAAE;YACP,KAAK,EAAE,YAAY;YACnB,GAAG,EAAE,IAAI;YACT,KAAK,EAAE,8BAA8B;YACrC,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,cAAc,GAAG,GAAG,CAAC;YACpD,SAAS,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,cAAc;YACtC,MAAM;SACP,CAAC,CACH,CAAC;IACJ,CAAC;CACF;AAvBD,kCAuBC","sourcesContent":["// Copyright (C) 2024 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport m from 'mithril';\nimport {Probe} from './record_widgets';\nimport {RecordingSectionAttrs} from './recording_sections';\n\nexport class EtwSettings implements m.ClassComponent<RecordingSectionAttrs> {\n  view({attrs}: m.CVnode<RecordingSectionAttrs>) {\n    const recCfg = attrs.recState.recordConfig;\n    return m(\n      `.record-section${attrs.cssClass}`,\n      m(Probe, {\n        title: 'CSwitch',\n        img: null,\n        descr: `Enables to recording of context switches.`,\n        setEnabled: (cfg, val) => (cfg.etwCSwitch = val),\n        isEnabled: (cfg) => cfg.etwCSwitch,\n        recCfg,\n      }),\n      m(Probe, {\n        title: 'Dispatcher',\n        img: null,\n        descr: 'Enables to get thread state.',\n        setEnabled: (cfg, val) => (cfg.etwThreadState = val),\n        isEnabled: (cfg) => cfg.etwThreadState,\n        recCfg,\n      }),\n    );\n  }\n}\n"]}