{"version":3,"file":"record_widgets.js","sourceRoot":"","sources":["../../../../src/plugins/dev.perfetto.RecordTrace/record_widgets.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2019 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport m from 'mithril';\nimport {copyToClipboard} from '../../base/clipboard';\nimport {assertExists} from '../../base/logging';\nimport {RecordConfig} from './record_config_types';\nimport {assetSrc} from '../../base/assets';\nimport {scheduleFullRedraw} from '../../widgets/raf';\n\nexport declare type Setter<T> = (cfg: RecordConfig, val: T) => void;\nexport declare type Getter<T> = (cfg: RecordConfig) => T;\n\nfunction defaultSort(a: string, b: string) {\n  return a.localeCompare(b);\n}\n\n// +---------------------------------------------------------------------------+\n// | Docs link with 'i' in circle icon.                                        |\n// +---------------------------------------------------------------------------+\n\ninterface DocsChipAttrs {\n  href: string;\n}\n\nclass DocsChip implements m.ClassComponent<DocsChipAttrs> {\n  view({attrs}: m.CVnode<DocsChipAttrs>) {\n    return m(\n      'a.inline-chip',\n      {href: attrs.href, title: 'Open docs in new tab', target: '_blank'},\n      m('i.material-icons', 'info'),\n      ' Docs',\n    );\n  }\n}\n\n// +---------------------------------------------------------------------------+\n// | Probe: the rectangular box on the right-hand-side with a toggle box.      |\n// +---------------------------------------------------------------------------+\n\nexport interface ProbeAttrs {\n  recCfg: RecordConfig;\n  title: string;\n  img: string | null;\n  compact?: boolean;\n  descr: m.Children;\n  isEnabled: Getter<boolean>;\n  setEnabled: Setter<boolean>;\n}\n\nexport class Probe implements m.ClassComponent<ProbeAttrs> {\n  view({attrs, children}: m.CVnode<ProbeAttrs>) {\n    const onToggle = (enabled: boolean) => {\n      attrs.setEnabled(attrs.recCfg, enabled);\n      scheduleFullRedraw();\n    };\n\n    const enabled = attrs.isEnabled(attrs.recCfg);\n\n    return m(\n      `.probe${attrs.compact ? '.compact' : ''}${enabled ? '.enabled' : ''}`,\n      attrs.img &&\n        m('img', {\n          src: assetSrc(`assets/${attrs.img}`),\n          onclick: () => onToggle(!enabled),\n        }),\n      m(\n        'label',\n        m(`input[type=checkbox]`, {\n          checked: enabled,\n          oninput: (e: InputEvent) => {\n            onToggle((e.target as HTMLInputElement).checked);\n          },\n        }),\n        m('span', attrs.title),\n      ),\n      attrs.compact\n        ? ''\n        : m(\n            `div${attrs.img ? '' : '.extended-desc'}`,\n            m('div', attrs.descr),\n            m('.probe-config', children),\n          ),\n    );\n  }\n}\n\nexport function CompactProbe(args: {\n  recCfg: RecordConfig;\n  title: string;\n  isEnabled: Getter<boolean>;\n  setEnabled: Setter<boolean>;\n}) {\n  return m(Probe, {\n    recCfg: args.recCfg,\n    title: args.title,\n    img: null,\n    compact: true,\n    descr: '',\n    isEnabled: args.isEnabled,\n    setEnabled: args.setEnabled,\n  });\n}\n\n// +-------------------------------------------------------------+\n// | Toggle: an on/off switch.\n// +-------------------------------------------------------------+\n\nexport interface ToggleAttrs {\n  recCfg: RecordConfig;\n  title: string;\n  descr: string;\n  cssClass?: string;\n  isEnabled: Getter<boolean>;\n  setEnabled: Setter<boolean>;\n}\n\nexport class Toggle implements m.ClassComponent<ToggleAttrs> {\n  view({attrs}: m.CVnode<ToggleAttrs>) {\n    const onToggle = (enabled: boolean) => {\n      attrs.setEnabled(attrs.recCfg, enabled);\n      scheduleFullRedraw();\n    };\n\n    const enabled = attrs.isEnabled(attrs.recCfg);\n\n    return m(\n      `.toggle${enabled ? '.enabled' : ''}${attrs.cssClass ?? ''}`,\n      m(\n        'label',\n        m(`input[type=checkbox]`, {\n          checked: enabled,\n          oninput: (e: InputEvent) => {\n            onToggle((e.target as HTMLInputElement).checked);\n          },\n        }),\n        m('span', attrs.title),\n      ),\n      m('.descr', attrs.descr),\n    );\n  }\n}\n\n// +---------------------------------------------------------------------------+\n// | Slider: draggable horizontal slider with numeric spinner.                 |\n// +---------------------------------------------------------------------------+\n\nexport interface SliderAttrs {\n  recCfg: RecordConfig;\n  title: string;\n  icon?: string;\n  cssClass?: string;\n  isTime?: boolean;\n  unit: string;\n  values: number[];\n  get: Getter<number>;\n  set: Setter<number>;\n  min?: number;\n  description?: string;\n  disabled?: boolean;\n  zeroIsDefault?: boolean;\n}\n\nexport class Slider implements m.ClassComponent<SliderAttrs> {\n  onValueChange(attrs: SliderAttrs, newVal: number) {\n    attrs.set(attrs.recCfg, newVal);\n    scheduleFullRedraw();\n  }\n\n  onTimeValueChange(attrs: SliderAttrs, hms: string) {\n    try {\n      const date = new Date(`1970-01-01T${hms}.000Z`);\n      if (isNaN(date.getTime())) return;\n      this.onValueChange(attrs, date.getTime());\n    } catch {}\n  }\n\n  onSliderChange(attrs: SliderAttrs, newIdx: number) {\n    this.onValueChange(attrs, attrs.values[newIdx]);\n  }\n\n  view({attrs}: m.CVnode<SliderAttrs>) {\n    const id = attrs.title.replace(/[^a-z0-9]/gim, '_').toLowerCase();\n    const maxIdx = attrs.values.length - 1;\n    const val = attrs.get(attrs.recCfg);\n    // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n    let min = attrs.min || 1;\n    if (attrs.zeroIsDefault) {\n      min = Math.min(0, min);\n    }\n    const description = attrs.description;\n    const disabled = attrs.disabled;\n\n    // Find the index of the closest value in the slider.\n    let idx = 0;\n    for (; idx < attrs.values.length && attrs.values[idx] < val; idx++) {}\n\n    let spinnerCfg = {};\n    if (attrs.isTime) {\n      spinnerCfg = {\n        type: 'text',\n        pattern: '(0[0-9]|1[0-9]|2[0-3])(:[0-5][0-9]){2}', // hh:mm:ss\n        value: new Date(val).toISOString().substr(11, 8),\n        oninput: (e: InputEvent) => {\n          this.onTimeValueChange(attrs, (e.target as HTMLInputElement).value);\n        },\n      };\n    } else {\n      const isDefault = attrs.zeroIsDefault && val === 0;\n      spinnerCfg = {\n        type: 'number',\n        value: isDefault ? '' : val,\n        placeholder: isDefault ? '(default)' : '',\n        oninput: (e: InputEvent) => {\n          this.onValueChange(attrs, +(e.target as HTMLInputElement).value);\n        },\n      };\n    }\n    return m(\n      '.slider' + (attrs.cssClass ?? ''),\n      m('header', attrs.title),\n      description ? m('header.descr', attrs.description) : '',\n      attrs.icon !== undefined ? m('i.material-icons', attrs.icon) : [],\n      m(`input[id=\"${id}\"][type=range][min=0][max=${maxIdx}][value=${idx}]`, {\n        disabled,\n        oninput: (e: InputEvent) => {\n          this.onSliderChange(attrs, +(e.target as HTMLInputElement).value);\n        },\n      }),\n      m(`input.spinner[min=${min}][for=${id}]`, spinnerCfg),\n      m('.unit', attrs.unit),\n    );\n  }\n}\n\n// +---------------------------------------------------------------------------+\n// | Dropdown: wrapper around <select>. Supports single an multiple selection. |\n// +---------------------------------------------------------------------------+\n\nexport interface DropdownAttrs {\n  recCfg: RecordConfig;\n  title: string;\n  cssClass?: string;\n  options: Map<string, string>;\n  sort?: (a: string, b: string) => number;\n  get: Getter<string[]>;\n  set: Setter<string[]>;\n}\n\nexport class Dropdown implements m.ClassComponent<DropdownAttrs> {\n  resetScroll(dom: HTMLSelectElement) {\n    // Chrome seems to override the scroll offset on creationa, b without this,\n    // even though we call it after having marked the options as selected.\n    setTimeout(() => {\n      // Don't reset the scroll position if the element is still focused.\n      if (dom !== document.activeElement) dom.scrollTop = 0;\n    }, 0);\n  }\n\n  onChange(attrs: DropdownAttrs, e: Event) {\n    const dom = e.target as HTMLSelectElement;\n    const selKeys: string[] = [];\n    for (let i = 0; i < dom.selectedOptions.length; i++) {\n      const item = assertExists(dom.selectedOptions.item(i));\n      selKeys.push(item.value);\n    }\n    attrs.set(attrs.recCfg, selKeys);\n    scheduleFullRedraw();\n  }\n\n  view({attrs}: m.CVnode<DropdownAttrs>) {\n    const options: m.Children = [];\n    const selItems = attrs.get(attrs.recCfg);\n    let numSelected = 0;\n    const entries = [...attrs.options.entries()];\n    const f = attrs.sort === undefined ? defaultSort : attrs.sort;\n    entries.sort((a, b) => f(a[1], b[1]));\n    for (const [key, label] of entries) {\n      const opts = {value: key, selected: false};\n      if (selItems.includes(key)) {\n        opts.selected = true;\n        numSelected++;\n      }\n      options.push(m('option', opts, label));\n    }\n    const label = `${attrs.title} ${numSelected ? `(${numSelected})` : ''}`;\n    return m(\n      `select.dropdown${attrs.cssClass ?? ''}[multiple=multiple]`,\n      {\n        onblur: (e: Event) => this.resetScroll(e.target as HTMLSelectElement),\n        onmouseleave: (e: Event) =>\n          this.resetScroll(e.target as HTMLSelectElement),\n        oninput: (e: Event) => this.onChange(attrs, e),\n        oncreate: (vnode) => this.resetScroll(vnode.dom as HTMLSelectElement),\n      },\n      m('optgroup', {label}, options),\n    );\n  }\n}\n\n// +---------------------------------------------------------------------------+\n// | Textarea: wrapper around <textarea>.                                      |\n// +---------------------------------------------------------------------------+\n\nexport interface TextareaAttrs {\n  recCfg: RecordConfig;\n  placeholder: string;\n  docsLink?: string;\n  cssClass?: string;\n  get: Getter<string>;\n  set: Setter<string>;\n  title?: string;\n}\n\nexport class Textarea implements m.ClassComponent<TextareaAttrs> {\n  onChange(attrs: TextareaAttrs, dom: HTMLTextAreaElement) {\n    attrs.set(attrs.recCfg, dom.value);\n    scheduleFullRedraw();\n  }\n\n  view({attrs}: m.CVnode<TextareaAttrs>) {\n    return m(\n      '.textarea-holder',\n      m(\n        'header',\n        attrs.title,\n        attrs.docsLink && [' ', m(DocsChip, {href: attrs.docsLink})],\n      ),\n      m(`textarea.extra-input${attrs.cssClass ?? ''}`, {\n        onchange: (e: Event) =>\n          this.onChange(attrs, e.target as HTMLTextAreaElement),\n        placeholder: attrs.placeholder,\n        value: attrs.get(attrs.recCfg),\n      }),\n    );\n  }\n}\n\n// +---------------------------------------------------------------------------+\n// | CodeSnippet: command-prompt-like box with code snippets to copy/paste.    |\n// +---------------------------------------------------------------------------+\n\nexport interface CodeSnippetAttrs {\n  text: string;\n  hardWhitespace?: boolean;\n}\n\nexport class CodeSnippet implements m.ClassComponent<CodeSnippetAttrs> {\n  view({attrs}: m.CVnode<CodeSnippetAttrs>) {\n    return m(\n      '.code-snippet',\n      m(\n        'button',\n        {\n          title: 'Copy to clipboard',\n          onclick: () => copyToClipboard(attrs.text),\n        },\n        m('i.material-icons', 'assignment'),\n      ),\n      m('code', attrs.text),\n    );\n  }\n}\n\nexport interface CategoryGetter {\n  get: Getter<string[]>;\n  set: Setter<string[]>;\n}\n\ntype CategoriesCheckboxListParams = CategoryGetter & {\n  recCfg: RecordConfig;\n  categories: Map<string, string>;\n  title: string;\n};\n\nexport class CategoriesCheckboxList\n  implements m.ClassComponent<CategoriesCheckboxListParams>\n{\n  updateValue(\n    attrs: CategoriesCheckboxListParams,\n    value: string,\n    enabled: boolean,\n  ) {\n    const values = attrs.get(attrs.recCfg);\n    const index = values.indexOf(value);\n    if (enabled && index === -1) {\n      values.push(value);\n    }\n    if (!enabled && index !== -1) {\n      values.splice(index, 1);\n    }\n    scheduleFullRedraw();\n  }\n\n  view({attrs}: m.CVnode<CategoriesCheckboxListParams>) {\n    const enabled = new Set(attrs.get(attrs.recCfg));\n    return m(\n      '.categories-list',\n      m(\n        'h3',\n        attrs.title,\n        m(\n          'button.config-button',\n          {\n            onclick: () => {\n              attrs.set(attrs.recCfg, Array.from(attrs.categories.keys()));\n            },\n          },\n          'All',\n        ),\n        m(\n          'button.config-button',\n          {\n            onclick: () => {\n              attrs.set(attrs.recCfg, []);\n            },\n          },\n          'None',\n        ),\n      ),\n      m(\n        'ul.checkboxes',\n        Array.from(attrs.categories.entries()).map(([key, value]) => {\n          const id = `category-checkbox-${key}`;\n          return m(\n            'label',\n            {for: id},\n            m(\n              'li',\n              m('input[type=checkbox]', {\n                id,\n                checked: enabled.has(key),\n                onclick: (e: InputEvent) => {\n                  const target = e.target as HTMLInputElement;\n                  this.updateValue(attrs, key, target.checked);\n                },\n              }),\n              value,\n            ),\n          );\n        }),\n      ),\n    );\n  }\n}\n"]}