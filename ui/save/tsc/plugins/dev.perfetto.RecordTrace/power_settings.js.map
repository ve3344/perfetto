{"version":3,"file":"power_settings.js","sourceRoot":"","sources":["../../../../src/plugins/dev.perfetto.RecordTrace/power_settings.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;;;AAEjC,8DAAwB;AACxB,oDAA+C;AAC/C,qDAA+C;AAC/C,6DAA6E;AAE7E,MAAa,aAAa;IACxB,IAAI,CAAC,EAAC,KAAK,EAAkC;QAC3C,MAAM,MAAM,GAAG,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC;QAC3C,MAAM,OAAO,GAAG,yDAAyD,CAAC;QAC1E,MAAM,KAAK,GAAG;YACZ,IAAA,iBAAC,EACC,KAAK,EACL,IAAA,iBAAC,EACC,MAAM,EACN;;yCAE+B,CAChC,EACD,IAAA,iBAAC,EAAC,GAAG,EAAE,EAAC,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAC,EAAE,mBAAmB,CAAC,EAC9D,IAAA,iBAAC,EAAC,MAAM,EAAE,GAAG,CAAC,CACf;SACF,CAAC;QACF,gEAAgE;QAChE,IAAI,iBAAO,CAAC,cAAc,EAAE,CAAC;YAC3B,KAAK,CAAC,IAAI,CACR,IAAA,iBAAC,EACC,KAAK,EACL,IAAA,iBAAC,EAAC,MAAM,EAAE,gBAAgB,CAAC,EAC3B,IAAA,iBAAC,EACC,GAAG,EACH,EAAC,IAAI,EAAE,oCAAoC,EAAE,MAAM,EAAE,QAAQ,EAAC,EAC9D,UAAU,CACX,EACD,IAAA,iBAAC,EACC,MAAM,EACN;uCAC2B,CAC5B,CACF,CACF,CAAC;QACJ,CAAC;QACD,OAAO,IAAA,iBAAC,EACN,kBAAkB,KAAK,CAAC,QAAQ,EAAE,EAClC,IAAA,iBAAC,EACC,sBAAK,EACL;YACE,KAAK,EAAE,6BAA6B;YACpC,GAAG,EAAE,0BAA0B;YAC/B,KAAK;YACL,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,YAAY,GAAG,GAAG,CAAC;YAClD,SAAS,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,YAAY;YACpC,MAAM;SACP,EACD,IAAA,iBAAC,EAAC,uBAAM,EAAE;YACR,KAAK,EAAE,eAAe;YACtB,QAAQ,EAAE,OAAO;YACjB,MAAM,EAAE,qCAAgB;YACxB,IAAI,EAAE,IAAI;YACV,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,kBAAkB,GAAG,GAAG,CAAC;YACjD,GAAG,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,kBAAkB;YACpC,MAAM;SACP,CAAC,CACH,EACD,IAAA,iBAAC,EAAC,sBAAK,EAAE;YACP,KAAK,EAAE,8BAA8B;YACrC,GAAG,EAAE,uBAAuB;YAC5B,KAAK,EAAE,yDAAyD;YAChE,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,YAAY,GAAG,GAAG,CAAC;YAClD,SAAS,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,YAAY;YACpC,MAAM;SACP,CAAC,CACH,CAAC;IACJ,CAAC;CACF;AApED,sCAoEC","sourcesContent":["// Copyright (C) 2022 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport m from 'mithril';\nimport {globals} from '../../frontend/globals';\nimport {Probe, Slider} from './record_widgets';\nimport {POLL_INTERVAL_MS, RecordingSectionAttrs} from './recording_sections';\n\nexport class PowerSettings implements m.ClassComponent<RecordingSectionAttrs> {\n  view({attrs}: m.CVnode<RecordingSectionAttrs>) {\n    const recCfg = attrs.recState.recordConfig;\n    const DOC_URL = 'https://perfetto.dev/docs/data-sources/battery-counters';\n    const descr = [\n      m(\n        'div',\n        m(\n          'span',\n          `Polls charge counters and instantaneous power draw from\n                    the battery power management IC and the power rails from\n                    the PowerStats HAL (`,\n        ),\n        m('a', {href: DOC_URL, target: '_blank'}, 'see docs for more'),\n        m('span', ')'),\n      ),\n    ];\n    // TODO(primiano): figure out a better story for isInternalUser.\n    if (globals.isInternalUser) {\n      descr.push(\n        m(\n          'div',\n          m('span', 'Googlers: See '),\n          m(\n            'a',\n            {href: 'http://go/power-rails-internal-doc', target: '_blank'},\n            'this doc',\n          ),\n          m(\n            'span',\n            ` for instructions on how to change the default rail selection\n                  on internal devices.`,\n          ),\n        ),\n      );\n    }\n    return m(\n      `.record-section${attrs.cssClass}`,\n      m(\n        Probe,\n        {\n          title: 'Battery drain & power rails',\n          img: 'rec_battery_counters.png',\n          descr,\n          setEnabled: (cfg, val) => (cfg.batteryDrain = val),\n          isEnabled: (cfg) => cfg.batteryDrain,\n          recCfg,\n        },\n        m(Slider, {\n          title: 'Poll interval',\n          cssClass: '.thin',\n          values: POLL_INTERVAL_MS,\n          unit: 'ms',\n          set: (cfg, val) => (cfg.batteryDrainPollMs = val),\n          get: (cfg) => cfg.batteryDrainPollMs,\n          recCfg,\n        }),\n      ),\n      m(Probe, {\n        title: 'Board voltages & frequencies',\n        img: 'rec_board_voltage.png',\n        descr: 'Tracks voltage and frequency changes from board sensors',\n        setEnabled: (cfg, val) => (cfg.boardSensors = val),\n        isEnabled: (cfg) => cfg.boardSensors,\n        recCfg,\n      }),\n    );\n  }\n}\n"]}