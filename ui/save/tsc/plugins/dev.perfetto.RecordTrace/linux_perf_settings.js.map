{"version":3,"file":"linux_perf_settings.js","sourceRoot":"","sources":["../../../../src/plugins/dev.perfetto.RecordTrace/linux_perf_settings.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;;;AAEjC,8DAAwB;AACxB,qDAAyD;AAGzD,MAAM,gBAAgB,GAAG;;;uCAGc,CAAC;AAMxC,MAAa,iBAAiB;IAG5B,MAAM,GAAG,EAAC,OAAO,EAAE,EAAE,EAA2B,CAAC;IACjD,IAAI,CAAC,EAAC,KAAK,EAAkC;QAC3C,MAAM,MAAM,GAAG,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC;QAC3C,OAAO,IAAA,iBAAC,EACN,kBAAkB,KAAK,CAAC,QAAQ,EAAE,EAClC,IAAA,iBAAC,EACC,sBAAK,EACL;YACE,KAAK,EAAE,oBAAoB;YAC3B,GAAG,EAAE,mBAAmB;YACxB,KAAK,EAAE;4CAC2B;YAClC,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,SAAS,GAAG,GAAG,CAAC;YAC/C,SAAS,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,SAAS;YACjC,MAAM;SACP,EACD,IAAA,iBAAC,EAAC,uBAAM,EAAE;YACR,KAAK,EAAE,oBAAoB;YAC3B,QAAQ,EAAE,OAAO;YACjB,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;YACtD,IAAI,EAAE,IAAI;YACV,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,iBAAiB,GAAG,GAAG,CAAC;YAChD,GAAG,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,iBAAiB;YACnC,MAAM;SACP,CAAC,EACF,IAAA,iBAAC,EAAC,yBAAQ,EAAE;YACV,WAAW,EAAE,gBAAgB;YAC7B,QAAQ,EAAE,mBAAmB;YAC7B,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;gBAChB,GAAG,CAAC,aAAa,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACtC,CAAC;YACD,GAAG,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC;YAC1C,MAAM;SACP,CAAC,CACH,CACF,CAAC;IACJ,CAAC;CACF;AAxCD,8CAwCC","sourcesContent":["// Copyright (C) 2023 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport m from 'mithril';\nimport {Probe, Slider, Textarea} from './record_widgets';\nimport {RecordingSectionAttrs} from './recording_sections';\n\nconst PLACEHOLDER_TEXT = `Filters for processes to profile, one per line e.g.:\ncom.android.phone\nlmkd\ncom.android.webview:sandboxed_process*`;\n\nexport interface LinuxPerfConfiguration {\n  targets: string[];\n}\n\nexport class LinuxPerfSettings\n  implements m.ClassComponent<RecordingSectionAttrs>\n{\n  config = {targets: []} as LinuxPerfConfiguration;\n  view({attrs}: m.CVnode<RecordingSectionAttrs>) {\n    const recCfg = attrs.recState.recordConfig;\n    return m(\n      `.record-section${attrs.cssClass}`,\n      m(\n        Probe,\n        {\n          title: 'Callstack sampling',\n          img: 'rec_profiling.png',\n          descr: `Periodically records the current callstack (chain of\n              function calls) of processes.`,\n          setEnabled: (cfg, val) => (cfg.tracePerf = val),\n          isEnabled: (cfg) => cfg.tracePerf,\n          recCfg,\n        },\n        m(Slider, {\n          title: 'Sampling Frequency',\n          cssClass: '.thin',\n          values: [20, 40, 60, 80, 100, 120, 140, 160, 180, 200],\n          unit: 'hz',\n          set: (cfg, val) => (cfg.timebaseFrequency = val),\n          get: (cfg) => cfg.timebaseFrequency,\n          recCfg,\n        }),\n        m(Textarea, {\n          placeholder: PLACEHOLDER_TEXT,\n          cssClass: '.record-apps-list',\n          set: (cfg, val) => {\n            cfg.targetCmdLine = val.split('\\n');\n          },\n          get: (cfg) => cfg.targetCmdLine.join('\\n'),\n          recCfg,\n        }),\n      ),\n    );\n  }\n}\n"]}