{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/plugins/dev.perfetto.RecordTrace/index.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAGjC,+CAAyC;AACzC,qDAA8C;AAG9C,uFAAgF;AAChF,2DAAqD;AAErD,4DAA0D;AAE1D;IACE,MAAM,CAAU,EAAE,GAAG,0BAA0B,CAAC;IAEhD,MAAM,CAAC,UAAU,CAAC,GAAQ;QACxB,GAAG,CAAC,OAAO,CAAC,WAAW,CAAC;YACtB,OAAO,EAAE,YAAY;YACrB,IAAI,EAAE,kBAAkB;YACxB,IAAI,EAAE,WAAW;YACjB,IAAI,EAAE,oBAAoB;YAC1B,SAAS,EAAE,CAAC;SACb,CAAC,CAAC;QAEH,MAAM,iBAAiB,GAAG,GAAG,CAAC,YAAY,CAAC,QAAQ,CAAC;YAClD,EAAE,EAAE,aAAa;YACjB,IAAI,EAAE,cAAc;YACpB,WAAW,EAAE,2BAA2B;YACxC,YAAY,EAAE,KAAK;SACpB,CAAC,CAAC;QACH,MAAM,cAAc,GAAG,iBAAiB,CAAC,GAAG,EAAE,CAAC;QAE/C,MAAM,MAAM,GAAG,IAAI,oCAAgB,CAAC,GAAG,EAAE,cAAc,CAAC,CAAC;QACzD,IAAI,IAAiC,CAAC;QACtC,IAAI,cAAc,EAAE,CAAC;YACnB,MAAM,MAAM,GAAG,IAAI,mDAAuB,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;YACxD,MAAM,CAAC,aAAa,EAAE,CAAC;YACvB,IAAI,GAAG,IAAA,gCAAgB,EAAC,6BAAY,EAAE,EAAC,GAAG,EAAE,MAAM,EAAE,MAAM,EAAC,CAAC,CAAC;QAC/D,CAAC;aAAM,CAAC;YACN,IAAI,GAAG,IAAA,gCAAgB,EAAC,wBAAU,EAAE,EAAC,GAAG,EAAE,MAAM,EAAC,CAAC,CAAC;QACrD,CAAC;QACD,GAAG,CAAC,KAAK,CAAC,YAAY,CAAC,EAAC,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;IACpE,CAAC;;AA9BH,4BA+BC","sourcesContent":["// Copyright (C) 2024 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport m from 'mithril';\nimport {RecordPage} from './record_page';\nimport {RecordPageV2} from './record_page_v2';\nimport {App} from '../../public/app';\nimport {PerfettoPlugin} from '../../public/plugin';\nimport {RecordingPageController} from './recordingV2/recording_page_controller';\nimport {RecordingManager} from './recording_manager';\nimport {PageAttrs} from '../../public/page';\nimport {bindMithrilAttrs} from '../../base/mithril_utils';\n\nexport default class implements PerfettoPlugin {\n  static readonly id = 'dev.perfetto.RecordTrace';\n\n  static onActivate(app: App) {\n    app.sidebar.addMenuItem({\n      section: 'navigation',\n      text: 'Record new trace',\n      href: '#!/record',\n      icon: 'fiber_smart_record',\n      sortOrder: 2,\n    });\n\n    const RECORDING_V2_FLAG = app.featureFlags.register({\n      id: 'recordingv2',\n      name: 'Recording V2',\n      description: 'Record using V2 interface',\n      defaultValue: false,\n    });\n    const useRecordingV2 = RECORDING_V2_FLAG.get();\n\n    const recMgr = new RecordingManager(app, useRecordingV2);\n    let page: m.ClassComponent<PageAttrs>;\n    if (useRecordingV2) {\n      const recCtl = new RecordingPageController(app, recMgr);\n      recCtl.initFactories();\n      page = bindMithrilAttrs(RecordPageV2, {app, recCtl, recMgr});\n    } else {\n      page = bindMithrilAttrs(RecordPage, {app, recMgr});\n    }\n    app.pages.registerPage({route: '/record', traceless: true, page});\n  }\n}\n"]}