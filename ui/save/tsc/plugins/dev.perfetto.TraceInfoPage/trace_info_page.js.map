{"version":3,"file":"trace_info_page.js","sourceRoot":"","sources":["../../../../src/plugins/dev.perfetto.TraceInfoPage/trace_info_page.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2020 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport m from 'mithril';\nimport {Engine, EngineAttrs} from '../../trace_processor/engine';\nimport {QueryResult, UNKNOWN} from '../../trace_processor/query_result';\nimport {assertExists} from '../../base/logging';\nimport {TraceAttrs} from '../../public/trace';\nimport {PageWithTraceAttrs} from '../../public/page';\n\n/**\n * Extracts and copies fields from a source object based on the keys present in\n * a spec object, effectively creating a new object that includes only the\n * fields that are present in the spec object.\n *\n * @template S - A type representing the spec object, a subset of T.\n * @template T - A type representing the source object, a superset of S.\n *\n * @param {T} source - The source object containing the full set of properties.\n * @param {S} spec - The specification object whose keys determine which fields\n * should be extracted from the source object.\n *\n * @returns {S} A new object containing only the fields from the source object\n * that are also present in the specification object.\n *\n * @example\n * const fullObject = { foo: 123, bar: '123', baz: true };\n * const spec = { foo: 0, bar: '' };\n * const result = pickFields(fullObject, spec);\n * console.log(result); // Output: { foo: 123, bar: '123' }\n */\nfunction pickFields<S extends Record<string, unknown>, T extends S>(\n  source: T,\n  spec: S,\n): S {\n  const result: Record<string, unknown> = {};\n  for (const key of Object.keys(spec)) {\n    result[key] = source[key];\n  }\n  return result as S;\n}\n\ninterface StatsSectionAttrs {\n  engine: Engine;\n  title: string;\n  subTitle: string;\n  sqlConstraints: string;\n  cssClass: string;\n  queryId: string;\n}\n\nconst statsSpec = {\n  name: UNKNOWN,\n  value: UNKNOWN,\n  description: UNKNOWN,\n  idx: UNKNOWN,\n  severity: UNKNOWN,\n  source: UNKNOWN,\n};\n\ntype StatsSectionRow = typeof statsSpec;\n\n// Generic class that generate a <section> + <table> from the stats table.\n// The caller defines the query constraint, title and styling.\n// Used for errors, data losses and debugging sections.\nclass StatsSection implements m.ClassComponent<StatsSectionAttrs> {\n  private data?: StatsSectionRow[];\n\n  constructor({attrs}: m.CVnode<StatsSectionAttrs>) {\n    const engine = attrs.engine;\n    if (engine === undefined) {\n      return;\n    }\n    const query = `\n      select\n        name,\n        value,\n        cast(ifnull(idx, '') as text) as idx,\n        description,\n        severity,\n        source from stats\n      where ${attrs.sqlConstraints || '1=1'}\n      order by name, idx\n    `;\n\n    engine.query(query).then((resp) => {\n      const data: StatsSectionRow[] = [];\n      const it = resp.iter(statsSpec);\n      for (; it.valid(); it.next()) {\n        data.push(pickFields(it, statsSpec));\n      }\n      this.data = data;\n    });\n  }\n\n  view({attrs}: m.CVnode<StatsSectionAttrs>) {\n    const data = this.data;\n    if (data === undefined || data.length === 0) {\n      return m('');\n    }\n\n    const tableRows = data.map((row) => {\n      const help = [];\n      if (Boolean(row.description)) {\n        help.push(m('i.material-icons.contextual-help', 'help_outline'));\n      }\n      const idx = row.idx !== '' ? `[${row.idx}]` : '';\n      return m(\n        'tr',\n        m('td.name', {title: row.description}, `${row.name}${idx}`, help),\n        m('td', `${row.value}`),\n        m('td', `${row.severity} (${row.source})`),\n      );\n    });\n\n    return m(\n      `section${attrs.cssClass}`,\n      m('h2', attrs.title),\n      m('h3', attrs.subTitle),\n      m(\n        'table',\n        m('thead', m('tr', m('td', 'Name'), m('td', 'Value'), m('td', 'Type'))),\n        m('tbody', tableRows),\n      ),\n    );\n  }\n}\n\nclass LoadingErrors implements m.ClassComponent<TraceAttrs> {\n  view({attrs}: m.CVnode<TraceAttrs>) {\n    const errors = attrs.trace.loadingErrors;\n    if (errors.length === 0) return;\n    return m(\n      `section.errors`,\n      m('h2', `Loading errors`),\n      m('h3', `The following errors were encountered while loading the trace:`),\n      m('pre.metric-error', errors.join('\\n')),\n    );\n  }\n}\n\nconst traceMetadataRowSpec = {name: UNKNOWN, value: UNKNOWN};\n\ntype TraceMetadataRow = typeof traceMetadataRowSpec;\n\nclass TraceMetadata implements m.ClassComponent<EngineAttrs> {\n  private data?: TraceMetadataRow[];\n\n  oncreate({attrs}: m.CVnodeDOM<EngineAttrs>) {\n    const engine = attrs.engine;\n    const query = `\n      with metadata_with_priorities as (\n        select\n          name,\n          ifnull(str_value, cast(int_value as text)) as value,\n          name in (\n            \"trace_size_bytes\",\n            \"cr-os-arch\",\n            \"cr-os-name\",\n            \"cr-os-version\",\n            \"cr-physical-memory\",\n            \"cr-product-version\",\n            \"cr-hardware-class\"\n          ) as priority\n        from metadata\n      )\n      select\n        name,\n        value\n      from metadata_with_priorities\n      order by\n        priority desc,\n        name\n    `;\n\n    engine.query(query).then((resp: QueryResult) => {\n      const tableRows: TraceMetadataRow[] = [];\n      const it = resp.iter(traceMetadataRowSpec);\n      for (; it.valid(); it.next()) {\n        tableRows.push(pickFields(it, traceMetadataRowSpec));\n      }\n      this.data = tableRows;\n    });\n  }\n\n  view() {\n    const data = this.data;\n    if (data === undefined || data.length === 0) {\n      return m('');\n    }\n\n    const tableRows = data.map((row) => {\n      return m('tr', m('td.name', `${row.name}`), m('td', `${row.value}`));\n    });\n\n    return m(\n      'section',\n      m('h2', 'System info and metadata'),\n      m(\n        'table',\n        m('thead', m('tr', m('td', 'Name'), m('td', 'Value'))),\n        m('tbody', tableRows),\n      ),\n    );\n  }\n}\n\nconst androidGameInterventionRowSpec = {\n  package_name: UNKNOWN,\n  uid: UNKNOWN,\n  current_mode: UNKNOWN,\n  standard_mode_supported: UNKNOWN,\n  standard_mode_downscale: UNKNOWN,\n  standard_mode_use_angle: UNKNOWN,\n  standard_mode_fps: UNKNOWN,\n  perf_mode_supported: UNKNOWN,\n  perf_mode_downscale: UNKNOWN,\n  perf_mode_use_angle: UNKNOWN,\n  perf_mode_fps: UNKNOWN,\n  battery_mode_supported: UNKNOWN,\n  battery_mode_downscale: UNKNOWN,\n  battery_mode_use_angle: UNKNOWN,\n  battery_mode_fps: UNKNOWN,\n};\n\ntype AndroidGameInterventionRow = typeof androidGameInterventionRowSpec;\n\nclass AndroidGameInterventionList implements m.ClassComponent<EngineAttrs> {\n  private data?: AndroidGameInterventionRow[];\n\n  oncreate({attrs}: m.CVnodeDOM<EngineAttrs>) {\n    const engine = attrs.engine;\n    const query = `\n      select\n        package_name,\n        uid,\n        current_mode,\n        standard_mode_supported,\n        standard_mode_downscale,\n        standard_mode_use_angle,\n        standard_mode_fps,\n        perf_mode_supported,\n        perf_mode_downscale,\n        perf_mode_use_angle,\n        perf_mode_fps,\n        battery_mode_supported,\n        battery_mode_downscale,\n        battery_mode_use_angle,\n        battery_mode_fps\n      from android_game_intervention_list\n    `;\n\n    engine.query(query).then((resp) => {\n      const data: AndroidGameInterventionRow[] = [];\n      const it = resp.iter(androidGameInterventionRowSpec);\n      for (; it.valid(); it.next()) {\n        data.push(pickFields(it, androidGameInterventionRowSpec));\n      }\n      this.data = data;\n    });\n  }\n\n  view() {\n    const data = this.data;\n    if (data === undefined || data.length === 0) {\n      return m('');\n    }\n\n    const tableRows = [];\n    let standardInterventions = '';\n    let perfInterventions = '';\n    let batteryInterventions = '';\n\n    for (const row of data) {\n      // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n      if (row.standard_mode_supported) {\n        standardInterventions = `angle=${row.standard_mode_use_angle},downscale=${row.standard_mode_downscale},fps=${row.standard_mode_fps}`;\n      } else {\n        standardInterventions = 'Not supported';\n      }\n\n      // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n      if (row.perf_mode_supported) {\n        perfInterventions = `angle=${row.perf_mode_use_angle},downscale=${row.perf_mode_downscale},fps=${row.perf_mode_fps}`;\n      } else {\n        perfInterventions = 'Not supported';\n      }\n\n      // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n      if (row.battery_mode_supported) {\n        batteryInterventions = `angle=${row.battery_mode_use_angle},downscale=${row.battery_mode_downscale},fps=${row.battery_mode_fps}`;\n      } else {\n        batteryInterventions = 'Not supported';\n      }\n      // Game mode numbers are defined in\n      // https://cs.android.com/android/platform/superproject/+/main:frameworks/base/core/java/android/app/GameManager.java;l=68\n      if (row.current_mode === 1) {\n        row.current_mode = 'Standard';\n      } else if (row.current_mode === 2) {\n        row.current_mode = 'Performance';\n      } else if (row.current_mode === 3) {\n        row.current_mode = 'Battery';\n      }\n      tableRows.push(\n        m(\n          'tr',\n          m('td.name', `${row.package_name}`),\n          m('td', `${row.current_mode}`),\n          m('td', standardInterventions),\n          m('td', perfInterventions),\n          m('td', batteryInterventions),\n        ),\n      );\n    }\n\n    return m(\n      'section',\n      m('h2', 'Game Intervention List'),\n      m(\n        'table',\n        m(\n          'thead',\n          m(\n            'tr',\n            m('td', 'Name'),\n            m('td', 'Current mode'),\n            m('td', 'Standard mode interventions'),\n            m('td', 'Performance mode interventions'),\n            m('td', 'Battery mode interventions'),\n          ),\n        ),\n        m('tbody', tableRows),\n      ),\n    );\n  }\n}\n\nconst packageDataSpec = {\n  packageName: UNKNOWN,\n  versionCode: UNKNOWN,\n  debuggable: UNKNOWN,\n  profileableFromShell: UNKNOWN,\n};\n\ntype PackageData = typeof packageDataSpec;\n\nclass PackageListSection implements m.ClassComponent<EngineAttrs> {\n  private packageList?: PackageData[];\n\n  oncreate({attrs}: m.CVnodeDOM<EngineAttrs>) {\n    const engine = attrs.engine;\n    this.loadData(engine);\n  }\n\n  private async loadData(engine: Engine): Promise<void> {\n    const query = `\n      select\n        package_name as packageName,\n        version_code as versionCode,\n        debuggable,\n        profileable_from_shell as profileableFromShell\n      from package_list\n    `;\n\n    const packageList: PackageData[] = [];\n    const result = await engine.query(query);\n    const it = result.iter(packageDataSpec);\n    for (; it.valid(); it.next()) {\n      packageList.push(pickFields(it, packageDataSpec));\n    }\n\n    this.packageList = packageList;\n  }\n\n  view() {\n    const packageList = this.packageList;\n    if (packageList === undefined || packageList.length === 0) {\n      return undefined;\n    }\n\n    const tableRows = packageList.map((it) => {\n      return m(\n        'tr',\n        m('td.name', `${it.packageName}`),\n        m('td', `${it.versionCode}`),\n        /* eslint-disable @typescript-eslint/strict-boolean-expressions */\n        m(\n          'td',\n          `${it.debuggable ? 'debuggable' : ''} ${\n            it.profileableFromShell ? 'profileable' : ''\n          }`,\n        ),\n        /* eslint-enable */\n      );\n    });\n\n    return m(\n      'section',\n      m('h2', 'Package list'),\n      m(\n        'table',\n        m(\n          'thead',\n          m('tr', m('td', 'Name'), m('td', 'Version code'), m('td', 'Flags')),\n        ),\n        m('tbody', tableRows),\n      ),\n    );\n  }\n}\n\nexport class TraceInfoPage implements m.ClassComponent<PageWithTraceAttrs> {\n  private engine?: Engine;\n\n  oninit({attrs}: m.CVnode<PageWithTraceAttrs>) {\n    this.engine = attrs.trace.engine.getProxy('TraceInfoPage');\n  }\n\n  view({attrs}: m.CVnode<PageWithTraceAttrs>) {\n    const engine = assertExists(this.engine);\n    return m(\n      '.trace-info-page',\n      m(LoadingErrors, {trace: attrs.trace}),\n      m(StatsSection, {\n        engine,\n        queryId: 'info_errors',\n        title: 'Import errors',\n        cssClass: '.errors',\n        subTitle: `The following errors have been encountered while importing\n               the trace. These errors are usually non-fatal but indicate that\n               one or more tracks might be missing or showing erroneous data.`,\n        sqlConstraints: `severity = 'error' and value > 0`,\n      }),\n      m(StatsSection, {\n        engine,\n        queryId: 'info_data_losses',\n        title: 'Data losses',\n        cssClass: '.errors',\n        subTitle: `These counters are collected at trace recording time. The\n               trace data for one or more data sources was dropped and hence\n               some track contents will be incomplete.`,\n        sqlConstraints: `severity = 'data_loss' and value > 0`,\n      }),\n      m(TraceMetadata, {engine}),\n      m(PackageListSection, {engine}),\n      m(AndroidGameInterventionList, {engine}),\n      m(StatsSection, {\n        engine,\n        queryId: 'info_all',\n        title: 'Debugging stats',\n        cssClass: '',\n        subTitle: `Debugging statistics such as trace buffer usage and metrics\n                     coming from the TraceProcessor importer stages.`,\n        sqlConstraints: '',\n      }),\n    );\n  }\n}\n"]}