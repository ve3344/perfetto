{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/plugins/com.example.ExampleState/index.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAEjC,4CAAoD;AACpD,4CAAwC;AAGxC,oFAAiF;AAMjF,iEAAiE;AACjE,aAAa;AACb;IACE,MAAM,CAAU,EAAE,GAAG,0BAA0B,CAAC;IACxC,KAAK,GAAiB,IAAA,mBAAW,EAAC,EAAC,OAAO,EAAE,CAAC,EAAC,CAAC,CAAC;IAEhD,OAAO,CAAC,YAAqB;QACnC,IACE,IAAA,cAAM,EAAC,YAAY,CAAC;YACpB,OAAO,YAAY,KAAK,QAAQ;YAChC,SAAS,IAAI,YAAY;YACzB,OAAO,YAAY,CAAC,OAAO,KAAK,QAAQ,EACxC,CAAC;YACD,OAAO,EAAC,OAAO,EAAE,YAAY,CAAC,OAAO,EAAC,CAAC;QACzC,CAAC;aAAM,CAAC;YACN,OAAO,EAAC,OAAO,EAAE,CAAC,EAAC,CAAC;QACtB,CAAC;IACH,CAAC;IAED,KAAK,CAAC,WAAW,CAAC,GAAU;QAC1B,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,IAAa,EAAE,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;QACnE,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAE1B,GAAG,CAAC,QAAQ,CAAC,eAAe,CAAC;YAC3B,EAAE,EAAE,sCAAsC;YAC1C,IAAI,EAAE,2BAA2B;YACjC,QAAQ,EAAE,GAAG,EAAE;gBACb,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC;gBACzC,IAAA,qCAAkB,EAAC,GAAG,EAAE;oBACtB,KAAK,EAAE,UAAU,OAAO,cAAc;oBACtC,KAAK,EAAE,gBAAgB,OAAO,EAAE;iBACjC,CAAC,CAAC;gBACH,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;oBACxB,EAAE,KAAK,CAAC,OAAO,CAAC;gBAClB,CAAC,CAAC,CAAC;YACL,CAAC;SACF,CAAC,CAAC;IACL,CAAC;;AAnCH,4BAoCC","sourcesContent":["// Copyright (C) 2023 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {createStore, Store} from '../../base/store';\nimport {exists} from '../../base/utils';\nimport {Trace} from '../../public/trace';\nimport {PerfettoPlugin} from '../../public/plugin';\nimport {addQueryResultsTab} from '../../components/query_table/query_result_tab';\n\ninterface State {\n  counter: number;\n}\n\n// This example plugin shows using state that is persisted in the\n// permalink.\nexport default class implements PerfettoPlugin {\n  static readonly id = 'com.example.ExampleState';\n  private store: Store<State> = createStore({counter: 0});\n\n  private migrate(initialState: unknown): State {\n    if (\n      exists(initialState) &&\n      typeof initialState === 'object' &&\n      'counter' in initialState &&\n      typeof initialState.counter === 'number'\n    ) {\n      return {counter: initialState.counter};\n    } else {\n      return {counter: 0};\n    }\n  }\n\n  async onTraceLoad(ctx: Trace): Promise<void> {\n    this.store = ctx.mountStore((init: unknown) => this.migrate(init));\n    ctx.trash.use(this.store);\n\n    ctx.commands.registerCommand({\n      id: 'com.example.ExampleState#ShowCounter',\n      name: 'Show ExampleState counter',\n      callback: () => {\n        const counter = this.store.state.counter;\n        addQueryResultsTab(ctx, {\n          query: `SELECT ${counter} as counter;`,\n          title: `Show counter ${counter}`,\n        });\n        this.store.edit((draft) => {\n          ++draft.counter;\n        });\n      },\n    });\n  }\n}\n"]}