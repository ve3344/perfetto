{"version":3,"file":"web_content_interaction_details_panel.js","sourceRoot":"","sources":["../../../../src/plugins/org.chromium.ChromeCriticalUserInteractions/web_content_interaction_details_panel.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2023 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// Copyright (C) 2023 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport m from 'mithril';\nimport {duration, Time, time} from '../../base/time';\nimport {asUpid, Upid} from '../../components/sql_utils/core_types';\nimport {DurationWidget} from '../../components/widgets/duration';\nimport {Timestamp} from '../../components/widgets/timestamp';\nimport {LONG, NUM, STR} from '../../trace_processor/query_result';\nimport {DetailsShell} from '../../widgets/details_shell';\nimport {GridLayout, GridLayoutColumn} from '../../widgets/grid_layout';\nimport {Section} from '../../widgets/section';\nimport {SqlRef} from '../../widgets/sql_ref';\nimport {dictToTreeNodes, Tree} from '../../widgets/tree';\nimport {TrackEventDetailsPanel} from '../../public/details_panel';\nimport {Trace} from '../../public/trace';\n\ninterface Data {\n  ts: time;\n  dur: duration;\n  interactionType: string;\n  totalDurationMs: duration;\n  upid: Upid;\n}\n\nexport class WebContentInteractionPanel implements TrackEventDetailsPanel {\n  private data?: Data;\n\n  constructor(\n    private readonly trace: Trace,\n    private readonly id: number,\n  ) {}\n\n  async load() {\n    const queryResult = await this.trace.engine.query(`\n      SELECT\n        ts,\n        dur,\n        interaction_type AS interactionType,\n        total_duration_ms AS totalDurationMs,\n        renderer_upid AS upid\n      FROM chrome_web_content_interactions\n      WHERE id = ${this.id};\n    `);\n\n    const iter = queryResult.firstRow({\n      ts: LONG,\n      dur: LONG,\n      interactionType: STR,\n      totalDurationMs: LONG,\n      upid: NUM,\n    });\n\n    this.data = {\n      ts: Time.fromRaw(iter.ts),\n      dur: iter.ts,\n      interactionType: iter.interactionType,\n      totalDurationMs: iter.totalDurationMs,\n      upid: asUpid(iter.upid),\n    };\n  }\n\n  private getDetailsDictionary() {\n    const details: {[key: string]: m.Child} = {};\n    if (this.data === undefined) return details;\n    details['Interaction'] = this.data.interactionType;\n    details['Timestamp'] = m(Timestamp, {ts: this.data.ts});\n    details['Duration'] = m(DurationWidget, {dur: this.data.dur});\n    details['Renderer Upid'] = this.data.upid;\n    details['Total duration of all events'] = m(DurationWidget, {\n      dur: this.data.totalDurationMs,\n    });\n    details['SQL ID'] = m(SqlRef, {\n      table: 'chrome_web_content_interactions',\n      id: this.id,\n    });\n    return details;\n  }\n\n  render() {\n    if (!this.data) {\n      return m('h2', 'Loading');\n    }\n\n    return m(\n      DetailsShell,\n      {\n        title: 'Chrome Web Content Interaction',\n      },\n      m(\n        GridLayout,\n        m(\n          GridLayoutColumn,\n          m(\n            Section,\n            {title: 'Details'},\n            m(Tree, dictToTreeNodes(this.getDetailsDictionary())),\n          ),\n        ),\n      ),\n    );\n  }\n}\n"]}