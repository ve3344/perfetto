{"version":3,"file":"critical_user_interaction_track.js","sourceRoot":"","sources":["../../../../src/plugins/org.chromium.ChromeCriticalUserInteractions/critical_user_interaction_track.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;;AAEjC,iFAAoE;AACpE,qEAAkE;AAElE,uGAG8D;AAE9D,0CAA+C;AAC/C,uEAA+D;AAC/D,mEAA4D;AAC5D,mGAAmF;AACnF,2EAAmE;AAEtD,QAAA,+BAA+B,GAC1C,4CAA4C,CAAC;AAElC,QAAA,8BAA8B,GAAG;IAC5C,GAAG,6BAAS;IACZ,QAAQ,EAAE,kBAAG;IACb,IAAI,EAAE,kBAAG;CACV,CAAC;AAQF,MAAa,4BAA6B,SAAQ,uDAAwB;IACxE,MAAM,CAAU,IAAI,GAAG,6BAA6B,CAAC;IAErD,gBAAgB;QACd,OAAO;YACL,OAAO,EAAE;gBACP,sEAAsE;gBACtE,kEAAkE;gBAClE,aAAa;gBACb,6BAA6B;gBAC7B,uBAAuB;gBACvB,MAAM;gBACN,IAAI;gBACJ,KAAK;gBACL,MAAM;aACP;YACD,YAAY,EAAE,qBAAqB;SACpC,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,mBAAmB,CACvB,EAAU;QAEV,MAAM,KAAK,GAAG;;;;;cAKJ,IAAI,CAAC,YAAY,EAAE;mBACd,EAAE;KAChB,CAAC;QAEF,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC9C,IAAI,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,EAAE,CAAC;YAC3B,OAAO,SAAS,CAAC;QACnB,CAAC;QAED,MAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC;YACtB,EAAE,EAAE,mBAAI;YACR,GAAG,EAAE,mBAAI;YACT,IAAI,EAAE,kBAAG;SACV,CAAC,CAAC;QAEH,OAAO;YACL,EAAE,EAAE,WAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC;YACxB,GAAG,EAAE,eAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;YAC9B,eAAe,EAAE,GAAG,CAAC,IAAI;SAC1B,CAAC;IACJ,CAAC;IAED,UAAU;QACR,OAAO,sCAA8B,CAAC;IACxC,CAAC;IAED,UAAU,CAAC,GAA+B;QACxC,MAAM,SAAS,GAAG,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QACxC,MAAM,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;QAC9B,MAAM,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;QACtB,OAAO,EAAC,GAAG,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAC,CAAC;IACxC,CAAC;IAEQ,YAAY,CAAC,GAAwB;QAC5C,QAAQ,GAAG,CAAC,eAAe,EAAE,CAAC;YAC5B,KAAK,mBAAmB;gBACtB,OAAO,IAAI,8CAAoB,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;YAC3D,KAAK,iBAAiB;gBACpB,OAAO,IAAI,2CAAmB,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;YAC1D,KAAK,iCAAiC;gBACpC,OAAO,IAAI,kEAA0B,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;YACjE;gBACE,OAAO,IAAI,kDAAsB,CAC/B,IAAI,CAAC,KAAK,EACV,qBAAqB,EACrB,GAAG,CAAC,OAAO,EACX,oBAAoB,CACrB,CAAC;QACN,CAAC;IACH,CAAC;;AA7EH,oEA8EC","sourcesContent":["// Copyright (C) 2024 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {NAMED_ROW} from '../../components/tracks/named_slice_track';\nimport {LONG, NUM, STR} from '../../trace_processor/query_result';\nimport {Slice} from '../../public/track';\nimport {\n  CustomSqlTableDefConfig,\n  CustomSqlTableSliceTrack,\n} from '../../components/tracks/custom_sql_table_slice_track';\nimport {TrackEventDetails, TrackEventSelection} from '../../public/selection';\nimport {Duration, Time} from '../../base/time';\nimport {PageLoadDetailsPanel} from './page_load_details_panel';\nimport {StartupDetailsPanel} from './startup_details_panel';\nimport {WebContentInteractionPanel} from './web_content_interaction_details_panel';\nimport {GenericSliceDetailsTab} from './generic_slice_details_tab';\n\nexport const CRITICAL_USER_INTERACTIONS_KIND =\n  'org.chromium.CriticalUserInteraction.track';\n\nexport const CRITICAL_USER_INTERACTIONS_ROW = {\n  ...NAMED_ROW,\n  scopedId: NUM,\n  type: STR,\n};\nexport type CriticalUserInteractionRow = typeof CRITICAL_USER_INTERACTIONS_ROW;\n\nexport interface CriticalUserInteractionSlice extends Slice {\n  scopedId: number;\n  type: string;\n}\n\nexport class CriticalUserInteractionTrack extends CustomSqlTableSliceTrack {\n  static readonly kind = `/critical_user_interactions`;\n\n  getSqlDataSource(): CustomSqlTableDefConfig {\n    return {\n      columns: [\n        // The scoped_id is not a unique identifier within the table; generate\n        // a unique id from type and scoped_id on the fly to use for slice\n        // selection.\n        'hash(type, scoped_id) AS id',\n        'scoped_id AS scopedId',\n        'name',\n        'ts',\n        'dur',\n        'type',\n      ],\n      sqlTableName: 'chrome_interactions',\n    };\n  }\n\n  async getSelectionDetails(\n    id: number,\n  ): Promise<TrackEventDetails | undefined> {\n    const query = `\n      SELECT\n        ts,\n        dur,\n        type\n      FROM (${this.getSqlSource()})\n      WHERE id = ${id}\n    `;\n\n    const result = await this.engine.query(query);\n    if (result.numRows() === 0) {\n      return undefined;\n    }\n\n    const row = result.iter({\n      ts: LONG,\n      dur: LONG,\n      type: STR,\n    });\n\n    return {\n      ts: Time.fromRaw(row.ts),\n      dur: Duration.fromRaw(row.dur),\n      interactionType: row.type,\n    };\n  }\n\n  getRowSpec(): CriticalUserInteractionRow {\n    return CRITICAL_USER_INTERACTIONS_ROW;\n  }\n\n  rowToSlice(row: CriticalUserInteractionRow): CriticalUserInteractionSlice {\n    const baseSlice = super.rowToSlice(row);\n    const scopedId = row.scopedId;\n    const type = row.type;\n    return {...baseSlice, scopedId, type};\n  }\n\n  override detailsPanel(sel: TrackEventSelection) {\n    switch (sel.interactionType) {\n      case 'chrome_page_loads':\n        return new PageLoadDetailsPanel(this.trace, sel.eventId);\n      case 'chrome_startups':\n        return new StartupDetailsPanel(this.trace, sel.eventId);\n      case 'chrome_web_content_interactions':\n        return new WebContentInteractionPanel(this.trace, sel.eventId);\n      default:\n        return new GenericSliceDetailsTab(\n          this.trace,\n          'chrome_interactions',\n          sel.eventId,\n          'Chrome Interaction',\n        );\n    }\n  }\n}\n"]}