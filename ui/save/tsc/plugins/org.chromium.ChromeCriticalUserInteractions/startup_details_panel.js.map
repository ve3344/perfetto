{"version":3,"file":"startup_details_panel.js","sourceRoot":"","sources":["../../../../src/plugins/org.chromium.ChromeCriticalUserInteractions/startup_details_panel.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2023 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport m from 'mithril';\nimport {duration, Time, time} from '../../base/time';\nimport {DurationWidget} from '../../components/widgets/duration';\nimport {Timestamp} from '../../components/widgets/timestamp';\nimport {LONG, NUM, STR, STR_NULL} from '../../trace_processor/query_result';\nimport {DetailsShell} from '../../widgets/details_shell';\nimport {GridLayout, GridLayoutColumn} from '../../widgets/grid_layout';\nimport {Section} from '../../widgets/section';\nimport {SqlRef} from '../../widgets/sql_ref';\nimport {dictToTreeNodes, Tree} from '../../widgets/tree';\nimport {asUpid, Upid} from '../../components/sql_utils/core_types';\nimport {Trace} from '../../public/trace';\nimport {TrackEventDetailsPanel} from '../../public/details_panel';\n\ninterface Data {\n  startupId: number;\n  eventName: string;\n  startupBeginTs: time;\n  durToFirstVisibleContent: duration;\n  launchCause?: string;\n  upid: Upid;\n}\n\nexport class StartupDetailsPanel implements TrackEventDetailsPanel {\n  private data?: Data;\n\n  constructor(\n    private readonly trace: Trace,\n    private readonly id: number,\n  ) {}\n\n  async load() {\n    const queryResult = await this.trace.engine.query(`\n      SELECT\n        activity_id AS startupId,\n        name,\n        startup_begin_ts AS startupBeginTs,\n        CASE\n          WHEN first_visible_content_ts IS NULL THEN 0\n          ELSE first_visible_content_ts - startup_begin_ts\n        END AS durTofirstVisibleContent,\n        launch_cause AS launchCause,\n        browser_upid AS upid\n      FROM chrome_startups\n      WHERE id = ${this.id};\n    `);\n\n    const iter = queryResult.firstRow({\n      startupId: NUM,\n      name: STR,\n      startupBeginTs: LONG,\n      durTofirstVisibleContent: LONG,\n      launchCause: STR_NULL,\n      upid: NUM,\n    });\n\n    this.data = {\n      startupId: iter.startupId,\n      eventName: iter.name,\n      startupBeginTs: Time.fromRaw(iter.startupBeginTs),\n      durToFirstVisibleContent: iter.durTofirstVisibleContent,\n      upid: asUpid(iter.upid),\n    };\n\n    if (iter.launchCause) {\n      this.data.launchCause = iter.launchCause;\n    }\n  }\n\n  private getDetailsDictionary() {\n    const details: {[key: string]: m.Child} = {};\n    if (this.data === undefined) return details;\n    details['Activity ID'] = this.data.startupId;\n    details['Browser Upid'] = this.data.upid;\n    details['Startup Event'] = this.data.eventName;\n    details['Startup Timestamp'] = m(Timestamp, {ts: this.data.startupBeginTs});\n    details['Duration to First Visible Content'] = m(DurationWidget, {\n      dur: this.data.durToFirstVisibleContent,\n    });\n    if (this.data.launchCause) {\n      details['Launch Cause'] = this.data.launchCause;\n    }\n    details['SQL ID'] = m(SqlRef, {\n      table: 'chrome_startups',\n      id: this.id,\n    });\n    return details;\n  }\n\n  render() {\n    if (!this.data) {\n      return m('h2', 'Loading');\n    }\n\n    return m(\n      DetailsShell,\n      {\n        title: 'Chrome Startup',\n      },\n      m(\n        GridLayout,\n        m(\n          GridLayoutColumn,\n          m(\n            Section,\n            {title: 'Details'},\n            m(Tree, dictToTreeNodes(this.getDetailsDictionary())),\n          ),\n        ),\n      ),\n    );\n  }\n}\n"]}