{"version":3,"file":"cpu_freq_track.js","sourceRoot":"","sources":["../../../../src/plugins/dev.perfetto.CpuFreq/cpu_freq_track.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2021 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {BigintMath as BIMath} from '../../base/bigint_math';\nimport {searchSegment} from '../../base/binary_search';\nimport {assertTrue} from '../../base/logging';\nimport {duration, time, Time} from '../../base/time';\nimport {drawTrackHoverTooltip} from '../../base/canvas_utils';\nimport {colorForCpu} from '../../components/colorizer';\nimport {TrackData} from '../../components/tracks/track_data';\nimport {TimelineFetcher} from '../../components/tracks/track_helper';\nimport {checkerboardExcept} from '../../components/checkerboard';\nimport {Track} from '../../public/track';\nimport {LONG, NUM} from '../../trace_processor/query_result';\nimport {uuidv4Sql} from '../../base/uuid';\nimport {TrackMouseEvent, TrackRenderContext} from '../../public/track';\nimport {Point2D} from '../../base/geom';\nimport {createView, createVirtualTable} from '../../trace_processor/sql_utils';\nimport {AsyncDisposableStack} from '../../base/disposable_stack';\nimport {Trace} from '../../public/trace';\n\nexport interface Data extends TrackData {\n  timestamps: BigInt64Array;\n  minFreqKHz: Uint32Array;\n  maxFreqKHz: Uint32Array;\n  lastFreqKHz: Uint32Array;\n  lastIdleValues: Int8Array;\n}\n\ninterface Config {\n  cpu: number;\n  freqTrackId: number;\n  idleTrackId?: number;\n  maximumValue: number;\n}\n\n// 0.5 Makes the horizontal lines sharp.\nconst MARGIN_TOP = 4.5;\nconst RECT_HEIGHT = 20;\n\nexport class CpuFreqTrack implements Track {\n  private mousePos: Point2D = {x: 0, y: 0};\n  private hoveredValue: number | undefined = undefined;\n  private hoveredTs: time | undefined = undefined;\n  private hoveredTsEnd: time | undefined = undefined;\n  private hoveredIdle: number | undefined = undefined;\n  private fetcher = new TimelineFetcher<Data>(this.onBoundsChange.bind(this));\n\n  private trackUuid = uuidv4Sql();\n\n  private trash!: AsyncDisposableStack;\n\n  constructor(\n    private readonly config: Config,\n    private readonly trace: Trace,\n  ) {}\n\n  async onCreate() {\n    this.trash = new AsyncDisposableStack();\n    if (this.config.idleTrackId === undefined) {\n      this.trash.use(\n        await createView(\n          this.trace.engine,\n          `raw_freq_idle_${this.trackUuid}`,\n          `\n            select ts, dur, value as freqValue, -1 as idleValue\n            from experimental_counter_dur c\n            where track_id = ${this.config.freqTrackId}\n          `,\n        ),\n      );\n    } else {\n      this.trash.use(\n        await createView(\n          this.trace.engine,\n          `raw_freq_${this.trackUuid}`,\n          `\n            select ts, dur, value as freqValue\n            from experimental_counter_dur c\n            where track_id = ${this.config.freqTrackId}\n          `,\n        ),\n      );\n\n      this.trash.use(\n        await createView(\n          this.trace.engine,\n          `raw_idle_${this.trackUuid}`,\n          `\n            select\n              ts,\n              dur,\n              iif(value = 4294967295, -1, cast(value as int)) as idleValue\n            from experimental_counter_dur c\n            where track_id = ${this.config.idleTrackId}\n          `,\n        ),\n      );\n\n      this.trash.use(\n        await createVirtualTable(\n          this.trace.engine,\n          `raw_freq_idle_${this.trackUuid}`,\n          `span_join(raw_freq_${this.trackUuid}, raw_idle_${this.trackUuid})`,\n        ),\n      );\n    }\n\n    this.trash.use(\n      await createVirtualTable(\n        this.trace.engine,\n        `cpu_freq_${this.trackUuid}`,\n        `\n          __intrinsic_counter_mipmap((\n            select ts, freqValue as value\n            from raw_freq_idle_${this.trackUuid}\n          ))\n        `,\n      ),\n    );\n\n    this.trash.use(\n      await createVirtualTable(\n        this.trace.engine,\n        `cpu_idle_${this.trackUuid}`,\n        `\n          __intrinsic_counter_mipmap((\n            select ts, idleValue as value\n            from raw_freq_idle_${this.trackUuid}\n          ))\n        `,\n      ),\n    );\n  }\n\n  async onUpdate({\n    visibleWindow,\n    resolution,\n  }: TrackRenderContext): Promise<void> {\n    await this.fetcher.requestData(visibleWindow.toTimeSpan(), resolution);\n  }\n\n  async onDestroy(): Promise<void> {\n    await this.trash.asyncDispose();\n  }\n\n  async onBoundsChange(\n    start: time,\n    end: time,\n    resolution: duration,\n  ): Promise<Data> {\n    // The resolution should always be a power of two for the logic of this\n    // function to make sense.\n    assertTrue(BIMath.popcount(resolution) === 1, `${resolution} not pow of 2`);\n\n    const freqResult = await this.trace.engine.query(`\n      SELECT\n        min_value as minFreq,\n        max_value as maxFreq,\n        last_ts as ts,\n        last_value as lastFreq\n      FROM cpu_freq_${this.trackUuid}(\n        ${start},\n        ${end},\n        ${resolution}\n      );\n    `);\n    const idleResult = await this.trace.engine.query(`\n      SELECT last_value as lastIdle\n      FROM cpu_idle_${this.trackUuid}(\n        ${start},\n        ${end},\n        ${resolution}\n      );\n    `);\n\n    const freqRows = freqResult.numRows();\n    const idleRows = idleResult.numRows();\n    assertTrue(freqRows == idleRows);\n\n    const data: Data = {\n      start,\n      end,\n      resolution,\n      length: freqRows,\n      timestamps: new BigInt64Array(freqRows),\n      minFreqKHz: new Uint32Array(freqRows),\n      maxFreqKHz: new Uint32Array(freqRows),\n      lastFreqKHz: new Uint32Array(freqRows),\n      lastIdleValues: new Int8Array(freqRows),\n    };\n\n    const freqIt = freqResult.iter({\n      ts: LONG,\n      minFreq: NUM,\n      maxFreq: NUM,\n      lastFreq: NUM,\n    });\n    const idleIt = idleResult.iter({\n      lastIdle: NUM,\n    });\n    for (let i = 0; freqIt.valid(); ++i, freqIt.next(), idleIt.next()) {\n      data.timestamps[i] = freqIt.ts;\n      data.minFreqKHz[i] = freqIt.minFreq;\n      data.maxFreqKHz[i] = freqIt.maxFreq;\n      data.lastFreqKHz[i] = freqIt.lastFreq;\n      data.lastIdleValues[i] = idleIt.lastIdle;\n    }\n    return data;\n  }\n\n  getHeight() {\n    return MARGIN_TOP + RECT_HEIGHT;\n  }\n\n  render({ctx, size, timescale, visibleWindow}: TrackRenderContext): void {\n    // TODO: fonts and colors should come from the CSS and not hardcoded here.\n    const data = this.fetcher.data;\n\n    if (data === undefined || data.timestamps.length === 0) {\n      // Can't possibly draw anything.\n      return;\n    }\n\n    assertTrue(data.timestamps.length === data.lastFreqKHz.length);\n    assertTrue(data.timestamps.length === data.minFreqKHz.length);\n    assertTrue(data.timestamps.length === data.maxFreqKHz.length);\n    assertTrue(data.timestamps.length === data.lastIdleValues.length);\n\n    const endPx = size.width;\n    const zeroY = MARGIN_TOP + RECT_HEIGHT;\n\n    // Quantize the Y axis to quarters of powers of tens (7.5K, 10K, 12.5K).\n    let yMax = this.config.maximumValue;\n    const kUnits = ['', 'K', 'M', 'G', 'T', 'E'];\n    const exp = Math.ceil(Math.log10(Math.max(yMax, 1)));\n    const pow10 = Math.pow(10, exp);\n    yMax = Math.ceil(yMax / (pow10 / 4)) * (pow10 / 4);\n    const unitGroup = Math.floor(exp / 3);\n    const num = yMax / Math.pow(10, unitGroup * 3);\n    // The values we have for cpufreq are in kHz so +1 to unitGroup.\n    const yLabel = `${num} ${kUnits[unitGroup + 1]}Hz`;\n\n    const color = colorForCpu(this.config.cpu);\n    let saturation = 45;\n    if (this.trace.timeline.hoveredUtid !== undefined) {\n      saturation = 0;\n    }\n\n    ctx.fillStyle = color.setHSL({s: saturation, l: 70}).cssString;\n    ctx.strokeStyle = color.setHSL({s: saturation, l: 55}).cssString;\n\n    const calculateX = (timestamp: time) => {\n      return Math.floor(timescale.timeToPx(timestamp));\n    };\n    const calculateY = (value: number) => {\n      return zeroY - Math.round((value / yMax) * RECT_HEIGHT);\n    };\n\n    const timespan = visibleWindow.toTimeSpan();\n    const start = timespan.start;\n    const end = timespan.end;\n\n    const [rawStartIdx] = searchSegment(data.timestamps, start);\n    const startIdx = rawStartIdx === -1 ? 0 : rawStartIdx;\n\n    const [, rawEndIdx] = searchSegment(data.timestamps, end);\n    const endIdx = rawEndIdx === -1 ? data.timestamps.length : rawEndIdx;\n\n    // Draw the CPU frequency graph.\n    {\n      ctx.beginPath();\n      const timestamp = Time.fromRaw(data.timestamps[startIdx]);\n      ctx.moveTo(Math.max(calculateX(timestamp), 0), zeroY);\n\n      let lastDrawnY = zeroY;\n      for (let i = startIdx; i < endIdx; i++) {\n        const timestamp = Time.fromRaw(data.timestamps[i]);\n        const x = Math.max(0, calculateX(timestamp));\n        const minY = calculateY(data.minFreqKHz[i]);\n        const maxY = calculateY(data.maxFreqKHz[i]);\n        const lastY = calculateY(data.lastFreqKHz[i]);\n\n        ctx.lineTo(x, lastDrawnY);\n        if (minY === maxY) {\n          assertTrue(lastY === minY);\n          ctx.lineTo(x, lastY);\n        } else {\n          ctx.lineTo(x, minY);\n          ctx.lineTo(x, maxY);\n          ctx.lineTo(x, lastY);\n        }\n        lastDrawnY = lastY;\n      }\n      ctx.lineTo(endPx, lastDrawnY);\n      ctx.lineTo(endPx, zeroY);\n      ctx.closePath();\n      ctx.fill();\n      ctx.stroke();\n    }\n\n    // Draw CPU idle rectangles that overlay the CPU freq graph.\n    ctx.fillStyle = `rgba(240, 240, 240, 1)`;\n    {\n      for (let i = startIdx; i < endIdx; i++) {\n        if (data.lastIdleValues[i] < 0) {\n          continue;\n        }\n\n        // We intentionally don't use the floor function here when computing x\n        // coordinates. Instead we use floating point which prevents flickering as\n        // we pan and zoom; this relies on the browser anti-aliasing pixels\n        // correctly.\n        const timestamp = Time.fromRaw(data.timestamps[i]);\n        const x = timescale.timeToPx(timestamp);\n        const xEnd =\n          i === data.lastIdleValues.length - 1\n            ? endPx\n            : timescale.timeToPx(Time.fromRaw(data.timestamps[i + 1]));\n\n        const width = xEnd - x;\n        const height = calculateY(data.lastFreqKHz[i]) - zeroY;\n\n        ctx.fillRect(x, zeroY, width, height);\n      }\n    }\n\n    ctx.font = '10px Roboto Condensed';\n\n    if (this.hoveredValue !== undefined && this.hoveredTs !== undefined) {\n      let text = `${this.hoveredValue.toLocaleString()}kHz`;\n\n      ctx.fillStyle = color.setHSL({s: 45, l: 75}).cssString;\n      ctx.strokeStyle = color.setHSL({s: 45, l: 45}).cssString;\n\n      const xStart = Math.floor(timescale.timeToPx(this.hoveredTs));\n      const xEnd =\n        this.hoveredTsEnd === undefined\n          ? endPx\n          : Math.floor(timescale.timeToPx(this.hoveredTsEnd));\n      const y = zeroY - Math.round((this.hoveredValue / yMax) * RECT_HEIGHT);\n\n      // Highlight line.\n      ctx.beginPath();\n      ctx.moveTo(xStart, y);\n      ctx.lineTo(xEnd, y);\n      ctx.lineWidth = 3;\n      ctx.stroke();\n      ctx.lineWidth = 1;\n\n      // Draw change marker.\n      ctx.beginPath();\n      ctx.arc(\n        xStart,\n        y,\n        3 /* r*/,\n        0 /* start angle*/,\n        2 * Math.PI /* end angle*/,\n      );\n      ctx.fill();\n      ctx.stroke();\n\n      // Display idle value if current hover is idle.\n      if (this.hoveredIdle !== undefined && this.hoveredIdle !== -1) {\n        // Display the idle value +1 to be consistent with catapult.\n        text += ` (Idle: ${(this.hoveredIdle + 1).toLocaleString()})`;\n      }\n\n      // Draw the tooltip.\n      drawTrackHoverTooltip(ctx, this.mousePos, size, text);\n    }\n\n    // Write the Y scale on the top left corner.\n    ctx.textBaseline = 'alphabetic';\n    ctx.fillStyle = 'rgba(255, 255, 255, 0.6)';\n    ctx.fillRect(0, 0, 42, 18);\n    ctx.fillStyle = '#666';\n    ctx.textAlign = 'left';\n    ctx.fillText(`${yLabel}`, 4, 14);\n\n    // If the cached trace slices don't fully cover the visible time range,\n    // show a gray rectangle with a \"Loading...\" label.\n    checkerboardExcept(\n      ctx,\n      this.getHeight(),\n      0,\n      size.width,\n      timescale.timeToPx(data.start),\n      timescale.timeToPx(data.end),\n    );\n  }\n\n  onMouseMove({x, y, timescale}: TrackMouseEvent) {\n    const data = this.fetcher.data;\n    if (data === undefined) return;\n    this.mousePos = {x, y};\n    const time = timescale.pxToHpTime(x);\n\n    const [left, right] = searchSegment(data.timestamps, time.toTime());\n\n    this.hoveredTs =\n      left === -1 ? undefined : Time.fromRaw(data.timestamps[left]);\n    this.hoveredTsEnd =\n      right === -1 ? undefined : Time.fromRaw(data.timestamps[right]);\n    this.hoveredValue = left === -1 ? undefined : data.lastFreqKHz[left];\n    this.hoveredIdle = left === -1 ? undefined : data.lastIdleValues[left];\n  }\n\n  onMouseOut() {\n    this.hoveredValue = undefined;\n    this.hoveredTs = undefined;\n    this.hoveredTsEnd = undefined;\n    this.hoveredIdle = undefined;\n  }\n}\n"]}