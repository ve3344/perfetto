{"version":3,"file":"process_scheduling_track.js","sourceRoot":"","sources":["../../../../src/plugins/dev.perfetto.ProcessSummary/process_scheduling_track.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2023 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {BigintMath as BIMath} from '../../base/bigint_math';\nimport {searchEq, searchRange} from '../../base/binary_search';\nimport {assertExists, assertTrue} from '../../base/logging';\nimport {duration, time, Time} from '../../base/time';\nimport {drawTrackHoverTooltip} from '../../base/canvas_utils';\nimport {Color} from '../../public/color';\nimport {colorForThread} from '../../components/colorizer';\nimport {TrackData} from '../../components/tracks/track_data';\nimport {TimelineFetcher} from '../../components/tracks/track_helper';\nimport {checkerboardExcept} from '../../components/checkerboard';\nimport {Track} from '../../public/track';\nimport {LONG, NUM, QueryResult} from '../../trace_processor/query_result';\nimport {uuidv4Sql} from '../../base/uuid';\nimport {TrackMouseEvent, TrackRenderContext} from '../../public/track';\nimport {Point2D} from '../../base/geom';\nimport {Trace} from '../../public/trace';\nimport {ThreadMap} from '../dev.perfetto.Thread/threads';\n\nexport const PROCESS_SCHEDULING_TRACK_KIND = 'ProcessSchedulingTrack';\n\nconst MARGIN_TOP = 5;\nconst RECT_HEIGHT = 30;\nconst TRACK_HEIGHT = MARGIN_TOP * 2 + RECT_HEIGHT;\n\ninterface Data extends TrackData {\n  kind: 'slice';\n  maxCpu: number;\n\n  // Slices are stored in a columnar fashion. All fields have the same length.\n  starts: BigInt64Array;\n  ends: BigInt64Array;\n  utids: Uint32Array;\n  cpus: Uint32Array;\n}\n\nexport interface Config {\n  pidForColor: number;\n  upid: number | null;\n  utid: number | null;\n}\n\nexport class ProcessSchedulingTrack implements Track {\n  private mousePos?: Point2D;\n  private utidHoveredInThisTrack = -1;\n  private fetcher = new TimelineFetcher(this.onBoundsChange.bind(this));\n  private trackUuid = uuidv4Sql();\n\n  constructor(\n    private readonly trace: Trace,\n    private readonly config: Config,\n    private readonly cpuCount: number,\n    private readonly threads: ThreadMap,\n  ) {}\n\n  async onCreate(): Promise<void> {\n    if (this.config.upid !== null) {\n      await this.trace.engine.query(`\n        create virtual table process_scheduling_${this.trackUuid}\n        using __intrinsic_slice_mipmap((\n          select\n            id,\n            ts,\n            iif(\n              dur = -1,\n              lead(ts, 1, trace_end()) over (partition by cpu order by ts) - ts,\n              dur\n            ) as dur,\n            cpu as depth\n          from experimental_sched_upid\n          where\n            utid != 0 and\n            upid = ${this.config.upid}\n        ));\n      `);\n    } else {\n      assertExists(this.config.utid);\n      await this.trace.engine.query(`\n        create virtual table process_scheduling_${this.trackUuid}\n        using __intrinsic_slice_mipmap((\n          select\n            id,\n            ts,\n            iif(\n              dur = -1,\n              lead(ts, 1, trace_end()) over (partition by cpu order by ts) - ts,\n              dur\n            ) as dur,\n            cpu as depth\n          from sched\n          where utid = ${this.config.utid}\n        ));\n      `);\n    }\n  }\n\n  async onUpdate({\n    visibleWindow,\n    resolution,\n  }: TrackRenderContext): Promise<void> {\n    await this.fetcher.requestData(visibleWindow.toTimeSpan(), resolution);\n  }\n\n  async onDestroy(): Promise<void> {\n    this.fetcher[Symbol.dispose]();\n    await this.trace.engine.tryQuery(`\n      drop table process_scheduling_${this.trackUuid}\n    `);\n  }\n\n  async onBoundsChange(\n    start: time,\n    end: time,\n    resolution: duration,\n  ): Promise<Data> {\n    // Resolution must always be a power of 2 for this logic to work\n    assertTrue(BIMath.popcount(resolution) === 1, `${resolution} not pow of 2`);\n\n    const queryRes = await this.queryData(start, end, resolution);\n    const numRows = queryRes.numRows();\n    const slices: Data = {\n      kind: 'slice',\n      start,\n      end,\n      resolution,\n      length: numRows,\n      maxCpu: this.cpuCount,\n      starts: new BigInt64Array(numRows),\n      ends: new BigInt64Array(numRows),\n      cpus: new Uint32Array(numRows),\n      utids: new Uint32Array(numRows),\n    };\n\n    const it = queryRes.iter({\n      ts: LONG,\n      dur: LONG,\n      cpu: NUM,\n      utid: NUM,\n    });\n\n    for (let row = 0; it.valid(); it.next(), row++) {\n      const start = Time.fromRaw(it.ts);\n      const dur = it.dur;\n      const end = Time.add(start, dur);\n\n      slices.starts[row] = start;\n      slices.ends[row] = end;\n      slices.cpus[row] = it.cpu;\n      slices.utids[row] = it.utid;\n      slices.end = Time.max(end, slices.end);\n    }\n    return slices;\n  }\n\n  private async queryData(\n    start: time,\n    end: time,\n    bucketSize: duration,\n  ): Promise<QueryResult> {\n    return this.trace.engine.query(`\n      select\n        (z.ts / ${bucketSize}) * ${bucketSize} as ts,\n        iif(s.dur = -1, s.dur, max(z.dur, ${bucketSize})) as dur,\n        s.id,\n        z.depth as cpu,\n        utid\n      from process_scheduling_${this.trackUuid}(\n        ${start}, ${end}, ${bucketSize}\n      ) z\n      cross join sched s using (id)\n    `);\n  }\n\n  getHeight(): number {\n    return TRACK_HEIGHT;\n  }\n\n  render({ctx, size, timescale, visibleWindow}: TrackRenderContext): void {\n    // TODO: fonts and colors should come from the CSS and not hardcoded here.\n    const data = this.fetcher.data;\n\n    if (data === undefined) return; // Can't possibly draw anything.\n\n    // If the cached trace slices don't fully cover the visible time range,\n    // show a gray rectangle with a \"Loading...\" label.\n    checkerboardExcept(\n      ctx,\n      this.getHeight(),\n      0,\n      size.width,\n      timescale.timeToPx(data.start),\n      timescale.timeToPx(data.end),\n    );\n\n    assertTrue(data.starts.length === data.ends.length);\n    assertTrue(data.starts.length === data.utids.length);\n\n    const cpuTrackHeight = Math.floor(RECT_HEIGHT / data.maxCpu);\n\n    for (let i = 0; i < data.ends.length; i++) {\n      const tStart = Time.fromRaw(data.starts[i]);\n      const tEnd = Time.fromRaw(data.ends[i]);\n\n      // Cull slices that lie completely outside the visible window\n      if (!visibleWindow.overlaps(tStart, tEnd)) continue;\n\n      const utid = data.utids[i];\n      const cpu = data.cpus[i];\n\n      const rectStart = Math.floor(timescale.timeToPx(tStart));\n      const rectEnd = Math.floor(timescale.timeToPx(tEnd));\n      const rectWidth = Math.max(1, rectEnd - rectStart);\n\n      const threadInfo = this.threads.get(utid);\n      // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n      const pid = (threadInfo ? threadInfo.pid : -1) || -1;\n\n      const isHovering = this.trace.timeline.hoveredUtid !== undefined;\n      const isThreadHovered = this.trace.timeline.hoveredUtid === utid;\n      const isProcessHovered = this.trace.timeline.hoveredPid === pid;\n      const colorScheme = colorForThread(threadInfo);\n      let color: Color;\n      if (isHovering && !isThreadHovered) {\n        if (!isProcessHovered) {\n          color = colorScheme.disabled;\n        } else {\n          color = colorScheme.variant;\n        }\n      } else {\n        color = colorScheme.base;\n      }\n      ctx.fillStyle = color.cssString;\n      const y = MARGIN_TOP + cpuTrackHeight * cpu + cpu;\n      ctx.fillRect(rectStart, y, rectWidth, cpuTrackHeight);\n    }\n\n    const hoveredThread = this.threads.get(this.utidHoveredInThisTrack);\n    if (hoveredThread !== undefined && this.mousePos !== undefined) {\n      const tidText = `T: ${hoveredThread.threadName} [${hoveredThread.tid}]`;\n      // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n      if (hoveredThread.pid) {\n        const pidText = `P: ${hoveredThread.procName} [${hoveredThread.pid}]`;\n        drawTrackHoverTooltip(ctx, this.mousePos, size, pidText, tidText);\n      } else {\n        drawTrackHoverTooltip(ctx, this.mousePos, size, tidText);\n      }\n    }\n  }\n\n  onMouseMove({x, y, timescale}: TrackMouseEvent) {\n    const data = this.fetcher.data;\n    this.mousePos = {x, y};\n    if (data === undefined) return;\n    if (y < MARGIN_TOP || y > MARGIN_TOP + RECT_HEIGHT) {\n      this.utidHoveredInThisTrack = -1;\n      this.trace.timeline.hoveredUtid = undefined;\n      this.trace.timeline.hoveredPid = undefined;\n      return;\n    }\n\n    const cpuTrackHeight = Math.floor(RECT_HEIGHT / data.maxCpu);\n    const cpu = Math.floor((y - MARGIN_TOP) / (cpuTrackHeight + 1));\n    const t = timescale.pxToHpTime(x).toTime('floor');\n\n    const [i, j] = searchRange(data.starts, t, searchEq(data.cpus, cpu));\n    if (i === j || i >= data.starts.length || t > data.ends[i]) {\n      this.utidHoveredInThisTrack = -1;\n      this.trace.timeline.hoveredUtid = undefined;\n      this.trace.timeline.hoveredPid = undefined;\n      return;\n    }\n\n    const utid = data.utids[i];\n    this.utidHoveredInThisTrack = utid;\n    const threadInfo = this.threads.get(utid);\n    // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n    const pid = threadInfo ? (threadInfo.pid ? threadInfo.pid : -1) : -1;\n    this.trace.timeline.hoveredUtid = utid;\n    this.trace.timeline.hoveredPid = pid;\n  }\n\n  onMouseOut() {\n    this.utidHoveredInThisTrack = -1;\n    this.trace.timeline.hoveredUtid = undefined;\n    this.trace.timeline.hoveredPid = undefined;\n    this.mousePos = undefined;\n  }\n}\n"]}