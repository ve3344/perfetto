{"version":3,"file":"viz_page.js","sourceRoot":"","sources":["../../../../src/plugins/dev.perfetto.VizPage/viz_page.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;;;AAEjC,8DAAwB;AACxB,iDAA4C;AAC5C,kEAA4D;AAS5D,MAAa,OAAO;IACV,MAAM,CAAS;IAEvB,YAAY,EAAC,KAAK,EAAyB;QACzC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;IACvD,CAAC;IACD,IAAI,CAAC,EAAC,KAAK,EAAyB;QAClC,OAAO,IAAA,iBAAC,EACN,gBAAgB,EAChB,IAAA,iBAAC,EAAC,oBAAQ,EAAE;YACV,IAAI,EAAE,KAAK,CAAC,IAAI;YAChB,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,IAAI,EAAE,EAAE;SACT,CAAC,EACF,IAAA,iBAAC,EAAC,eAAM,EAAE;YACR,WAAW,EAAE,KAAK,CAAC,IAAI;YACvB,QAAQ,EAAE,CAAC,IAAY,EAAE,EAAE;gBACzB,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBACpB,KAAK,CAAC,KAAK,CAAC,kBAAkB,EAAE,CAAC;YACnC,CAAC;SACF,CAAC,CACH,CAAC;IACJ,CAAC;CACF;AAvBD,0BAuBC","sourcesContent":["// Copyright (C) 2023 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport m from 'mithril';\nimport {Editor} from '../../widgets/editor';\nimport {VegaView} from '../../components/widgets/vega_view';\nimport {PageWithTraceAttrs} from '../../public/page';\nimport {Engine} from '../../trace_processor/engine';\n\nexport interface VizPageAttrs extends PageWithTraceAttrs {\n  spec: string;\n  setSpec: (spec: string) => void;\n}\n\nexport class VizPage implements m.ClassComponent<VizPageAttrs> {\n  private engine: Engine;\n\n  constructor({attrs}: m.CVnode<VizPageAttrs>) {\n    this.engine = attrs.trace.engine.getProxy('VizPage');\n  }\n  view({attrs}: m.CVnode<VizPageAttrs>) {\n    return m(\n      '.page.viz-page',\n      m(VegaView, {\n        spec: attrs.spec,\n        engine: this.engine,\n        data: {},\n      }),\n      m(Editor, {\n        initialText: attrs.spec,\n        onUpdate: (text: string) => {\n          attrs.setSpec(text);\n          attrs.trace.scheduleFullRedraw();\n        },\n      }),\n    );\n  }\n}\n"]}