{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/plugins/dev.perfetto.TraceMetadata/index.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAEjC,qEAAuD;AAGvD,iFAAgF;AAChF,sDAAiD;AAEjD;IACE,MAAM,CAAU,EAAE,GAAG,4BAA4B,CAAC;IAClD,KAAK,CAAC,WAAW,CAAC,GAAU;QAC1B,MAAM,GAAG,GAAG,MAAM,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC;;KAElC,CAAC,CAAC;QACH,MAAM,GAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,EAAC,GAAG,EAAE,kBAAG,EAAC,CAAC,CAAC;QACrC,IAAI,GAAG,CAAC,GAAG,KAAK,CAAC,EAAE,CAAC;YAClB,OAAO;QACT,CAAC;QACD,MAAM,GAAG,GAAG,kBAAkB,CAAC;QAC/B,MAAM,KAAK,GAAG,iBAAiB,CAAC;QAChC,MAAM,KAAK,GAAG,MAAM,IAAA,yCAAqB,EAAC;YACxC,KAAK,EAAE,GAAG;YACV,GAAG;YACH,IAAI,EAAE;gBACJ,SAAS,EAAE;;;WAGR;aACJ;SACF,CAAC,CAAC;QACH,GAAG,CAAC,MAAM,CAAC,aAAa,CAAC;YACvB,GAAG;YACH,KAAK;YACL,KAAK;SACN,CAAC,CAAC;QACH,MAAM,SAAS,GAAG,IAAI,qBAAS,CAAC,EAAC,GAAG,EAAE,KAAK,EAAC,CAAC,CAAC;QAC9C,GAAG,CAAC,SAAS,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;IAC3C,CAAC;;AA7BH,4BA8BC","sourcesContent":["// Copyright (C) 2024 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {NUM} from '../../trace_processor/query_result';\nimport {Trace} from '../../public/trace';\nimport {PerfettoPlugin} from '../../public/plugin';\nimport {createQuerySliceTrack} from '../../components/tracks/query_slice_track';\nimport {TrackNode} from '../../public/workspace';\n\nexport default class implements PerfettoPlugin {\n  static readonly id = 'dev.perfetto.TraceMetadata';\n  async onTraceLoad(ctx: Trace): Promise<void> {\n    const res = await ctx.engine.query(`\n      select count() as cnt from (select 1 from clock_snapshot limit 1)\n    `);\n    const row = res.firstRow({cnt: NUM});\n    if (row.cnt === 0) {\n      return;\n    }\n    const uri = `/clock_snapshots`;\n    const title = 'Clock Snapshots';\n    const track = await createQuerySliceTrack({\n      trace: ctx,\n      uri,\n      data: {\n        sqlSource: `\n          select ts, 0 as dur, 'Snapshot' as name\n          from clock_snapshot\n          `,\n      },\n    });\n    ctx.tracks.registerTrack({\n      uri,\n      title,\n      track,\n    });\n    const trackNode = new TrackNode({uri, title});\n    ctx.workspace.addChildInOrder(trackNode);\n  }\n}\n"]}