{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/plugins/org.chromium.ChromeTasks/index.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAEjC,sEAA6D;AAC7D,qEAA2E;AAG3E,mCAA+C;AAC/C,sDAAiD;AAEjD;IACE,MAAM,CAAU,EAAE,GAAG,0BAA0B,CAAC;IAEhD,KAAK,CAAC,WAAW,CAAC,GAAU;QAC1B,MAAM,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;IAC/B,CAAC;IAED,KAAK,CAAC,YAAY,CAAC,GAAU;QAC3B,MAAM,EAAE,GAAG,CACT,MAAM,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAuCxB,CAAC,CACD,CAAC,IAAI,CAAC;YACL,WAAW,EAAE,kBAAG;YAChB,WAAW,EAAE,uBAAQ;YACrB,GAAG,EAAE,uBAAQ;YACb,IAAI,EAAE,kBAAG;YACT,UAAU,EAAE,kBAAG;YACf,UAAU,EAAE,uBAAQ;YACpB,GAAG,EAAE,uBAAQ;YACb,IAAI,EAAE,kBAAG;SACV,CAAC,CAAC;QAEH,MAAM,KAAK,GAAG,IAAI,qBAAS,CAAC,EAAC,KAAK,EAAE,cAAc,EAAE,SAAS,EAAE,IAAI,EAAC,CAAC,CAAC;QACtE,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC;YAC7B,MAAM,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC;YACrB,MAAM,GAAG,GAAG,mCAAmC,IAAI,EAAE,CAAC;YACtD,MAAM,KAAK,GAAG,GAAG,EAAE,CAAC,UAAU,IAAI,EAAE,CAAC,GAAG,EAAE,CAAC;YAC3C,GAAG,CAAC,MAAM,CAAC,aAAa,CAAC;gBACvB,GAAG;gBACH,KAAK,EAAE,IAAI,8BAAsB,CAAC,GAAG,EAAE,GAAG,EAAE,IAAA,mBAAM,EAAC,IAAI,CAAC,CAAC;gBACzD,KAAK;aACN,CAAC,CAAC;YACH,MAAM,KAAK,GAAG,IAAI,qBAAS,CAAC,EAAC,GAAG,EAAE,KAAK,EAAC,CAAC,CAAC;YAC1C,KAAK,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;YAC7B,GAAG,CAAC,SAAS,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QACvC,CAAC;IACH,CAAC;;AA1EH,4BA2EC","sourcesContent":["// Copyright (C) 2024 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {asUtid} from '../../components/sql_utils/core_types';\nimport {NUM, NUM_NULL, STR_NULL} from '../../trace_processor/query_result';\nimport {Trace} from '../../public/trace';\nimport {PerfettoPlugin} from '../../public/plugin';\nimport {ChromeTasksThreadTrack} from './track';\nimport {TrackNode} from '../../public/workspace';\n\nexport default class implements PerfettoPlugin {\n  static readonly id = 'org.chromium.ChromeTasks';\n\n  async onTraceLoad(ctx: Trace) {\n    await this.createTracks(ctx);\n  }\n\n  async createTracks(ctx: Trace) {\n    const it = (\n      await ctx.engine.query(`\n      INCLUDE PERFETTO MODULE chrome.tasks;\n\n      with relevant_threads as (\n        select distinct utid from chrome_tasks\n      )\n      select\n        (CASE process.name\n          WHEN 'Browser' THEN 1\n          WHEN 'Gpu' THEN 2\n          WHEN 'Renderer' THEN 4\n          ELSE 3\n        END) as processRank,\n        process.name as processName,\n        process.pid,\n        process.upid,\n        (CASE thread.name\n          WHEN 'CrBrowserMain' THEN 1\n          WHEN 'CrRendererMain' THEN 1\n          WHEN 'CrGpuMain' THEN 1\n          WHEN 'Chrome_IOThread' THEN 2\n          WHEN 'Chrome_ChildIOThread' THEN 2\n          WHEN 'VizCompositorThread' THEN 3\n          WHEN 'NetworkService' THEN 3\n          WHEN 'Compositor' THEN 3\n          WHEN 'CompositorGpuThread' THEN 4\n          WHEN 'CompositorTileWorker&' THEN 5\n          WHEN 'ThreadPoolService' THEN 6\n          WHEN 'ThreadPoolSingleThreadForegroundBlocking&' THEN 6\n          WHEN 'ThreadPoolForegroundWorker' THEN 6\n          ELSE 7\n         END) as threadRank,\n         thread.name as threadName,\n         thread.tid,\n         thread.utid\n      from relevant_threads\n      join thread using (utid)\n      join process using (upid)\n      order by processRank, upid, threadRank, utid\n    `)\n    ).iter({\n      processRank: NUM,\n      processName: STR_NULL,\n      pid: NUM_NULL,\n      upid: NUM,\n      threadRank: NUM,\n      threadName: STR_NULL,\n      tid: NUM_NULL,\n      utid: NUM,\n    });\n\n    const group = new TrackNode({title: 'Chrome Tasks', isSummary: true});\n    for (; it.valid(); it.next()) {\n      const utid = it.utid;\n      const uri = `org.chromium.ChromeTasks#thread.${utid}`;\n      const title = `${it.threadName} ${it.tid}`;\n      ctx.tracks.registerTrack({\n        uri,\n        track: new ChromeTasksThreadTrack(ctx, uri, asUtid(utid)),\n        title,\n      });\n      const track = new TrackNode({uri, title});\n      group.addChildInOrder(track);\n      ctx.workspace.addChildInOrder(group);\n    }\n  }\n}\n"]}