{"version":3,"file":"sql_ref.js","sourceRoot":"","sources":["../../../src/widgets/sql_ref.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;;;AAEjC,8DAAwB;AACxB,iDAAkD;AAClD,2DAA6C;AAC7C,qCAAgC;AAChC,iCAA4C;AAY5C,MAAa,MAAM;IACjB,IAAI,CAAC,EAAC,KAAK,EAAwB;QACjC,MAAM,EAAC,KAAK,EAAE,EAAE,EAAC,GAAG,KAAK,CAAC;QAC1B,IAAI,EAAE,KAAK,SAAS,EAAE,CAAC;YACrB,OAAO,IAAA,iBAAC,EACN,iBAAU,EACV;gBACE,OAAO,EAAE,IAAA,iBAAC,EAAC,eAAM,EAAE,EAAC,IAAI,EAAE,sBAAK,CAAC,WAAW,EAAC,EAAE,GAAG,KAAK,IAAI,EAAE,GAAG,CAAC;aACjE,EACD,IAAA,iBAAC,EAAC,eAAQ,EAAE;gBACV,KAAK,EAAE,SAAS;gBAChB,IAAI,EAAE,cAAc;gBACpB,OAAO,EAAE,GAAG,EAAE,CAAC,IAAA,2BAAe,EAAC,GAAG,EAAE,EAAE,CAAC;aACxC,CAAC,EACF,IAAA,iBAAC,EAAC,eAAQ,EAAE;gBACV,KAAK,EAAE,gBAAgB;gBACvB,IAAI,EAAE,WAAW;gBACjB,OAAO,EAAE,GAAG,EAAE,CACZ,IAAA,2BAAe,EAAC,iBAAiB,KAAK,aAAa,EAAE,EAAE,CAAC;aAC3D,CAAC,CACH,CAAC;QACJ,CAAC;aAAM,CAAC;YACN,OAAO,GAAG,KAAK,WAAW,CAAC;QAC7B,CAAC;IACH,CAAC;CACF;AAzBD,wBAyBC","sourcesContent":["// Copyright (C) 2023 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport m from 'mithril';\nimport {copyToClipboard} from '../base/clipboard';\nimport {Icons} from '../base/semantic_icons';\nimport {Anchor} from './anchor';\nimport {MenuItem, PopupMenu2} from './menu';\n\n// This widget provides common styling and popup menu options for a SQL row,\n// given a table name and an ID.\nexport interface SqlRefAttrs {\n  // The name of the table our row lives in.\n  table: string;\n  // The ID of our row.\n  // If not provided, `table[Unknown]` is shown with no popup menu.\n  id?: number;\n}\n\nexport class SqlRef implements m.ClassComponent<SqlRefAttrs> {\n  view({attrs}: m.CVnode<SqlRefAttrs>) {\n    const {table, id} = attrs;\n    if (id !== undefined) {\n      return m(\n        PopupMenu2,\n        {\n          trigger: m(Anchor, {icon: Icons.ContextMenu}, `${table}[${id}]`),\n        },\n        m(MenuItem, {\n          label: 'Copy ID',\n          icon: 'content_copy',\n          onclick: () => copyToClipboard(`${id}`),\n        }),\n        m(MenuItem, {\n          label: 'Copy SQL query',\n          icon: 'file_copy',\n          onclick: () =>\n            copyToClipboard(`select * from ${table} where id=${id}`),\n        }),\n      );\n    } else {\n      return `${table}[Unknown]`;\n    }\n  }\n}\n"]}