{"version":3,"file":"table.js","sourceRoot":"","sources":["../../../src/widgets/table.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2023 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use size file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport m from 'mithril';\nimport {allUnique, range} from '../base/array_utils';\nimport {\n  compareUniversal,\n  comparingBy,\n  ComparisonFn,\n  SortableValue,\n  SortDirection,\n  withDirection,\n} from '../base/comparison_utils';\nimport {scheduleFullRedraw} from './raf';\nimport {MenuItem, PopupMenu2} from './menu';\nimport {Button} from './button';\n\n// For a table column that can be sorted; the standard popup icon should\n// reflect the current sorting direction. This function returns an icon\n// corresponding to optional SortDirection according to which the column is\n// sorted. (Optional because column might be unsorted)\nexport function popupMenuIcon(sortDirection?: SortDirection) {\n  switch (sortDirection) {\n    case undefined:\n      return 'more_horiz';\n    case 'DESC':\n      return 'arrow_drop_down';\n    case 'ASC':\n      return 'arrow_drop_up';\n  }\n}\n\nexport interface ColumnDescriptorAttrs<T> {\n  // Context menu items displayed on the column header.\n  contextMenu?: m.Child[];\n\n  // Unique column ID, used to identify which column is currently sorted.\n  columnId?: string;\n\n  // Sorting predicate: if provided, column would be sortable.\n  ordering?: ComparisonFn<T>;\n\n  // Simpler way to provide a sorting: instead of full predicate, the function\n  // can map the row for \"sorting key\" associated with the column.\n  sortKey?: (value: T) => SortableValue;\n}\n\nexport class ColumnDescriptor<T> {\n  name: string;\n  render: (row: T) => m.Child;\n  id: string;\n  contextMenu?: m.Child[];\n  ordering?: ComparisonFn<T>;\n\n  constructor(\n    name: string,\n    render: (row: T) => m.Child,\n    attrs?: ColumnDescriptorAttrs<T>,\n  ) {\n    this.name = name;\n    this.render = render;\n    this.id = attrs?.columnId === undefined ? name : attrs.columnId;\n\n    if (attrs === undefined) {\n      return;\n    }\n\n    if (attrs.sortKey !== undefined && attrs.ordering !== undefined) {\n      throw new Error('only one way to order a column should be specified');\n    }\n\n    if (attrs.sortKey !== undefined) {\n      this.ordering = comparingBy(attrs.sortKey, compareUniversal);\n    }\n    if (attrs.ordering !== undefined) {\n      this.ordering = attrs.ordering;\n    }\n  }\n}\n\nexport function numberColumn<T>(\n  name: string,\n  getter: (t: T) => number,\n  contextMenu?: m.Child[],\n): ColumnDescriptor<T> {\n  return new ColumnDescriptor<T>(name, getter, {contextMenu, sortKey: getter});\n}\n\nexport function stringColumn<T>(\n  name: string,\n  getter: (t: T) => string,\n  contextMenu?: m.Child[],\n): ColumnDescriptor<T> {\n  return new ColumnDescriptor<T>(name, getter, {contextMenu, sortKey: getter});\n}\n\nexport function widgetColumn<T>(\n  name: string,\n  getter: (t: T) => m.Child,\n): ColumnDescriptor<T> {\n  return new ColumnDescriptor<T>(name, getter);\n}\n\ninterface SortingInfo<T> {\n  columnId: string;\n  direction: SortDirection;\n  // TODO(ddrone): figure out if storing this can be avoided.\n  ordering: ComparisonFn<T>;\n}\n\n// Encapsulated table data, that contains the input to be displayed, as well as\n// some helper information to allow sorting.\nexport class TableData<T> {\n  data: T[];\n  private _sortingInfo?: SortingInfo<T>;\n  private permutation: number[];\n\n  constructor(data: T[]) {\n    this.data = data;\n    this.permutation = range(data.length);\n  }\n\n  *iterateItems(): Generator<T> {\n    for (const index of this.permutation) {\n      yield this.data[index];\n    }\n  }\n\n  items(): T[] {\n    return Array.from(this.iterateItems());\n  }\n\n  setItems(newItems: T[]) {\n    this.data = newItems;\n    this.permutation = range(newItems.length);\n    if (this._sortingInfo !== undefined) {\n      this.reorder(this._sortingInfo);\n    }\n    scheduleFullRedraw();\n  }\n\n  resetOrder() {\n    this.permutation = range(this.data.length);\n    this._sortingInfo = undefined;\n    scheduleFullRedraw();\n  }\n\n  get sortingInfo(): SortingInfo<T> | undefined {\n    return this._sortingInfo;\n  }\n\n  reorder(info: SortingInfo<T>) {\n    this._sortingInfo = info;\n    this.permutation.sort(\n      withDirection(\n        comparingBy((index: number) => this.data[index], info.ordering),\n        info.direction,\n      ),\n    );\n    scheduleFullRedraw();\n  }\n}\n\nexport interface TableAttrs<T> {\n  data: TableData<T>;\n  columns: ColumnDescriptor<T>[];\n}\n\nfunction directionOnIndex(\n  columnId: string,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  info?: SortingInfo<any>,\n): SortDirection | undefined {\n  if (info === undefined) {\n    return undefined;\n  }\n  return info.columnId === columnId ? info.direction : undefined;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport class Table implements m.ClassComponent<TableAttrs<any>> {\n  renderColumnHeader(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    vnode: m.Vnode<TableAttrs<any>>,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    column: ColumnDescriptor<any>,\n  ): m.Child {\n    let currDirection: SortDirection | undefined = undefined;\n\n    let items = column.contextMenu;\n    if (column.ordering !== undefined) {\n      const ordering = column.ordering;\n      currDirection = directionOnIndex(column.id, vnode.attrs.data.sortingInfo);\n      const newItems: m.Child[] = [];\n      if (currDirection !== 'ASC') {\n        newItems.push(\n          m(MenuItem, {\n            label: 'Sort ascending',\n            onclick: () => {\n              vnode.attrs.data.reorder({\n                columnId: column.id,\n                direction: 'ASC',\n                ordering,\n              });\n            },\n          }),\n        );\n      }\n      if (currDirection !== 'DESC') {\n        newItems.push(\n          m(MenuItem, {\n            label: 'Sort descending',\n            onclick: () => {\n              vnode.attrs.data.reorder({\n                columnId: column.id,\n                direction: 'DESC',\n                ordering,\n              });\n            },\n          }),\n        );\n      }\n      if (currDirection !== undefined) {\n        newItems.push(\n          m(MenuItem, {\n            label: 'Restore original order',\n            onclick: () => {\n              vnode.attrs.data.resetOrder();\n            },\n          }),\n        );\n      }\n      items = [...newItems, ...(items ?? [])];\n    }\n\n    return m(\n      'td',\n      column.name,\n      items &&\n        m(\n          PopupMenu2,\n          {\n            trigger: m(Button, {icon: popupMenuIcon(currDirection)}),\n          },\n          items,\n        ),\n    );\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  checkValid(attrs: TableAttrs<any>) {\n    if (!allUnique(attrs.columns.map((c) => c.id))) {\n      throw new Error('column IDs should be unique');\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  oncreate(vnode: m.VnodeDOM<TableAttrs<any>, this>) {\n    this.checkValid(vnode.attrs);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  onupdate(vnode: m.VnodeDOM<TableAttrs<any>, this>) {\n    this.checkValid(vnode.attrs);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  view(vnode: m.Vnode<TableAttrs<any>>): m.Child {\n    const attrs = vnode.attrs;\n\n    return m(\n      'table.generic-table',\n      m(\n        'thead',\n        m(\n          'tr.header',\n          attrs.columns.map((column) => this.renderColumnHeader(vnode, column)),\n        ),\n      ),\n      attrs.data.items().map((row) =>\n        m(\n          'tr',\n          attrs.columns.map((column) => m('td', column.render(row))),\n        ),\n      ),\n    );\n  }\n}\n"]}