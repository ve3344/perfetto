{"version":3,"file":"editor.js","sourceRoot":"","sources":["../../../src/widgets/editor.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2023 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {indentWithTab} from '@codemirror/commands';\nimport {Transaction} from '@codemirror/state';\nimport {oneDarkTheme} from '@codemirror/theme-one-dark';\nimport {keymap} from '@codemirror/view';\nimport {basicSetup, EditorView} from 'codemirror';\nimport m from 'mithril';\nimport {assertExists} from '../base/logging';\nimport {DragGestureHandler} from '../base/drag_gesture_handler';\nimport {DisposableStack} from '../base/disposable_stack';\nimport {scheduleFullRedraw} from './raf';\n\nexport interface EditorAttrs {\n  // Initial state for the editor.\n  initialText?: string;\n\n  // Changing generation is used to force resetting of the editor state\n  // to the current value of initialText.\n  generation?: number;\n\n  // Callback for the Ctrl/Cmd + Enter key binding.\n  onExecute?: (text: string) => void;\n\n  // Callback for every change to the text.\n  onUpdate?: (text: string) => void;\n}\n\nexport class Editor implements m.ClassComponent<EditorAttrs> {\n  private editorView?: EditorView;\n  private generation?: number;\n  private trash = new DisposableStack();\n\n  oncreate({dom, attrs}: m.CVnodeDOM<EditorAttrs>) {\n    const keymaps = [indentWithTab];\n    const onExecute = attrs.onExecute;\n    const onUpdate = attrs.onUpdate;\n\n    if (onExecute) {\n      keymaps.push({\n        key: 'Mod-Enter',\n        run: (view: EditorView) => {\n          const state = view.state;\n          const selection = state.selection;\n          let text = state.doc.toString();\n          if (!selection.main.empty) {\n            let selectedText = '';\n\n            for (const r of selection.ranges) {\n              selectedText += text.slice(r.from, r.to);\n            }\n\n            text = selectedText;\n          }\n          onExecute(text);\n          scheduleFullRedraw('force');\n          return true;\n        },\n      });\n    }\n\n    let dispatch;\n    if (onUpdate) {\n      dispatch = (tr: Transaction, view: EditorView) => {\n        view.update([tr]);\n        const text = view.state.doc.toString();\n        onUpdate(text);\n        scheduleFullRedraw('force');\n      };\n    }\n\n    this.generation = attrs.generation;\n\n    this.editorView = new EditorView({\n      doc: attrs.initialText ?? '',\n      extensions: [keymap.of(keymaps), oneDarkTheme, basicSetup],\n      parent: dom,\n      dispatch,\n    });\n\n    // Install the drag handler for the resize bar.\n    let initialH = 0;\n    this.trash.use(\n      new DragGestureHandler(\n        assertExists(dom.querySelector('.resize-handler')) as HTMLElement,\n        /* onDrag */\n        (_x, y) => ((dom as HTMLElement).style.height = `${initialH + y}px`),\n        /* onDragStarted */\n        () => (initialH = dom.clientHeight),\n        /* onDragFinished */\n        () => {},\n      ),\n    );\n  }\n\n  onupdate({attrs}: m.CVnodeDOM<EditorAttrs>): void {\n    const {initialText, generation} = attrs;\n    const editorView = this.editorView;\n    if (editorView && this.generation !== generation) {\n      const state = editorView.state;\n      editorView.dispatch(\n        state.update({\n          changes: {from: 0, to: state.doc.length, insert: initialText},\n        }),\n      );\n      this.generation = generation;\n    }\n  }\n\n  onremove(): void {\n    if (this.editorView) {\n      this.editorView.destroy();\n      this.editorView = undefined;\n    }\n    this.trash.dispose();\n  }\n\n  view({}: m.Vnode<EditorAttrs, this>): void | m.Children {\n    return m('.pf-editor', m('.resize-handler'));\n  }\n}\n"]}