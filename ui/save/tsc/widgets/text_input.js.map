{"version":3,"file":"text_input.js","sourceRoot":"","sources":["../../../src/widgets/text_input.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;;;AAEjC,8DAAwB;AAQxB,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,gFAAgF;AAChF,wBAAwB;AACxB,MAAa,SAAS;IACpB,QAAQ,CAAC,KAAkC;QACzC,IAAI,KAAK,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC;YACzB,KAAK,CAAC,GAAmB,CAAC,KAAK,EAAE,CAAC;QACrC,CAAC;IACH,CAAC;IAED,IAAI,CAAC,EAAC,KAAK,EAA2B;QACpC,OAAO,IAAA,iBAAC,EAAC,qBAAqB,EAAE,KAAK,CAAC,CAAC;IACzC,CAAC;CACF;AAVD,8BAUC","sourcesContent":["// Copyright (C) 2023 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport m from 'mithril';\nimport {HTMLInputAttrs} from './common';\n\ntype TextInputAttrs = HTMLInputAttrs & {\n  // Whether the input should autofocus when it is created.\n  autofocus?: boolean;\n};\n\n// For now, this component is just a simple wrapper around a plain old input\n// element, which does no more than specify a class. However, in the future we\n// might want to add more features such as an optional icon or button (e.g. a\n// clear button), at which point the benefit of having this as a component would\n// become more apparent.\nexport class TextInput implements m.ClassComponent<TextInputAttrs> {\n  oncreate(vnode: m.CVnodeDOM<TextInputAttrs>) {\n    if (vnode.attrs.autofocus) {\n      (vnode.dom as HTMLElement).focus();\n    }\n  }\n\n  view({attrs}: m.CVnode<TextInputAttrs>) {\n    return m('input.pf-text-input', attrs);\n  }\n}\n"]}