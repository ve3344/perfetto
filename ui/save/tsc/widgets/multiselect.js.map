{"version":3,"file":"multiselect.js","sourceRoot":"","sources":["../../../src/widgets/multiselect.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;;;AAEjC,8DAAwB;AACxB,2DAA6C;AAC7C,qCAAgC;AAChC,yCAAoC;AACpC,+CAAyC;AACzC,mCAA6C;AAC7C,+BAAyC;AACzC,6CAAuC;AAiCvC,gFAAgF;AAChF,4DAA4D;AAC5D,sCAAsC;AACtC,gFAAgF;AAChF,qEAAqE;AACrE,8EAA8E;AAC9E,2DAA2D;AAC3D,MAAa,WAAW;IACd,UAAU,GAAW,EAAE,CAAC;IAEhC,IAAI,CAAC,EAAC,KAAK,EAA6B;QACtC,MAAM,EAAC,OAAO,EAAE,SAAS,GAAG,IAAI,EAAC,GAAG,KAAK,CAAC;QAE1C,MAAM,aAAa,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,EAAC,IAAI,EAAC,EAAE,EAAE;YAC9C,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,CAAC;QACpE,CAAC,CAAC,CAAC;QAEH,OAAO,IAAA,iBAAC,EACN,SAAS;YACP,CAAC,CAAC,kDAAkD;YACpD,CAAC,CAAC,uBAAuB,EAC3B,IAAI,CAAC,eAAe,EAAE,EACtB,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,aAAa,CAAC,CAC7C,CAAC;IACJ,CAAC;IAEO,iBAAiB,CAAC,KAAuB,EAAE,OAAiB;QAClE,MAAM,EAAC,uBAAuB,EAAE,QAAQ,GAAG,GAAG,EAAE,GAAE,CAAC,EAAC,GAAG,KAAK,CAAC;QAC7D,MAAM,UAAU,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,EAAC,OAAO,EAAC,EAAE,EAAE,CAAC,OAAO,CAAC,CAAC;QACzD,MAAM,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,EAAC,OAAO,EAAC,EAAE,EAAE,CAAC,OAAO,CAAC,CAAC;QAExD,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YACzB,OAAO,IAAA,iBAAC,EAAC,wBAAU,EAAE;gBACnB,KAAK,EAAE,mBAAmB,IAAI,CAAC,UAAU,GAAG;aAC7C,CAAC,CAAC;QACL,CAAC;aAAM,CAAC;YACN,OAAO;gBACL,IAAA,iBAAC,EACC,UAAU,EACV,uBAAuB;oBACrB,UAAU;oBACV,IAAA,iBAAC,EACC,2BAA2B,EAC3B,IAAA,iBAAC,EACC,wBAAwB,EACxB,IAAA,iBAAC,EACC,MAAM,EACN,IAAI,CAAC,UAAU,KAAK,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,qBAAqB,CAC5D,EACD,IAAA,iBAAC,EAAC,eAAM,EAAE;wBACR,KAAK,EACH,IAAI,CAAC,UAAU,KAAK,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,gBAAgB;wBACzD,IAAI,EAAE,sBAAK,CAAC,QAAQ;wBACpB,OAAO,EAAE,GAAG,EAAE;4BACZ,MAAM,KAAK,GAAG,OAAO;iCAClB,MAAM,CAAC,CAAC,EAAC,OAAO,EAAC,EAAE,EAAE,CAAC,OAAO,CAAC;iCAC9B,GAAG,CAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAE,CAAC,CAAC,EAAC,EAAE,EAAE,OAAO,EAAE,KAAK,EAAC,CAAC,CAAC,CAAC;4BACzC,QAAQ,CAAC,KAAK,CAAC,CAAC;4BAChB,IAAA,wBAAkB,GAAE,CAAC;wBACvB,CAAC;wBACD,QAAQ,EAAE,CAAC,UAAU;qBACtB,CAAC,CACH,EACD,IAAI,CAAC,aAAa,CAChB,KAAK,EACL,OAAO,CAAC,MAAM,CAAC,CAAC,EAAC,OAAO,EAAC,EAAE,EAAE,CAAC,OAAO,CAAC,CACvC,CACF,EACH,IAAA,iBAAC,EACC,2BAA2B,EAC3B,IAAA,iBAAC,EACC,wBAAwB,EACxB,IAAA,iBAAC,EACC,MAAM,EACN,IAAI,CAAC,UAAU,KAAK,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,oBAAoB,CAC1D,EACD,IAAA,iBAAC,EAAC,eAAM,EAAE;oBACR,KAAK,EACH,IAAI,CAAC,UAAU,KAAK,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,iBAAiB;oBAC3D,IAAI,EAAE,sBAAK,CAAC,SAAS;oBACrB,OAAO,EAAE,IAAI;oBACb,OAAO,EAAE,GAAG,EAAE;wBACZ,MAAM,KAAK,GAAG,OAAO;6BAClB,MAAM,CAAC,CAAC,EAAC,OAAO,EAAC,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC;6BAC/B,GAAG,CAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAE,CAAC,CAAC,EAAC,EAAE,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC,CAAC;wBACxC,QAAQ,CAAC,KAAK,CAAC,CAAC;wBAChB,IAAA,wBAAkB,GAAE,CAAC;oBACvB,CAAC;oBACD,QAAQ,EAAE,UAAU;iBACrB,CAAC,EACF,IAAA,iBAAC,EAAC,eAAM,EAAE;oBACR,KAAK,EAAE,IAAI,CAAC,UAAU,KAAK,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,gBAAgB;oBAC9D,IAAI,EAAE,sBAAK,CAAC,QAAQ;oBACpB,OAAO,EAAE,IAAI;oBACb,OAAO,EAAE,GAAG,EAAE;wBACZ,MAAM,KAAK,GAAG,OAAO;6BAClB,MAAM,CAAC,CAAC,EAAC,OAAO,EAAC,EAAE,EAAE,CAAC,OAAO,CAAC;6BAC9B,GAAG,CAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAE,CAAC,CAAC,EAAC,EAAE,EAAE,OAAO,EAAE,KAAK,EAAC,CAAC,CAAC,CAAC;wBACzC,QAAQ,CAAC,KAAK,CAAC,CAAC;wBAChB,IAAA,wBAAkB,GAAE,CAAC;oBACvB,CAAC;oBACD,QAAQ,EAAE,CAAC,UAAU;iBACtB,CAAC,CACH,EACD,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,OAAO,CAAC,CACnC,CACF;aACF,CAAC;QACJ,CAAC;IACH,CAAC;IAEO,eAAe;QACrB,OAAO,IAAA,iBAAC,EACN,gBAAgB,EAChB,IAAA,iBAAC,EAAC,sBAAS,EAAE;YACX,OAAO,EAAE,CAAC,KAAY,EAAE,EAAE;gBACxB,MAAM,WAAW,GAAG,KAAK,CAAC,MAA6B,CAAC;gBACxD,IAAI,CAAC,UAAU,GAAG,WAAW,CAAC,KAAK,CAAC;gBACpC,IAAA,wBAAkB,GAAE,CAAC;YACvB,CAAC;YACD,KAAK,EAAE,IAAI,CAAC,UAAU;YACtB,WAAW,EAAE,mBAAmB;YAChC,SAAS,EAAE,eAAe;SAC3B,CAAC,EACF,IAAI,CAAC,iBAAiB,EAAE,CACzB,CAAC;IACJ,CAAC;IAEO,iBAAiB;QACvB,IAAI,IAAI,CAAC,UAAU,IAAI,EAAE,EAAE,CAAC;YAC1B,OAAO,IAAA,iBAAC,EAAC,eAAM,EAAE;gBACf,OAAO,EAAE,GAAG,EAAE;oBACZ,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;oBACrB,IAAA,wBAAkB,GAAE,CAAC;gBACvB,CAAC;gBACD,KAAK,EAAE,EAAE;gBACT,IAAI,EAAE,OAAO;aACd,CAAC,CAAC;QACL,CAAC;aAAM,CAAC;YACN,OAAO,IAAI,CAAC;QACd,CAAC;IACH,CAAC;IAEO,aAAa,CAAC,KAAuB,EAAE,OAAiB;QAC9D,MAAM,EAAC,QAAQ,GAAG,GAAG,EAAE,GAAE,CAAC,EAAC,GAAG,KAAK,CAAC;QAEpC,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE;YAC1B,MAAM,EAAC,OAAO,EAAE,IAAI,EAAE,EAAE,EAAC,GAAG,IAAI,CAAC;YACjC,OAAO,IAAA,iBAAC,EAAC,mBAAQ,EAAE;gBACjB,KAAK,EAAE,IAAI;gBACX,GAAG,EAAE,EAAE,EAAE,4DAA4D;gBACrE,OAAO;gBACP,SAAS,EAAE,qBAAqB;gBAChC,QAAQ,EAAE,GAAG,EAAE;oBACb,QAAQ,CAAC,CAAC,EAAC,EAAE,EAAE,OAAO,EAAE,CAAC,OAAO,EAAC,CAAC,CAAC,CAAC;oBACpC,IAAA,wBAAkB,GAAE,CAAC;gBACvB,CAAC;aACF,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;CACF;AAzJD,kCAyJC;AAED,2EAA2E;AAC3E,UAAU;AACV,MAAa,gBAAgB;IAG3B,IAAI,CAAC,EAAC,KAAK,EAAkC;QAC3C,MAAM,EAAC,IAAI,EAAE,aAAa,GAAG,qBAAa,CAAC,IAAI,EAAE,MAAM,EAAE,OAAO,EAAC,GAAG,KAAK,CAAC;QAE1E,OAAO,IAAA,iBAAC,EACN,aAAK,EACL;YACE,OAAO,EAAE,IAAA,iBAAC,EAAC,eAAM,EAAE;gBACjB,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;gBAC5B,IAAI;gBACJ,MAAM;gBACN,OAAO;aACR,CAAC;YACF,QAAQ,EAAE,aAAa;SACxB,EACD,IAAA,iBAAC,EAAC,WAAW,EAAE,KAAyB,CAAC,CAC1C,CAAC;IACJ,CAAC;IAEO,SAAS,CAAC,KAA4B;QAC5C,MAAM,EAAC,OAAO,EAAE,eAAe,EAAE,KAAK,EAAC,GAAG,KAAK,CAAC;QAEhD,IAAI,eAAe,EAAE,CAAC;YACpB,MAAM,WAAW,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,EAAC,OAAO,EAAC,EAAE,EAAE,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC;YAClE,OAAO,GAAG,KAAK,KAAK,WAAW,YAAY,CAAC;QAC9C,CAAC;aAAM,CAAC;YACN,OAAO,KAAK,CAAC;QACf,CAAC;IACH,CAAC;CACF;AA/BD,4CA+BC","sourcesContent":["// Copyright (C) 2023 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport m from 'mithril';\nimport {Icons} from '../base/semantic_icons';\nimport {Button} from './button';\nimport {Checkbox} from './checkbox';\nimport {EmptyState} from './empty_state';\nimport {Popup, PopupPosition} from './popup';\nimport {scheduleFullRedraw} from './raf';\nimport {TextInput} from './text_input';\nimport {Intent} from './common';\n\nexport interface Option {\n  // The ID is used to indentify this option, and is used in callbacks.\n  id: string;\n  // This is the name displayed and used for searching.\n  name: string;\n  // Whether the option is selected or not.\n  checked: boolean;\n}\n\nexport interface MultiSelectDiff {\n  id: string;\n  checked: boolean;\n}\n\nexport interface MultiSelectAttrs {\n  options: Option[];\n  onChange?: (diffs: MultiSelectDiff[]) => void;\n  repeatCheckedItemsAtTop?: boolean;\n  showNumSelected?: boolean;\n  fixedSize?: boolean;\n}\n\nexport type PopupMultiSelectAttrs = MultiSelectAttrs & {\n  intent?: Intent;\n  compact?: boolean;\n  icon?: string;\n  label: string;\n  popupPosition?: PopupPosition;\n};\n\n// A component which shows a list of items with checkboxes, allowing the user to\n// select from the list which ones they want to be selected.\n// Also provides search functionality.\n// This component is entirely controlled and callbacks must be supplied for when\n// the selected items list changes, and when the search term changes.\n// There is an optional boolean flag to enable repeating the selected items at\n// the top of the list for easy access - defaults to false.\nexport class MultiSelect implements m.ClassComponent<MultiSelectAttrs> {\n  private searchText: string = '';\n\n  view({attrs}: m.CVnode<MultiSelectAttrs>) {\n    const {options, fixedSize = true} = attrs;\n\n    const filteredItems = options.filter(({name}) => {\n      return name.toLowerCase().includes(this.searchText.toLowerCase());\n    });\n\n    return m(\n      fixedSize\n        ? '.pf-multiselect-panel.pf-multi-select-fixed-size'\n        : '.pf-multiselect-panel',\n      this.renderSearchBox(),\n      this.renderListOfItems(attrs, filteredItems),\n    );\n  }\n\n  private renderListOfItems(attrs: MultiSelectAttrs, options: Option[]) {\n    const {repeatCheckedItemsAtTop, onChange = () => {}} = attrs;\n    const allChecked = options.every(({checked}) => checked);\n    const anyChecked = options.some(({checked}) => checked);\n\n    if (options.length === 0) {\n      return m(EmptyState, {\n        title: `No results for '${this.searchText}'`,\n      });\n    } else {\n      return [\n        m(\n          '.pf-list',\n          repeatCheckedItemsAtTop &&\n            anyChecked &&\n            m(\n              '.pf-multiselect-container',\n              m(\n                '.pf-multiselect-header',\n                m(\n                  'span',\n                  this.searchText === '' ? 'Selected' : `Selected (Filtered)`,\n                ),\n                m(Button, {\n                  label:\n                    this.searchText === '' ? 'Clear All' : 'Clear Filtered',\n                  icon: Icons.Deselect,\n                  onclick: () => {\n                    const diffs = options\n                      .filter(({checked}) => checked)\n                      .map(({id}) => ({id, checked: false}));\n                    onChange(diffs);\n                    scheduleFullRedraw();\n                  },\n                  disabled: !anyChecked,\n                }),\n              ),\n              this.renderOptions(\n                attrs,\n                options.filter(({checked}) => checked),\n              ),\n            ),\n          m(\n            '.pf-multiselect-container',\n            m(\n              '.pf-multiselect-header',\n              m(\n                'span',\n                this.searchText === '' ? 'Options' : `Options (Filtered)`,\n              ),\n              m(Button, {\n                label:\n                  this.searchText === '' ? 'Select All' : 'Select Filtered',\n                icon: Icons.SelectAll,\n                compact: true,\n                onclick: () => {\n                  const diffs = options\n                    .filter(({checked}) => !checked)\n                    .map(({id}) => ({id, checked: true}));\n                  onChange(diffs);\n                  scheduleFullRedraw();\n                },\n                disabled: allChecked,\n              }),\n              m(Button, {\n                label: this.searchText === '' ? 'Clear All' : 'Clear Filtered',\n                icon: Icons.Deselect,\n                compact: true,\n                onclick: () => {\n                  const diffs = options\n                    .filter(({checked}) => checked)\n                    .map(({id}) => ({id, checked: false}));\n                  onChange(diffs);\n                  scheduleFullRedraw();\n                },\n                disabled: !anyChecked,\n              }),\n            ),\n            this.renderOptions(attrs, options),\n          ),\n        ),\n      ];\n    }\n  }\n\n  private renderSearchBox() {\n    return m(\n      '.pf-search-bar',\n      m(TextInput, {\n        oninput: (event: Event) => {\n          const eventTarget = event.target as HTMLTextAreaElement;\n          this.searchText = eventTarget.value;\n          scheduleFullRedraw();\n        },\n        value: this.searchText,\n        placeholder: 'Filter options...',\n        className: 'pf-search-box',\n      }),\n      this.renderClearButton(),\n    );\n  }\n\n  private renderClearButton() {\n    if (this.searchText != '') {\n      return m(Button, {\n        onclick: () => {\n          this.searchText = '';\n          scheduleFullRedraw();\n        },\n        label: '',\n        icon: 'close',\n      });\n    } else {\n      return null;\n    }\n  }\n\n  private renderOptions(attrs: MultiSelectAttrs, options: Option[]) {\n    const {onChange = () => {}} = attrs;\n\n    return options.map((item) => {\n      const {checked, name, id} = item;\n      return m(Checkbox, {\n        label: name,\n        key: id, // Prevents transitions jumping between items when searching\n        checked,\n        className: 'pf-multiselect-item',\n        onchange: () => {\n          onChange([{id, checked: !checked}]);\n          scheduleFullRedraw();\n        },\n      });\n    });\n  }\n}\n\n// The same multi-select component that functions as a drop-down instead of\n// a list.\nexport class PopupMultiSelect\n  implements m.ClassComponent<PopupMultiSelectAttrs>\n{\n  view({attrs}: m.CVnode<PopupMultiSelectAttrs>) {\n    const {icon, popupPosition = PopupPosition.Auto, intent, compact} = attrs;\n\n    return m(\n      Popup,\n      {\n        trigger: m(Button, {\n          label: this.labelText(attrs),\n          icon,\n          intent,\n          compact,\n        }),\n        position: popupPosition,\n      },\n      m(MultiSelect, attrs as MultiSelectAttrs),\n    );\n  }\n\n  private labelText(attrs: PopupMultiSelectAttrs): string {\n    const {options, showNumSelected, label} = attrs;\n\n    if (showNumSelected) {\n      const numSelected = options.filter(({checked}) => checked).length;\n      return `${label} (${numSelected} selected)`;\n    } else {\n      return label;\n    }\n  }\n}\n"]}