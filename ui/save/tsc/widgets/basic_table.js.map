{"version":3,"file":"basic_table.js","sourceRoot":"","sources":["../../../src/widgets/basic_table.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2023 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use size file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport m from 'mithril';\nimport {scheduleFullRedraw} from './raf';\n\nexport interface ColumnDescriptor<T> {\n  readonly title: m.Children;\n  render: (row: T) => m.Children;\n}\n\n// This is a class to be able to perform runtime checks on `columns` below.\nexport class ReorderableColumns<T> {\n  constructor(\n    public columns: ColumnDescriptor<T>[],\n    public reorder?: (from: number, to: number) => void,\n  ) {}\n}\n\nexport interface TableAttrs<T> {\n  readonly data: ReadonlyArray<T>;\n  readonly columns: ReadonlyArray<ColumnDescriptor<T> | ReorderableColumns<T>>;\n}\n\nexport class BasicTable<T> implements m.ClassComponent<TableAttrs<T>> {\n  view(vnode: m.Vnode<TableAttrs<T>>): m.Children {\n    const attrs = vnode.attrs;\n    const columnBlocks: ColumnBlock<T>[] = getColumns(attrs);\n\n    const columns: {column: ColumnDescriptor<T>; extraClasses: string}[] = [];\n    const headers: m.Children[] = [];\n    for (const [blockIndex, block] of columnBlocks.entries()) {\n      const currentColumns = block.columns.map((column, columnIndex) => ({\n        column,\n        extraClasses:\n          columnIndex === 0 && blockIndex !== 0 ? '.has-left-border' : '',\n      }));\n      if (block.reorder === undefined) {\n        for (const {column, extraClasses} of currentColumns) {\n          headers.push(m(`td${extraClasses}`, column.title));\n        }\n      } else {\n        headers.push(\n          m(ReorderableCellGroup, {\n            cells: currentColumns.map(({column, extraClasses}) => ({\n              content: column.title,\n              extraClasses,\n            })),\n            onReorder: block.reorder,\n          }),\n        );\n      }\n      columns.push(...currentColumns);\n    }\n\n    return m(\n      'table.generic-table',\n      {\n        // TODO(altimin, stevegolton): this should be the default for\n        // generic-table, but currently it is overriden by\n        // .pf-details-shell .pf-content table, so specify this here for now.\n        style: {\n          'table-layout': 'auto',\n        },\n      },\n      m('thead', m('tr.header', headers)),\n      attrs.data.map((row) =>\n        m(\n          'tr',\n          columns.map(({column, extraClasses}) =>\n            m(`td${extraClasses}`, column.render(row)),\n          ),\n        ),\n      ),\n    );\n  }\n}\n\ntype ColumnBlock<T> = {\n  columns: ColumnDescriptor<T>[];\n  reorder?: (from: number, to: number) => void;\n};\n\nfunction getColumns<T>(attrs: TableAttrs<T>): ColumnBlock<T>[] {\n  const result: ColumnBlock<T>[] = [];\n  let current: ColumnBlock<T> = {columns: []};\n  for (const col of attrs.columns) {\n    if (col instanceof ReorderableColumns) {\n      if (current.columns.length > 0) {\n        result.push(current);\n        current = {columns: []};\n      }\n      result.push(col);\n    } else {\n      current.columns.push(col);\n    }\n  }\n  if (current.columns.length > 0) {\n    result.push(current);\n  }\n  return result;\n}\n\nexport interface ReorderableCellGroupAttrs {\n  cells: {\n    content: m.Children;\n    extraClasses: string;\n  }[];\n  onReorder: (from: number, to: number) => void;\n}\n\nconst placeholderElement = document.createElement('span');\n\n// A component that renders a group of cells on the same row that can be\n// reordered between each other by using drag'n'drop.\n//\n// On completed reorder, a callback is fired.\nclass ReorderableCellGroup\n  implements m.ClassComponent<ReorderableCellGroupAttrs>\n{\n  private drag?: {\n    from: number;\n    to?: number;\n  };\n\n  private getClassForIndex(index: number): string {\n    if (this.drag?.from === index) {\n      return 'dragged';\n    }\n    if (this.drag?.to === index) {\n      return 'highlight-left';\n    }\n    if (this.drag?.to === index + 1) {\n      return 'highlight-right';\n    }\n    return '';\n  }\n\n  view(vnode: m.Vnode<ReorderableCellGroupAttrs>): m.Children {\n    return vnode.attrs.cells.map((cell, index) =>\n      m(\n        `td.reorderable-cell${cell.extraClasses}`,\n        {\n          draggable: 'draggable',\n          class: this.getClassForIndex(index),\n          ondragstart: (e: DragEvent) => {\n            this.drag = {\n              from: index,\n            };\n            if (e.dataTransfer !== null) {\n              e.dataTransfer.setDragImage(placeholderElement, 0, 0);\n            }\n\n            scheduleFullRedraw();\n          },\n          ondragover: (e: DragEvent) => {\n            let target = e.target as HTMLElement;\n            if (this.drag === undefined || this.drag?.from === index) {\n              // Don't do anything when hovering on the same cell that's\n              // been dragged, or when dragging something other than the\n              // cell from the same group.\n              return;\n            }\n\n            while (\n              target.tagName.toLowerCase() !== 'td' &&\n              target.parentElement !== null\n            ) {\n              target = target.parentElement;\n            }\n\n            // When hovering over cell on the right half, the cell will be\n            // moved to the right of it, vice versa for the left side. This\n            // is done such that it's possible to put dragged cell to every\n            // possible position.\n            const offset = e.clientX - target.getBoundingClientRect().x;\n            const direction =\n              offset > target.clientWidth / 2 ? 'right' : 'left';\n            const dest = direction === 'left' ? index : index + 1;\n            const adjustedDest =\n              dest === this.drag.from || dest === this.drag.from + 1\n                ? undefined\n                : dest;\n            if (adjustedDest !== this.drag.to) {\n              this.drag.to = adjustedDest;\n              scheduleFullRedraw();\n            }\n          },\n          ondragleave: (e: DragEvent) => {\n            if (this.drag?.to !== index) return;\n            this.drag.to = undefined;\n            scheduleFullRedraw();\n            if (e.dataTransfer !== null) {\n              e.dataTransfer.dropEffect = 'none';\n            }\n          },\n          ondragend: () => {\n            if (\n              this.drag !== undefined &&\n              this.drag.to !== undefined &&\n              this.drag.from !== this.drag.to\n            ) {\n              vnode.attrs.onReorder(this.drag.from, this.drag.to);\n            }\n\n            this.drag = undefined;\n            scheduleFullRedraw();\n          },\n        },\n        cell.content,\n      ),\n    );\n  }\n}\n"]}