{"version":3,"file":"grid_layout.js","sourceRoot":"","sources":["../../../src/widgets/grid_layout.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;;;AAEjC,8DAAwB;AAExB,+EAA+E;AAC/E,qEAAqE;AACrE,gFAAgF;AAChF,8BAA8B;AAC9B,EAAE;AACF,2BAA2B;AAC3B,0BAA0B;AAC1B,0BAA0B;AAC1B,0BAA0B;AAC1B,cAAc;AACd,cAAc;AACd,0BAA0B;AAC1B,0BAA0B;AAC1B,0BAA0B;AAC1B,0BAA0B;AAC1B,cAAc;AACd,EAAE;AACF,iCAAiC;AACjC,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV,MAAa,UAAU;IACrB,IAAI,CAAC,EAAC,QAAQ,EAAU;QACtB,OAAO,IAAA,iBAAC,EAAC,oBAAoB,EAAE,QAAQ,CAAC,CAAC;IAC3C,CAAC;CACF;AAJD,gCAIC;AAED,2EAA2E;AAC3E,8EAA8E;AAC9E,+BAA+B;AAC/B,2EAA2E;AAC3E,kBAAkB;AAClB,oDAAoD;AACpD,EAAE;AACF,2BAA2B;AAC3B,0BAA0B;AAC1B,0BAA0B;AAC1B,0BAA0B;AAC1B,sDAAsD;AACtD,0BAA0B;AAC1B,0BAA0B;AAC1B,0BAA0B;AAC1B,cAAc;AACd,cAAc;AACd,cAAc;AACd,EAAE;AACF,iCAAiC;AACjC,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV,EAAE;AACF,4EAA4E;AAC5E,mEAAmE;AACnE,MAAa,gBAAgB;IAC3B,IAAI,CAAC,EAAC,QAAQ,EAAU;QACtB,OAAO,IAAA,iBAAC,EAAC,2BAA2B,EAAE,QAAQ,CAAC,CAAC;IAClD,CAAC;CACF;AAJD,4CAIC","sourcesContent":["// Copyright (C) 2023 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport m from 'mithril';\n\n// GridLayout is a container that arranges elements into a two-column grid when\n// the screen is wide, and a single column when the screen is narrow.\n// Consider the following layout (where A, B, C, and D are arbitrary components)\n//   m(GridLayout, A, B, C, D)\n//\n// On a wide screen we get:\n// ┌─────────┐ ┌─────────┐\n// │    A    │ │    B    │\n// │         │ └─────────┘\n// │         │\n// └─────────┘\n// ┌─────────┐ ┌─────────┐\n// │    C    │ │    D    │\n// │         │ │         │\n// │         │ └─────────┘\n// └─────────┘\n//\n// And on a narrow screen we get:\n// ┌─────┐\n// │  A  │\n// │     │\n// │     │\n// └─────┘\n// ┌─────┐\n// │  B  │\n// └────-┘\n// ┌─────┐\n// │  C  │\n// │     │\n// │     │\n// └─────┘\n// ┌─────┐\n// │  D  │\n// │     │\n// └─────┘\nexport class GridLayout implements m.ClassComponent {\n  view({children}: m.Vnode) {\n    return m('div.pf-grid-layout', children);\n  }\n}\n\n// ColumnLayouts can be used inside a GridLayout to group elements together\n// vertically and to acheive a more aesthetically pleasing vertical spacing of\n// elements in the same column.\n// Consider the same example from above but instead the elements are placed\n// inside columns.\n//   m(GridLayout, m(Column, A, C), m(Column, B, D))\n//\n// On a wide screen we get:\n// ┌─────────┐ ┌─────────┐\n// │    A    │ │    B    │\n// │         │ └─────────┘\n// │         │ ┌─────────┐ <- This gap has disappeared\n// └─────────┘ │    D    │\n// ┌─────────┐ │         │\n// │    C    │ └─────────┘\n// │         │\n// │         │\n// └─────────┘\n//\n// And on a narrow screen we get:\n// ┌─────┐\n// │  A  │\n// │     │\n// │     │\n// └─────┘\n// ┌─────┐\n// │  C  │\n// │     │\n// │     │\n// └─────┘\n// ┌─────┐\n// │  B  │\n// └────-┘\n// ┌─────┐\n// │  D  │\n// │     │\n// └─────┘\n//\n// The gap between column elements are the same size as the gaps in the grid\n// layout, so we get keep spacing between all elements in the grid.\nexport class GridLayoutColumn implements m.ClassComponent {\n  view({children}: m.Vnode) {\n    return m('div.pf-grid-layout-column', children);\n  }\n}\n"]}