{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/engine/index.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAEjC,+CAAyC;AAEzC,MAAM,UAAU,GAAG,IAAoB,CAAC;AACxC,MAAM,UAAU,GAAG,IAAI,wBAAU,EAAE,CAAC;AAEpC,uCAAuC;AACvC,0CAA0C;AAC1C,8BAA8B;AAC9B,4CAA4C;AAC5C,0EAA0E;AAC1E,oDAAoD;AACpD,2DAA2D;AAC3D,8EAA8E;AAC9E,kCAAkC;AAElC,wEAAwE;AACxE,UAAU,CAAC,SAAS,GAAG,CAAC,GAAiB,EAAE,EAAE;IAC3C,MAAM,IAAI,GAAG,GAAG,CAAC,IAAmB,CAAC;IACrC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AAC9B,CAAC,CAAC","sourcesContent":["// Copyright (C) 2018 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {WasmBridge} from './wasm_bridge';\n\nconst selfWorker = self as {} as Worker;\nconst wasmBridge = new WasmBridge();\n\n// There are two message handlers here:\n// 1. The Worker (self.onmessage) handler.\n// 2. The MessagePort handler.\n// The sequence of actions is the following:\n// 1. The frontend does one postMessage({port: MessagePort}) on the Worker\n//    scope. This message transfers the MessagePort.\n//    This is the only postMessage we'll ever receive here.\n// 2. All the other messages (i.e. the TraceProcessor RPC binary pipe) will be\n//    received on the MessagePort.\n\n// Receives the boostrap message from the frontend with the MessagePort.\nselfWorker.onmessage = (msg: MessageEvent) => {\n  const port = msg.data as MessagePort;\n  wasmBridge.initialize(port);\n};\n"]}