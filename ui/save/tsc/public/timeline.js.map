{"version":3,"file":"timeline.js","sourceRoot":"","sources":["../../../src/public/timeline.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;;AAKjC,IAAY,eASX;AATD,WAAY,eAAe;IACzB,wCAAqB,CAAA;IACrB,sCAAmB,CAAA;IACnB,kDAA+B,CAAA;IAC/B,sCAAmB,CAAA;IACnB,gDAA6B,CAAA;IAC7B,gDAA6B,CAAA;IAC7B,8BAAW,CAAA;IACX,sCAAmB,CAAA;AACrB,CAAC,EATW,eAAe,+BAAf,eAAe,QAS1B;AAED,IAAY,iBAGX;AAHD,WAAY,iBAAiB;IAC3B,kCAAa,CAAA;IACb,qDAAgC,CAAA;AAClC,CAAC,EAHW,iBAAiB,iCAAjB,iBAAiB,QAG5B","sourcesContent":["// Copyright (C) 2024 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {HighPrecisionTimeSpan} from '../base/high_precision_time_span';\nimport {time} from '../base/time';\n\nexport enum TimestampFormat {\n  Timecode = 'timecode',\n  TraceNs = 'traceNs',\n  TraceNsLocale = 'traceNsLocale',\n  Seconds = 'seconds',\n  Milliseconds = 'milliseconds',\n  Microseconds = 'microseconds',\n  UTC = 'utc',\n  TraceTz = 'traceTz',\n}\n\nexport enum DurationPrecision {\n  Full = 'full',\n  HumanReadable = 'human_readable',\n}\n\nexport interface Timeline {\n  // Bring a timestamp into view.\n  panToTimestamp(ts: time): void;\n\n  // Move the viewport.\n  setViewportTime(start: time, end: time): void;\n\n  // A span representing the current viewport location.\n  readonly visibleWindow: HighPrecisionTimeSpan;\n\n  // Render a vertical line on the timeline at this timestamp.\n  hoverCursorTimestamp: time | undefined;\n\n  hoveredNoteTimestamp: time | undefined;\n  highlightedSliceId: number | undefined;\n\n  hoveredUtid: number | undefined;\n  hoveredPid: number | undefined;\n\n  // Get the current timestamp offset.\n  timestampOffset(): time;\n\n  // Get a time in the current domain as specified by timestampOffset.\n  toDomainTime(ts: time): time;\n\n  // These control how timestamps and durations are formatted throughout the UI\n  timestampFormat: TimestampFormat;\n  durationPrecision: DurationPrecision;\n}\n"]}