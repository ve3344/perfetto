{"version":3,"file":"route_schema.js","sourceRoot":"","sources":["../../../src/public/route_schema.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;;AAEjC,6BAAsB;AAEtB,6EAA6E;AAC7E,wEAAwE;AACxE,4EAA4E;AAC5E,2BAA2B;AACd,QAAA,YAAY,GAAG,OAAC;KAC1B,MAAM,CAAC;IACN,sEAAsE;IACtE,eAAe,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC;IAEvD,0DAA0D;IAE1D,kCAAkC;IAClC,sBAAsB,EAAE,OAAC,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC;IAE/D,sBAAsB;IACtB,CAAC,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC;IAEzC,0DAA0D;IAC1D,CAAC,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC;IAEzC,0DAA0D;IAC1D,gCAAgC;IAChC,GAAG,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC;IAE3C,0EAA0E;IAC1E,4EAA4E;IAC5E,+BAA+B;IAC/B,QAAQ,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC;IAE7D,oDAAoD;IACpD,iEAAiE;IACjE,QAAQ,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC;IAEhD,oEAAoE;IACpE,8BAA8B;IAC9B,IAAI,EAAE,OAAC,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC;IAEtD,8BAA8B;IAC9B,WAAW,EAAE,OAAC,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC;IAEpD,uEAAuE;IACvE,aAAa,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC;IAErD,oBAAoB;IACpB,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC;IAC7C,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC;IAC1C,GAAG,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC;IAC3C,GAAG,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC;IAC3C,GAAG,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC;IAC3C,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC;IAC7C,QAAQ,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC;IAChD,MAAM,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC;CAC/C,CAAC;IACF,6EAA6E;IAC7E,uBAAuB;KACtB,OAAO,CAAC,EAAE,CAAC,CAAC","sourcesContent":["// Copyright (C) 2024 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {z} from 'zod';\n\n// We use .catch(undefined) on every field below to make sure that passing an\n// invalid value doesn't invalidate the other keys which might be valid.\n// Zod default behaviour is atomic: either everything validates correctly or\n// the whole parsing fails.\nexport const ROUTE_SCHEMA = z\n  .object({\n    // The local_cache_key is special and is persisted across navigations.\n    local_cache_key: z.string().optional().catch(undefined),\n\n    // These are transient and are really set only on startup.\n\n    // Are we loading a trace via ABT.\n    openFromAndroidBugTool: z.boolean().optional().catch(undefined),\n\n    // For permalink hash.\n    s: z.string().optional().catch(undefined),\n\n    // DEPRECATED: for #!/record?p=cpu subpages (b/191255021).\n    p: z.string().optional().catch(undefined),\n\n    // For fetching traces from Cloud Storage or local servers\n    // as with record_android_trace.\n    url: z.string().optional().catch(undefined),\n\n    // For connecting to a trace_processor_shell --httpd instance running on a\n    // non-standard port. This requires the CSP_WS_PERMISSIVE_PORT flag to relax\n    // the Content Security Policy.\n    rpc_port: z.string().regex(/\\d+/).optional().catch(undefined),\n\n    // Override the referrer. Useful for scripts such as\n    // record_android_trace to record where the trace is coming from.\n    referrer: z.string().optional().catch(undefined),\n\n    // For the 'mode' of the UI. For example when the mode is 'embedded'\n    // some features are disabled.\n    mode: z.enum(['embedded']).optional().catch(undefined),\n\n    // Should we hide the sidebar?\n    hideSidebar: z.boolean().optional().catch(undefined),\n\n    // A comma-separated list of plugins to enable for the current session.\n    enablePlugins: z.string().optional().catch(undefined),\n\n    // Deep link support\n    table: z.string().optional().catch(undefined),\n    ts: z.string().optional().catch(undefined),\n    dur: z.string().optional().catch(undefined),\n    tid: z.string().optional().catch(undefined),\n    pid: z.string().optional().catch(undefined),\n    query: z.string().optional().catch(undefined),\n    visStart: z.string().optional().catch(undefined),\n    visEnd: z.string().optional().catch(undefined),\n  })\n  // default({}) ensures at compile-time that every entry is either optional or\n  // has a default value.\n  .default({});\n\nexport type RouteArgs = z.infer<typeof ROUTE_SCHEMA>;\n"]}