{"version":3,"file":"shared_disposable_unittest.js","sourceRoot":"","sources":["../../../src/base/shared_disposable_unittest.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2024 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {SharedAsyncDisposable} from './shared_disposable';\n\ndescribe('SharedDisposableAsync', () => {\n  it('allows access to the underlying disposable', async () => {\n    const order: string[] = [];\n\n    const disposable = {\n      [Symbol.asyncDispose]: async () => {\n        order.push('dispose');\n      },\n    };\n\n    const shared = SharedAsyncDisposable.wrap(disposable);\n\n    expect(shared.get()).toBe(disposable);\n  });\n\n  it('only disposes after refcount drops to 0', async () => {\n    const order: string[] = [];\n\n    const disposable = {\n      [Symbol.asyncDispose]: async () => {\n        order.push('dispose');\n      },\n    };\n\n    order.push('create a');\n    const a = SharedAsyncDisposable.wrap(disposable);\n\n    order.push('clone b');\n    const b = a.clone();\n\n    order.push('dispose a');\n    await a[Symbol.asyncDispose]();\n\n    order.push('dispose b');\n    await b[Symbol.asyncDispose]();\n\n    expect(order).toEqual([\n      'create a',\n      'clone b',\n      'dispose a',\n      'dispose b',\n      'dispose',\n    ]);\n  });\n\n  it('throws on double dispose', async () => {\n    const disposable = {\n      [Symbol.asyncDispose]: async () => {},\n    };\n\n    const shared = SharedAsyncDisposable.wrap(disposable);\n    await shared[Symbol.asyncDispose]();\n\n    // Second dispose should fail\n    await expect(shared[Symbol.asyncDispose]()).rejects.toThrow();\n  });\n\n  it('throws on clone after dispose', async () => {\n    const disposable = {\n      [Symbol.asyncDispose]: async () => {},\n    };\n\n    const shared = SharedAsyncDisposable.wrap(disposable);\n    await shared[Symbol.asyncDispose]();\n\n    // Clone after dispose should fail\n    expect(() => shared.clone()).toThrow();\n  });\n\n  it('reveals isDisposed status', async () => {\n    const disposable = {\n      [Symbol.asyncDispose]: async () => {},\n    };\n\n    const shared = SharedAsyncDisposable.wrap(disposable);\n    expect(shared.isDisposed).toBe(false);\n\n    await shared[Symbol.asyncDispose]();\n    expect(shared.isDisposed).toBe(true);\n  });\n});\n"]}