{"version":3,"file":"dom_utils.js","sourceRoot":"","sources":["../../../src/base/dom_utils.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2023 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Vector2D} from './geom';\n\nexport type CSSCursor =\n  | 'alias'\n  | 'all-scroll'\n  | 'auto'\n  | 'cell'\n  | 'context-menu'\n  | 'col-resize'\n  | 'copy'\n  | 'crosshair'\n  | 'default'\n  | 'e-resize'\n  | 'ew-resize'\n  | 'grab'\n  | 'grabbing'\n  | 'help'\n  | 'move'\n  | 'n-resize'\n  | 'ne-resize'\n  | 'nesw-resize'\n  | 'ns-resize'\n  | 'nw-resize'\n  | 'nwse-resize'\n  | 'no-drop'\n  | 'none'\n  | 'not-allowed'\n  | 'pointer'\n  | 'progress'\n  | 'row-resize'\n  | 's-resize'\n  | 'se-resize'\n  | 'sw-resize'\n  | 'text'\n  | 'vertical-text'\n  | 'w-resize'\n  | 'wait'\n  | 'zoom-in'\n  | 'zoom-out';\n\n// Check whether a DOM element contains another, or whether they're the same\nexport function isOrContains(container: Element, target: Element): boolean {\n  return container === target || container.contains(target);\n}\n\n// Find a DOM element with a given \"ref\" attribute\nexport function findRef(root: Element, ref: string): Element | null {\n  const query = `[ref=${ref}]`;\n  if (root.matches(query)) {\n    return root;\n  } else {\n    return root.querySelector(query);\n  }\n}\n\n// Safely cast an Element to an HTMLElement.\n// Throws if the element is not an HTMLElement.\nexport function toHTMLElement(el: Element): HTMLElement {\n  if (!(el instanceof HTMLElement)) {\n    throw new Error('Element is not an HTMLElement');\n  }\n  return el as HTMLElement;\n}\n\n// Return true if EventTarget is or is inside an editable element.\n// Editable elements incluce: <input type=\"text\">, <textarea>, or elements with\n// the |contenteditable| attribute set.\nexport function elementIsEditable(target: EventTarget | null): boolean {\n  if (target === null) {\n    return false;\n  }\n\n  if (!(target instanceof Element)) {\n    return false;\n  }\n\n  const editable = target.closest('input, textarea, [contenteditable=true]');\n\n  if (editable === null) {\n    return false;\n  }\n\n  if (editable instanceof HTMLInputElement) {\n    if (['radio', 'checkbox', 'button'].includes(editable.type)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n// Returns the mouse pointer's position relative to |e.currentTarget| for a\n// given |MouseEvent|.\n// Similar to |offsetX|, |offsetY| but for |currentTarget| rather than |target|.\n// If the event has no currentTarget or it is not an element, offsetX & offsetY\n// are returned instead.\nexport function currentTargetOffset(e: MouseEvent): Vector2D {\n  if (e.currentTarget === e.target) {\n    return new Vector2D({x: e.offsetX, y: e.offsetY});\n  }\n\n  if (e.currentTarget && e.currentTarget instanceof Element) {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const offsetX = e.clientX - rect.left;\n    const offsetY = e.clientY - rect.top;\n    return new Vector2D({x: offsetX, y: offsetY});\n  }\n\n  return new Vector2D({x: e.offsetX, y: e.offsetY});\n}\n\n// Adds an event listener to a DOM element, returning a disposable to remove it.\nexport function bindEventListener<K extends keyof HTMLElementEventMap>(\n  element: EventTarget,\n  event: K,\n  handler: (event: HTMLElementEventMap[K]) => void,\n): Disposable {\n  element.addEventListener(event, handler as EventListener);\n  return {\n    [Symbol.dispose]() {\n      element.removeEventListener(event, handler as EventListener);\n    },\n  };\n}\n"]}