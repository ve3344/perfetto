{"version":3,"file":"classnames_unittest.js","sourceRoot":"","sources":["../../../src/base/classnames_unittest.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAEjC,6CAAwC;AAExC,IAAI,CAAC,YAAY,EAAE,GAAG,EAAE;IACtB,MAAM,CAAC,IAAA,uBAAU,EAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IACpD,MAAM,CAAC,IAAA,uBAAU,EAAC,KAAK,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IACxD,MAAM,CAAC,IAAA,uBAAU,EAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IAC3D,MAAM,CAAC,IAAA,uBAAU,EAAC,SAAS,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IAC/D,MAAM,CAAC,IAAA,uBAAU,EAAC,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;AAC9D,CAAC,CAAC,CAAC;AAEH,IAAI,CAAC,4BAA4B,EAAE,GAAG,EAAE;IACtC,MAAM,GAAG,GAAG,IAAI,CAAC;IACjB,MAAM,GAAG,GAAG,KAAK,CAAC;IAClB,MAAM,GAAG,GAAG,IAAI,CAAC;IACjB,MAAM,CAAC,IAAA,uBAAU,EAAC,GAAG,IAAI,KAAK,EAAE,GAAG,IAAI,KAAK,EAAE,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,OAAO,CAClE,SAAS,CACV,CAAC;AACJ,CAAC,CAAC,CAAC;AAEH,IAAI,CAAC,oDAAoD,EAAE,GAAG,EAAE;IAC9D,IAAI,QAA4B,CAAC;IACjC,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,MAAM,CAAC,IAAA,uBAAU,EAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AACxD,CAAC,CAAC,CAAC","sourcesContent":["// Copyright (C) 2023 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {classNames} from './classnames';\n\ntest('classnames', () => {\n  expect(classNames('foo', 'bar')).toEqual('foo bar');\n  expect(classNames('foo', '', 'bar')).toEqual('foo bar');\n  expect(classNames(false, 'foo', 'bar')).toEqual('foo bar');\n  expect(classNames(undefined, 'foo', 'bar')).toEqual('foo bar');\n  expect(classNames('foo bar', 'baz')).toEqual('foo bar baz');\n});\n\ntest('example usecase with flags', () => {\n  const foo = true;\n  const bar = false;\n  const baz = true;\n  expect(classNames(foo && 'foo', bar && 'bar', baz && 'baz')).toEqual(\n    'foo baz',\n  );\n});\n\ntest('example usecase with possibly undefined classnames', () => {\n  let fooClass: string | undefined;\n  const barClass = 'bar';\n  expect(classNames(fooClass, barClass)).toEqual('bar');\n});\n"]}