{"version":3,"file":"logging.js","sourceRoot":"","sources":["../../../src/base/logging.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2018 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {VERSION} from '../gen/perfetto_version';\nimport {exists} from './utils';\n\nexport type ErrorType = 'ERROR' | 'PROMISE_REJ' | 'OTHER';\nexport interface ErrorStackEntry {\n  name: string; // e.g. renderCanvas\n  location: string; // e.g. frontend_bundle.js:12:3\n}\nexport interface ErrorDetails {\n  errType: ErrorType;\n  message: string; // Uncaught StoreError: No such subtree: tracks,1374,state\n  stack: ErrorStackEntry[];\n}\n\nexport type ErrorHandler = (err: ErrorDetails) => void;\nconst errorHandlers: ErrorHandler[] = [];\n\nexport function assertExists<A>(value: A | null | undefined): A {\n  if (value === null || value === undefined) {\n    throw new Error(\"Value doesn't exist\");\n  }\n  return value;\n}\n\nexport function assertIsInstance<T>(value: unknown, clazz: Function): T {\n  assertTrue(value instanceof clazz);\n  return value as T;\n}\n\nexport function assertTrue(value: boolean, optMsg?: string) {\n  if (!value) {\n    throw new Error(optMsg ?? 'Failed assertion');\n  }\n}\n\nexport function assertFalse(value: boolean, optMsg?: string) {\n  assertTrue(!value, optMsg);\n}\n\nexport function addErrorHandler(handler: ErrorHandler) {\n  if (!errorHandlers.includes(handler)) {\n    errorHandlers.push(handler);\n  }\n}\n\nexport function reportError(err: ErrorEvent | PromiseRejectionEvent | {}) {\n  let errorObj = undefined;\n  let errMsg = '';\n  let errType: ErrorType;\n  const stack: ErrorStackEntry[] = [];\n  const baseUrl = `${location.protocol}//${location.host}`;\n\n  if (err instanceof ErrorEvent) {\n    errType = 'ERROR';\n    // In nominal cases the error is set in err.error{message,stack} and\n    // a toString() of the error object returns a meaningful one-line\n    // description. However, in the case of wasm errors, emscripten seems to\n    // wrap the error in an unusual way: err.error is null but err.message\n    // contains the whole one-line + stack trace.\n    if (err.error === null || err.error === undefined) {\n      // Wasm case.\n      const errLines = `${err.message}`.split('\\n');\n      errMsg = errLines[0];\n      errorObj = {stack: errLines.slice(1).join('\\n')};\n    } else {\n      // Standard JS case.\n      errMsg = `${err.error}`;\n      errorObj = err.error;\n    }\n  } else if (err instanceof PromiseRejectionEvent) {\n    errType = 'PROMISE_REJ';\n    errMsg = `${err.reason}`;\n    errorObj = err.reason;\n  } else {\n    errType = 'OTHER';\n    errMsg = `${err}`;\n  }\n\n  // Remove useless \"Uncaught Error:\" or \"Error:\" prefixes which just create\n  // noise in the bug tracker without adding any meaningful value.\n  errMsg = errMsg.replace(/^Uncaught Error:/, '');\n  errMsg = errMsg.replace(/^Error:/, '');\n  errMsg = errMsg.trim();\n\n  if (errorObj !== undefined && errorObj !== null) {\n    const maybeStack = (errorObj as {stack?: string}).stack;\n    let errStack = maybeStack !== undefined ? `${maybeStack}` : '';\n    errStack = errStack.replaceAll(/\\r/g, ''); // Strip Windows CR.\n    for (let line of errStack.split('\\n')) {\n      if (errMsg.includes(line)) continue;\n      // Chrome, Firefox and safari don't agree on the stack format:\n      // Chrome: prefixes entries with a '  at ' and uses the format\n      //         function(https://url:line:col), e.g.\n      //         '    at FooBar (https://.../frontend_bundle.js:2073:15)'\n      //         however, if the function name is not known, it prints just:\n      //         '     at https://.../frontend_bundle.js:2073:15'\n      //         or also:\n      //         '     at <anonymous>:5:11'\n      // Firefox and Safari: don't have any prefix and use @ as a separator:\n      //         redrawCanvas@https://.../frontend_bundle.js:468814:26\n      //         @debugger eval code:1:32\n\n      // Here we first normalize Chrome into the Firefox/Safari format by\n      // removing the '   at ' prefix and replacing (xxx)$ into @xxx.\n      line = line.replace(/^\\s*at\\s*/, '');\n      line = line.replace(/\\s*\\(([^)]+)\\)$/, '@$1');\n\n      // This leaves us still with two possible options here:\n      // 1. FooBar@https://ui.perfetto.dev/v123/frontend_bundle.js:2073:15\n      // 2. https://ui.perfetto.dev/v123/frontend_bundle.js:2073:15\n      const lastAt = line.lastIndexOf('@');\n      let entryName = '';\n      let entryLocation = '';\n      if (lastAt >= 0) {\n        entryLocation = line.substring(lastAt + 1);\n        entryName = line.substring(0, lastAt);\n      } else {\n        entryLocation = line;\n      }\n\n      // Remove redundant https://ui.perfetto.dev/v38.0-d6ed090ee/ as we have\n      // that information already and don't need to repeat it on each line.\n      if (entryLocation.includes(baseUrl)) {\n        entryLocation = entryLocation.replace(baseUrl, '');\n        entryLocation = entryLocation.replace(`/${VERSION}/`, '');\n      }\n      stack.push({name: entryName, location: entryLocation});\n    } // for (line in stack)\n\n    // Beautify the Wasm error message if possible. Most Wasm errors are of the\n    // form RuntimeError: unreachable or RuntimeError: abort. Those lead to bug\n    // titles that are undistinguishable from each other. Instead try using the\n    // first entry of the stack that contains a perfetto:: function name.\n    const wasmFunc = stack.find((e) => e.name.includes('perfetto::'))?.name;\n    if (errMsg.includes('RuntimeError') && exists(wasmFunc)) {\n      errMsg += ` @ ${wasmFunc.trim()}`;\n    }\n  }\n  // Invoke all the handlers registered through addErrorHandler.\n  // There are usually two handlers registered, one for the UI (error_dialog.ts)\n  // and one for Analytics (analytics.ts).\n  for (const handler of errorHandlers) {\n    handler({\n      errType,\n      message: errMsg,\n      stack,\n    } as ErrorDetails);\n  }\n}\n\n// This function serves two purposes.\n// 1) A runtime check - if we are ever called, we throw an exception.\n// This is useful for checking that code we suspect should never be reached is\n// actually never reached.\n// 2) A compile time check where typescript asserts that the value passed can be\n// cast to the \"never\" type.\n// This is useful for ensuring we exhastively check union types.\nexport function assertUnreachable(value: never): never {\n  throw new Error(`This code should not be reachable ${value as unknown}`);\n}\n"]}