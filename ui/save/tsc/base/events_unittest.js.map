{"version":3,"file":"events_unittest.js","sourceRoot":"","sources":["../../../src/base/events_unittest.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2023 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {defer} from './deferred';\nimport {DisposableStack} from './disposable_stack';\nimport {EvtSource} from './events';\n\ndescribe('Events', () => {\n  test('voidEvent', () => {\n    const ev = new EvtSource<void>();\n    const calls: string[] = [];\n    ev.addListener(() => calls.push('listener1'));\n    ev.addListener(() => calls.push('listener2'));\n    ev.notify();\n    expect(calls).toEqual(['listener1', 'listener2']);\n    ev.notify();\n    expect(calls).toEqual(['listener1', 'listener2', 'listener1', 'listener2']);\n  });\n\n  test('eventWithArgs', () => {\n    const ev = new EvtSource<number>();\n    const argsReceived = new Array<number>();\n    ev.addListener((n: number) => argsReceived.push(n));\n    ev.notify(1);\n    ev.notify(2);\n    expect(argsReceived).toEqual([1, 2]);\n  });\n\n  test('asyncEvent', async () => {\n    const ev = new EvtSource<number>();\n    const argsReceived = new Array<number>();\n    ev.addListener((n: number) => {\n      const promise = defer<void>();\n      setTimeout(() => {\n        argsReceived.push(n);\n        promise.resolve();\n      }, 0);\n      return promise;\n    });\n    await ev.notify(1);\n    await ev.notify(2);\n    await ev.notify(3);\n    expect(argsReceived).toEqual([1, 2, 3]);\n  });\n\n  test('dispose', () => {\n    const ev = new EvtSource<void>();\n    const calls: string[] = [];\n    const trash = new DisposableStack();\n    trash.use(ev.addListener(() => calls.push('listener1')));\n    trash.use(ev.addListener(() => calls.push('listener2')));\n    ev.notify();\n    expect(calls).toEqual(['listener1', 'listener2']);\n    calls.splice(0);\n\n    trash.dispose();\n    ev.notify();\n    expect(calls).toEqual([]);\n\n    trash.use(ev.addListener(() => calls.push('listener3')));\n    ev.notify();\n    expect(calls).toEqual(['listener3']);\n  });\n});\n"]}