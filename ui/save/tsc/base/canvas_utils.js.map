{"version":3,"file":"canvas_utils.js","sourceRoot":"","sources":["../../../src/base/canvas_utils.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2019 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Size2D, Point2D} from './geom';\nimport {isString} from './object_utils';\n\nexport function drawDoubleHeadedArrow(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  length: number,\n  showArrowHeads: boolean,\n  width = 2,\n  color = 'black',\n) {\n  ctx.beginPath();\n  ctx.lineWidth = width;\n  ctx.lineCap = 'round';\n  ctx.strokeStyle = color;\n  ctx.moveTo(x, y);\n  ctx.lineTo(x + length, y);\n  ctx.stroke();\n  ctx.closePath();\n  // Arrowheads on the each end of the line.\n  if (showArrowHeads) {\n    ctx.beginPath();\n    ctx.moveTo(x + length - 8, y - 4);\n    ctx.lineTo(x + length, y);\n    ctx.lineTo(x + length - 8, y + 4);\n    ctx.stroke();\n    ctx.closePath();\n    ctx.beginPath();\n    ctx.moveTo(x + 8, y - 4);\n    ctx.lineTo(x, y);\n    ctx.lineTo(x + 8, y + 4);\n    ctx.stroke();\n    ctx.closePath();\n  }\n}\n\nexport function drawIncompleteSlice(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  showGradient: boolean = true,\n) {\n  if (width <= 0 || height <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  const triangleSize = height / 4;\n  ctx.moveTo(x, y);\n  ctx.lineTo(x + width, y);\n  ctx.lineTo(x + width - 3, y + triangleSize * 0.5);\n  ctx.lineTo(x + width, y + triangleSize);\n  ctx.lineTo(x + width - 3, y + triangleSize * 1.5);\n  ctx.lineTo(x + width, y + 2 * triangleSize);\n  ctx.lineTo(x + width - 3, y + triangleSize * 2.5);\n  ctx.lineTo(x + width, y + 3 * triangleSize);\n  ctx.lineTo(x + width - 3, y + triangleSize * 3.5);\n  ctx.lineTo(x + width, y + 4 * triangleSize);\n  ctx.lineTo(x, y + height);\n\n  const fillStyle = ctx.fillStyle;\n  if (isString(fillStyle)) {\n    if (showGradient) {\n      const gradient = ctx.createLinearGradient(x, y, x + width, y + height);\n      gradient.addColorStop(0.66, fillStyle);\n      gradient.addColorStop(1, '#FFFFFF');\n      ctx.fillStyle = gradient;\n    }\n  } else {\n    throw new Error(\n      `drawIncompleteSlice() expects fillStyle to be a simple color not ${fillStyle}`,\n    );\n  }\n\n  ctx.fill();\n  ctx.fillStyle = fillStyle;\n}\n\nexport function drawTrackHoverTooltip(\n  ctx: CanvasRenderingContext2D,\n  pos: Point2D,\n  trackSize: Size2D,\n  text: string,\n  text2?: string,\n) {\n  ctx.font = '10px Roboto Condensed';\n  ctx.textBaseline = 'middle';\n  ctx.textAlign = 'left';\n\n  // TODO(hjd): Avoid measuring text all the time (just use monospace?)\n  const textMetrics = ctx.measureText(text);\n  const text2Metrics = ctx.measureText(text2 ?? '');\n\n  // Padding on each side of the box containing the tooltip:\n  const paddingPx = 4;\n\n  // Figure out the width of the tool tip box:\n  let width = Math.max(textMetrics.width, text2Metrics.width);\n  width += paddingPx * 2;\n\n  // and the height:\n  let height = 0;\n  height += textMetrics.fontBoundingBoxAscent;\n  height += textMetrics.fontBoundingBoxDescent;\n  if (text2 !== undefined) {\n    height += text2Metrics.fontBoundingBoxAscent;\n    height += text2Metrics.fontBoundingBoxDescent;\n  }\n  height += paddingPx * 2;\n\n  let x = pos.x;\n  let y = pos.y;\n\n  // Move box to the top right of the mouse:\n  x += 10;\n  y -= 10;\n\n  // Ensure the box is on screen:\n  const endPx = trackSize.width;\n  if (x + width > endPx) {\n    x -= x + width - endPx;\n  }\n  if (y < 0) {\n    y = 0;\n  }\n  if (y + height > trackSize.height) {\n    y -= y + height - trackSize.height;\n  }\n\n  // Draw everything:\n  ctx.fillStyle = 'rgba(255, 255, 255, 0.9)';\n  ctx.fillRect(x, y, width, height);\n\n  ctx.fillStyle = 'hsl(200, 50%, 40%)';\n  ctx.fillText(\n    text,\n    x + paddingPx,\n    y + paddingPx + textMetrics.fontBoundingBoxAscent,\n  );\n  if (text2 !== undefined) {\n    const yOffsetPx =\n      textMetrics.fontBoundingBoxAscent +\n      textMetrics.fontBoundingBoxDescent +\n      text2Metrics.fontBoundingBoxAscent;\n    ctx.fillText(text2, x + paddingPx, y + paddingPx + yOffsetPx);\n  }\n}\n\nexport function canvasClip(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  w: number,\n  h: number,\n): void {\n  ctx.beginPath();\n  ctx.rect(x, y, w, h);\n  ctx.clip();\n}\n\n/**\n * Save the state of the canvas, returning a disposable which restores the state\n * when disposed.\n *\n * Allows using the |using| keyword to automatically restore the canvas state.\n * @param ctx - The canvas context to save the state of.\n * @returns A disposable.\n *\n * @example\n * {\n *   using const _ = canvasSave(ctx);\n *   ctx.translate(123, 456); // Manipulate the canvas state\n * } // ctx.restore() is automatically called when the _ falls out of scope\n */\nexport function canvasSave(ctx: CanvasRenderingContext2D): Disposable {\n  ctx.save();\n  return {\n    [Symbol.dispose](): void {\n      ctx.restore();\n    },\n  };\n}\n"]}