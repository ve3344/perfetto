{"version":3,"file":"hotkeys_unittest.js","sourceRoot":"","sources":["../../../src/base/hotkeys_unittest.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2023 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {checkHotkey, formatHotkey, Hotkey, parseHotkey} from './hotkeys';\n\ntest('parseHotkey', () => {\n  expect(parseHotkey('A')).toEqual({\n    key: 'A',\n    allowInEditable: false,\n    modifier: '',\n  });\n  expect(parseHotkey('!A')).toEqual({\n    key: 'A',\n    allowInEditable: true,\n    modifier: '',\n  });\n  expect(parseHotkey('Shift+A')).toEqual({\n    key: 'A',\n    allowInEditable: false,\n    modifier: 'Shift+',\n  });\n  expect(parseHotkey('Mod+Shift+A')).toEqual({\n    key: 'A',\n    allowInEditable: false,\n    modifier: 'Mod+Shift+',\n  });\n  expect(parseHotkey('!Mod+Shift+A')).toEqual({\n    key: 'A',\n    allowInEditable: true,\n    modifier: 'Mod+Shift+',\n  });\n});\n\ndescribe('checkHotkey', () => {\n  test('A', () => {\n    expect(checkHotkey('A', {key: 'a'})).toBe(true);\n    expect(checkHotkey('A', {key: 'A', shiftKey: true})).toBe(false);\n    expect(checkHotkey('A', {key: 'a', ctrlKey: true})).toBe(false);\n    expect(checkHotkey('A', {key: 'a', altKey: true})).toBe(false);\n  });\n\n  test('Special', () => {\n    expect(checkHotkey('Enter', {key: 'Enter'})).toBe(true);\n    expect(checkHotkey('Escape', {key: 'Escape'})).toBe(true);\n  });\n\n  test('Shift+A', () => {\n    const hotkey: Hotkey = 'Shift+A';\n    expect(checkHotkey(hotkey, {key: 'a'})).toBe(false);\n    expect(checkHotkey(hotkey, {key: 'A', shiftKey: true})).toBe(true);\n    expect(checkHotkey(hotkey, {key: 'a', ctrlKey: true})).toBe(false);\n    expect(checkHotkey(hotkey, {key: 'a', altKey: true})).toBe(false);\n  });\n\n  test('Mod+A on PC', () => {\n    const hotkey: Hotkey = 'Mod+A';\n    expect(checkHotkey(hotkey, {key: 'a'}, 'PC')).toBe(false);\n    expect(checkHotkey(hotkey, {key: 'A', shiftKey: true}, 'PC')).toBe(false);\n    expect(checkHotkey(hotkey, {key: 'a', ctrlKey: true}, 'PC')).toBe(true);\n    expect(checkHotkey(hotkey, {key: 'a', metaKey: true}, 'PC')).toBe(false);\n  });\n\n  test('Mod+A on Mac', () => {\n    const hotkey: Hotkey = 'Mod+A';\n    expect(checkHotkey(hotkey, {key: 'a'}, 'Mac')).toBe(false);\n    expect(checkHotkey(hotkey, {key: 'A', shiftKey: true}, 'Mac')).toBe(false);\n    expect(checkHotkey(hotkey, {key: 'a', ctrlKey: true}, 'Mac')).toBe(false);\n    expect(checkHotkey(hotkey, {key: 'a', metaKey: true}, 'Mac')).toBe(true);\n  });\n\n  test('allow in editable', () => {\n    const el = document.createElement('input');\n    el.setAttribute('type', 'text');\n\n    expect(checkHotkey('X', {key: 'x'})).toBe(true);\n    expect(checkHotkey('!X', {key: 'x'})).toBe(true);\n\n    expect(checkHotkey('X', {key: 'x', target: el})).toBe(false);\n    expect(checkHotkey('!X', {key: 'x', target: el})).toBe(true);\n  });\n});\n\ntest('formatHotkey', () => {\n  expect(formatHotkey('Mod+X', 'Mac')).toEqual('⌘X');\n  expect(formatHotkey('Mod+Shift+X', 'Mac')).toEqual('⌘⇧X');\n\n  expect(formatHotkey('Mod+X', 'PC')).toEqual('Ctrl+X');\n  expect(formatHotkey('Mod+Shift+X', 'PC')).toEqual('Ctrl+Shift+X');\n});\n"]}