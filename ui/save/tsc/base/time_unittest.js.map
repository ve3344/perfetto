{"version":3,"file":"time_unittest.js","sourceRoot":"","sources":["../../../src/base/time_unittest.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAEjC,uCAAgE;AAEhE,MAAM,CAAC,GAAG,WAAI,CAAC,OAAO,CAAC;AAEvB,IAAI,CAAC,iBAAiB,EAAE,GAAG,EAAE;IAC3B,MAAM,CAAC,eAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC1C,MAAM,CAAC,eAAQ,CAAC,MAAM,CAAC,WAAc,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACtD,MAAM,CAAC,eAAQ,CAAC,MAAM,CAAC,YAAe,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACvD,MAAM,CAAC,eAAQ,CAAC,MAAM,CAAC,YAAe,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IAC1D,MAAM,CAAC,eAAQ,CAAC,MAAM,CAAC,YAAe,CAAC,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;IAChE,MAAM,CAAC,eAAQ,CAAC,MAAM,CAAC,YAAe,CAAC,CAAC,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;IACtE,MAAM,CAAC,eAAQ,CAAC,MAAM,CAAC,YAAe,CAAC,CAAC,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;IAC5E,MAAM,CAAC,eAAQ,CAAC,MAAM,CAAC,UAAY,CAAC,CAAC,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;IACnE,MAAM,CAAC,eAAQ,CAAC,MAAM,CAAC,KAAM,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IAC/C,MAAM,CAAC,eAAQ,CAAC,MAAM,CAAC,KAAM,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IAC/C,MAAM,CAAC,eAAQ,CAAC,MAAM,CAAC,WAAc,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IAC1D,MAAM,CAAC,eAAQ,CAAC,MAAM,CAAC,aAAgB,CAAC,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;IACjE,MAAM,CAAC,eAAQ,CAAC,MAAM,CAAC,cAAkB,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC1D,MAAM,CAAC,eAAQ,CAAC,MAAM,CAAC,cAAkB,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IAC9D,MAAM,CAAC,eAAQ,CAAC,MAAM,CAAC,eAAmB,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IAC5D,MAAM,CAAC,eAAQ,CAAC,MAAM,CAAC,eAAmB,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IAChE,MAAM,CAAC,eAAQ,CAAC,MAAM,CAAC,kBAAuB,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IACnE,MAAM,CAAC,eAAQ,CAAC,MAAM,CAAC,kBAAuB,CAAC,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;AACzE,CAAC,CAAC,CAAC;AAEH,IAAI,CAAC,mBAAmB,EAAE,GAAG,EAAE;IAC7B,MAAM,CAAC,eAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC5C,MAAM,CAAC,eAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IACjD,MAAM,CAAC,eAAQ,CAAC,QAAQ,CAAC,KAAM,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IACnD,MAAM,CAAC,eAAQ,CAAC,QAAQ,CAAC,MAAO,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IACrD,MAAM,CAAC,eAAQ,CAAC,QAAQ,CAAC,WAAc,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACxD,MAAM,CAAC,eAAQ,CAAC,QAAQ,CAAC,YAAe,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IAC1D,MAAM,CAAC,eAAQ,CAAC,QAAQ,CAAC,YAAe,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IAC1D,MAAM,CAAC,eAAQ,CAAC,QAAQ,CAAC,YAAe,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IAC5D,MAAM,CAAC,eAAQ,CAAC,QAAQ,CAAC,YAAe,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IAC5D,MAAM,CAAC,eAAQ,CAAC,QAAQ,CAAC,YAAe,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IAC5D,MAAM,CAAC,eAAQ,CAAC,QAAQ,CAAC,UAAY,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IAC3D,MAAM,CAAC,eAAQ,CAAC,QAAQ,CAAC,KAAM,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACjD,MAAM,CAAC,eAAQ,CAAC,QAAQ,CAAC,KAAM,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACjD,MAAM,CAAC,eAAQ,CAAC,QAAQ,CAAC,WAAc,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACxD,MAAM,CAAC,eAAQ,CAAC,QAAQ,CAAC,aAAgB,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IAC5D,MAAM,CAAC,eAAQ,CAAC,QAAQ,CAAC,cAAkB,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IAC/D,MAAM,CAAC,eAAQ,CAAC,QAAQ,CAAC,eAAmB,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IACjE,MAAM,CAAC,eAAQ,CAAC,QAAQ,CAAC,kBAAuB,CAAC,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;AAC1E,CAAC,CAAC,CAAC;AAEH,IAAI,CAAC,qBAAqB,EAAE,GAAG,EAAE;IAC/B,MAAM,CAAC,eAAQ,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;IAC5D,MAAM,CAAC,eAAQ,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;IAC7D,MAAM,CAAC,eAAQ,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;AACrD,CAAC,CAAC,CAAC;AAEH,IAAI,CAAC,UAAU,EAAE,GAAG,EAAE;IACpB,MAAM,CAAC,IAAI,eAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;IAC1E,MAAM,CAAC,IAAI,eAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;IAC5E,MAAM,CAAC,IAAI,eAAQ,CAAC,CAAC,CAAC,YAAe,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAC5D,sBAAsB,CACvB,CAAC;IACF,MAAM,CAAC,IAAI,eAAQ,CAAC,CAAC,CAAC,YAAe,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAC5D,sBAAsB,CACvB,CAAC;IACF,MAAM,CAAC,IAAI,eAAQ,CAAC,CAAC,CAAC,eAAmB,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAChE,wBAAwB,CACzB,CAAC;IACF,MAAM,CAAC,IAAI,eAAQ,CAAC,CAAC,CAAC,kBAAuB,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CACpE,0BAA0B,CAC3B,CAAC;IACF,MAAM,CAAC,IAAI,eAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAC;AAChF,CAAC,CAAC,CAAC;AAEH,SAAS,MAAM,CAAC,KAAa,EAAE,GAAW;IACxC,OAAO,IAAI,eAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AACxC,CAAC;AAED,QAAQ,CAAC,UAAU,EAAE,GAAG,EAAE;IACxB,EAAE,CAAC,qCAAqC,EAAE,GAAG,EAAE;QAC7C,MAAM,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;IACzC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mBAAmB,EAAE,GAAG,EAAE;QAC3B,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC9C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mBAAmB,EAAE,GAAG,EAAE;QAC3B,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC5C,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC5C,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC9C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iBAAiB,EAAE,GAAG,EAAE;QACzB,MAAM,CAAC,GAAG,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAC3B,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC;QAChD,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;QAC/C,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IACjD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oBAAoB,EAAE,GAAG,EAAE;QAC5B,MAAM,CAAC,GAAG,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAE3B,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;QACtC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC;QACxC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC;QACxC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;QACvC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IACzC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oCAAoC,EAAE,GAAG,EAAE;QAC5C,MAAM,CAAC,GAAG,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAE3B,MAAM,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC;QACpD,MAAM,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;QAClD,MAAM,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;QAClD,MAAM,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;QACnD,MAAM,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;QAClD,MAAM,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IACrD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gBAAgB,EAAE,GAAG,EAAE;QACxB,MAAM,CAAC,GAAG,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAE3B,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;QAC9C,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC;QAC/C,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC;QAChD,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC;QAChD,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;QAC/C,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC;IACjD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,SAAS,EAAE,GAAG,EAAE;QACjB,MAAM,CAAC,GAAG,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAC3B,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;IACpD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,SAAS,EAAE,GAAG,EAAE;QACjB,MAAM,CAAC,GAAG,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAC3B,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;IAC7C,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright (C) 2019 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Duration, Time, Timecode, TimeSpan} from '../base/time';\n\nconst t = Time.fromRaw;\n\ntest('Duration.format', () => {\n  expect(Duration.format(0n)).toEqual('0s');\n  expect(Duration.format(3_000_000_000n)).toEqual('3s');\n  expect(Duration.format(60_000_000_000n)).toEqual('1m');\n  expect(Duration.format(63_000_000_000n)).toEqual('1m 3s');\n  expect(Duration.format(63_200_000_000n)).toEqual('1m 3s 200ms');\n  expect(Duration.format(63_222_100_000n)).toEqual('1m 3s 222ms 100us');\n  expect(Duration.format(63_222_111_100n)).toEqual('1m 3s 222ms 111us 100ns');\n  expect(Duration.format(222_111_100n)).toEqual('222ms 111us 100ns');\n  expect(Duration.format(1_000n)).toEqual('1us');\n  expect(Duration.format(3_000n)).toEqual('3us');\n  expect(Duration.format(1_000_001_000n)).toEqual('1s 1us');\n  expect(Duration.format(200_000_000_030n)).toEqual('3m 20s 30ns');\n  expect(Duration.format(3_600_000_000_000n)).toEqual('1h');\n  expect(Duration.format(3_600_000_000_001n)).toEqual('1h 1ns');\n  expect(Duration.format(86_400_000_000_000n)).toEqual('24h');\n  expect(Duration.format(86_400_000_000_001n)).toEqual('24h 1ns');\n  expect(Duration.format(31_536_000_000_000_000n)).toEqual('8,760h');\n  expect(Duration.format(31_536_000_000_000_001n)).toEqual('8,760h 1ns');\n});\n\ntest('Duration.humanise', () => {\n  expect(Duration.humanise(0n)).toEqual('0s');\n  expect(Duration.humanise(123n)).toEqual('123ns');\n  expect(Duration.humanise(1_234n)).toEqual('1.2us');\n  expect(Duration.humanise(12_345n)).toEqual('12.3us');\n  expect(Duration.humanise(3_000_000_000n)).toEqual('3s');\n  expect(Duration.humanise(60_000_000_000n)).toEqual('60s');\n  expect(Duration.humanise(63_000_000_000n)).toEqual('63s');\n  expect(Duration.humanise(63_200_000_000n)).toEqual('63.2s');\n  expect(Duration.humanise(63_222_100_000n)).toEqual('63.2s');\n  expect(Duration.humanise(63_222_111_100n)).toEqual('63.2s');\n  expect(Duration.humanise(222_111_100n)).toEqual('222.1ms');\n  expect(Duration.humanise(1_000n)).toEqual('1us');\n  expect(Duration.humanise(3_000n)).toEqual('3us');\n  expect(Duration.humanise(1_000_001_000n)).toEqual('1s');\n  expect(Duration.humanise(200_000_000_030n)).toEqual('200s');\n  expect(Duration.humanise(3_600_000_000_000n)).toEqual('3600s');\n  expect(Duration.humanise(86_400_000_000_000n)).toEqual('86400s');\n  expect(Duration.humanise(31_536_000_000_000_000n)).toEqual('31536000s');\n});\n\ntest('Duration.fromMillis', () => {\n  expect(Duration.fromMillis(123.456789)).toEqual(123456789n);\n  expect(Duration.fromMillis(123.4567895)).toEqual(123456789n);\n  expect(Duration.fromMillis(0.0000001)).toEqual(0n);\n});\n\ntest('timecode', () => {\n  expect(new Timecode(t(0n)).toString(' ')).toEqual('00:00:00.000 000 000');\n  expect(new Timecode(t(123n)).toString(' ')).toEqual('00:00:00.000 000 123');\n  expect(new Timecode(t(60_000_000_000n)).toString(' ')).toEqual(\n    '00:01:00.000 000 000',\n  );\n  expect(new Timecode(t(12_345_678_910n)).toString(' ')).toEqual(\n    '00:00:12.345 678 910',\n  );\n  expect(new Timecode(t(86_400_000_000_000n)).toString(' ')).toEqual(\n    '1d00:00:00.000 000 000',\n  );\n  expect(new Timecode(t(31_536_000_000_000_000n)).toString(' ')).toEqual(\n    '365d00:00:00.000 000 000',\n  );\n  expect(new Timecode(t(-123n)).toString(' ')).toEqual('-00:00:00.000 000 123');\n});\n\nfunction mkSpan(start: bigint, end: bigint) {\n  return new TimeSpan(t(start), t(end));\n}\n\ndescribe('TimeSpan', () => {\n  it('throws when start is later than end', () => {\n    expect(() => mkSpan(1n, 0n)).toThrow();\n  });\n\n  it('can calc duration', () => {\n    expect(mkSpan(10n, 20n).duration).toBe(10n);\n  });\n\n  it('can calc midpoint', () => {\n    expect(mkSpan(10n, 20n).midpoint).toBe(15n);\n    expect(mkSpan(10n, 19n).midpoint).toBe(14n);\n    expect(mkSpan(10n, 10n).midpoint).toBe(10n);\n  });\n\n  it('can be compared', () => {\n    const x = mkSpan(10n, 20n);\n    expect(x.equals(mkSpan(10n, 20n))).toBeTruthy();\n    expect(x.equals(mkSpan(11n, 20n))).toBeFalsy();\n    expect(x.equals(mkSpan(10n, 19n))).toBeFalsy();\n  });\n\n  it('checks containment', () => {\n    const x = mkSpan(10n, 20n);\n\n    expect(x.contains(t(9n))).toBeFalsy();\n    expect(x.contains(t(10n))).toBeTruthy();\n    expect(x.contains(t(15n))).toBeTruthy();\n    expect(x.contains(t(20n))).toBeFalsy();\n    expect(x.contains(t(21n))).toBeFalsy();\n  });\n\n  it('checks containment of another span', () => {\n    const x = mkSpan(10n, 20n);\n\n    expect(x.containsSpan(t(12n), t(18n))).toBeTruthy();\n    expect(x.containsSpan(t(5n), t(25n))).toBeFalsy();\n    expect(x.containsSpan(t(5n), t(15n))).toBeFalsy();\n    expect(x.containsSpan(t(15n), t(25n))).toBeFalsy();\n    expect(x.containsSpan(t(0n), t(10n))).toBeFalsy();\n    expect(x.containsSpan(t(20n), t(30n))).toBeFalsy();\n  });\n\n  it('checks overlap', () => {\n    const x = mkSpan(10n, 20n);\n\n    expect(x.overlaps(t(0n), t(10n))).toBeFalsy();\n    expect(x.overlaps(t(5n), t(15n))).toBeTruthy();\n    expect(x.overlaps(t(12n), t(18n))).toBeTruthy();\n    expect(x.overlaps(t(15n), t(25n))).toBeTruthy();\n    expect(x.overlaps(t(20n), t(30n))).toBeFalsy();\n    expect(x.overlaps(t(5n), t(25n))).toBeTruthy();\n  });\n\n  it('can add', () => {\n    const x = mkSpan(10n, 20n);\n    expect(x.translate(5n)).toEqual(mkSpan(15n, 25n));\n  });\n\n  it('can pad', () => {\n    const x = mkSpan(10n, 20n);\n    expect(x.pad(5n)).toEqual(mkSpan(5n, 25n));\n  });\n});\n"]}