{"version":3,"file":"object_utils_unittest.js","sourceRoot":"","sources":["../../../src/base/object_utils_unittest.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAEjC,iDAA+D;AAE/D,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE;IACvB,MAAM,MAAM,GAAG,EAAC,IAAI,EAAE,KAAK,EAAC,CAAC;IAC7B,MAAM,KAAK,GAAG;QACZ,GAAG,EAAE;YACH,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;SACf;QACD,GAAG,EAAE,MAAM;KACZ,CAAC;IAEF,IAAI,CAAC,YAAY,EAAE,GAAG,EAAE;QACtB,MAAM,CAAC,IAAA,sBAAO,EAAC,KAAK,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAClD,MAAM,CAAC,IAAA,sBAAO,EAAC,KAAK,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAClD,MAAM,CAAC,IAAA,sBAAO,EAAC,KAAK,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC1D,MAAM,CAAC,IAAA,sBAAO,EAAC,KAAK,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,EAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAC,CAAC,CAAC;QAC1D,MAAM,CAAC,IAAA,sBAAO,EAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACvC,MAAM,CAAC,IAAA,sBAAO,EAAC,KAAK,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC/C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2CAA2C,EAAE,GAAG,EAAE;QACnD,kEAAkE;QAClE,MAAM,CAAC,IAAA,sBAAO,EAAC,KAAK,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACjD,MAAM,CAAC,IAAA,sBAAO,EAAC,KAAK,EAAE,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC5D,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE;IACvB,MAAM,MAAM,GAAG,EAAC,IAAI,EAAE,KAAK,EAAC,CAAC;IAC7B,MAAM,KAAK,GAAG;QACZ,GAAG,EAAE;YACH,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;SACf;QACD,GAAG,EAAE,MAAM;KACZ,CAAC;IAEF,IAAI,CAAC,YAAY,EAAE,GAAG,EAAE;QACtB,IAAA,sBAAO,EAAC,KAAK,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QACtC,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC;YACpB,GAAG,EAAE;gBACH,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;aAChB;YACD,GAAG,EAAE,MAAM;SACZ,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0CAA0C,EAAE,GAAG,EAAE;QAClD,IAAA,sBAAO,EAAC,KAAK,EAAE,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC,CAAC;QAChC,MAAM,CAAE,KAAmC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACnE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sCAAsC,EAAE,GAAG,EAAE;QAC9C,sEAAsE;QACtE,MAAM,CAAC,GAAG,EAAE;YACV,IAAA,sBAAO,EAAC,KAAK,EAAE,CAAC,MAAM,EAAE,OAAO,CAAC,EAAE,KAAK,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;IAC7B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2BAA2B,EAAE,GAAG,EAAE;QACnC,MAAM,CAAC,GAAG,EAAE;YACV,IAAA,sBAAO,EAAC,KAAK,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;IAC7B,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,IAAI,CAAC,eAAe,EAAE,GAAG,EAAE;IACzB,MAAM,GAAG,GAAG,CAAC,CAAC;IACd,MAAM,GAAG,GAAG,MAAM,CAAC;IACnB,MAAM,SAAS,GAAG;QAChB,GAAG;KACJ,CAAC;IACF,MAAM,aAAa,GAAG;QACpB,GAAG;KACJ,CAAC;IAEF,MAAM,CAAC,IAAA,4BAAa,EAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACzC,MAAM,CAAC,IAAA,4BAAa,EAAC,EAAC,GAAG,EAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC7C,MAAM,CAAC,IAAA,4BAAa,EAAC,EAAE,EAAE,EAAC,GAAG,EAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC7C,MAAM,CAAC,IAAA,4BAAa,EAAC,EAAC,GAAG,EAAC,EAAE,EAAC,GAAG,EAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC/C,MAAM,CAAC,IAAA,4BAAa,EAAC,EAAC,SAAS,EAAC,EAAE,EAAC,SAAS,EAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3D,MAAM,CAAC,IAAA,4BAAa,EAAC,EAAC,SAAS,EAAC,EAAE,EAAC,aAAa,EAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAClE,CAAC,CAAC,CAAC","sourcesContent":["// Copyright (C) 2023 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {getPath, setPath, shallowEquals} from './object_utils';\n\ndescribe('getPath', () => {\n  const nested = {quux: 'qux'};\n  const value = {\n    foo: {\n      bar: [1, 2, 3],\n    },\n    baz: nested,\n  };\n\n  test('happy path', () => {\n    expect(getPath(value, ['foo', 'bar', 1])).toBe(2);\n    expect(getPath(value, ['foo', 'bar', 2])).toBe(3);\n    expect(getPath(value, ['foo', 'bar'])).toEqual([1, 2, 3]);\n    expect(getPath(value, ['foo'])).toEqual({bar: [1, 2, 3]});\n    expect(getPath(value, [])).toBe(value);\n    expect(getPath(value, ['baz'])).toBe(nested);\n  });\n\n  it('returns undefined when path is incomplete', () => {\n    // value.quux does not exist so we expect undefined to be returned\n    expect(getPath(value, ['quux'])).toBe(undefined);\n    expect(getPath(value, ['quux', 'corge'])).toBe(undefined);\n  });\n});\n\ndescribe('setPath', () => {\n  const nested = {quux: 'qux'};\n  const value = {\n    foo: {\n      bar: [1, 2, 3],\n    },\n    baz: nested,\n  };\n\n  test('happy path', () => {\n    setPath(value, ['foo', 'bar', 1], 10);\n    expect(value).toEqual({\n      foo: {\n        bar: [1, 10, 3],\n      },\n      baz: nested,\n    });\n  });\n\n  it('appends node when target node is missing', () => {\n    setPath(value, ['quux'], 'abc');\n    expect((value as unknown as {quux: string})['quux']).toBe('abc');\n  });\n\n  it('throws when path node(s) are missing', () => {\n    // value.quux does not exist, so setting value.quux.corge is an error.\n    expect(() => {\n      setPath(value, ['quux', 'corge'], 'abc');\n    }).toThrowError(TypeError);\n  });\n\n  it('throws when path is empty', () => {\n    expect(() => {\n      setPath(value, [], 'abc');\n    }).toThrowError(TypeError);\n  });\n});\n\ntest('shallowEquals', () => {\n  const one = 1;\n  const foo = 'Foo!';\n  const nestedFoo = {\n    foo,\n  };\n  const nestedFooDupe = {\n    foo,\n  };\n\n  expect(shallowEquals({}, {})).toBe(true);\n  expect(shallowEquals({one}, {})).toBe(false);\n  expect(shallowEquals({}, {one})).toBe(false);\n  expect(shallowEquals({one}, {one})).toBe(true);\n  expect(shallowEquals({nestedFoo}, {nestedFoo})).toBe(true);\n  expect(shallowEquals({nestedFoo}, {nestedFooDupe})).toBe(false);\n});\n"]}