{"version":3,"file":"disposable_stack.js","sourceRoot":"","sources":["../../../src/base/disposable_stack.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2024 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Implementations of DisposableStack and AsyncDisposableStack.\n *\n * These are defined in the \"ECMAScript Explicit Resource Management\" proposal\n * which is currently at stage 3, which means \"No changes to the proposal are\n * expected, but some necessary changes may still occur due to web\n * incompatibilities or feedback from production-grade implementations.\"\n *\n * Reference\n * - https://github.com/tc39/proposal-explicit-resource-management\n * - https://tc39.es/process-document/\n *\n * These classes are purposely not polyfilled to avoid confusion and aid\n * debug-ability and traceability.\n */\n\nexport class DisposableStack implements Disposable {\n  private readonly resources: Disposable[];\n  private isDisposed = false;\n\n  constructor() {\n    this.resources = [];\n  }\n\n  use<T extends Disposable | null | undefined>(res: T): T {\n    if (res == null) return res;\n    this.resources.push(res);\n    return res;\n  }\n\n  defer(onDispose: () => void) {\n    this.resources.push({\n      [Symbol.dispose]: onDispose,\n    });\n  }\n\n  // TODO(stevegolton): Handle error suppression properly\n  // https://github.com/tc39/proposal-explicit-resource-management?tab=readme-ov-file#aggregation\n  [Symbol.dispose](): void {\n    this.isDisposed = true;\n    while (true) {\n      const res = this.resources.pop();\n      if (res === undefined) {\n        break;\n      }\n      res[Symbol.dispose]();\n    }\n  }\n\n  dispose(): void {\n    this[Symbol.dispose]();\n  }\n\n  adopt<T>(value: T, onDispose: (value: T) => void): T {\n    this.resources.push({\n      [Symbol.dispose]: () => onDispose(value),\n    });\n    return value;\n  }\n\n  move(): DisposableStack {\n    const other = new DisposableStack();\n    for (const res of this.resources) {\n      other.resources.push(res);\n    }\n    this.resources.length = 0;\n    return other;\n  }\n\n  readonly [Symbol.toStringTag]: string = 'DisposableStack';\n\n  get disposed(): boolean {\n    return this.isDisposed;\n  }\n}\n\nexport class AsyncDisposableStack implements AsyncDisposable {\n  private readonly resources: AsyncDisposable[];\n  private isDisposed = false;\n\n  constructor() {\n    this.resources = [];\n  }\n\n  use<T extends Disposable | AsyncDisposable | null | undefined>(res: T): T {\n    if (res == null) return res;\n\n    if (Symbol.asyncDispose in res) {\n      this.resources.push(res);\n    } else if (Symbol.dispose in res) {\n      this.resources.push({\n        [Symbol.asyncDispose]: async () => {\n          res[Symbol.dispose]();\n        },\n      });\n    }\n\n    return res;\n  }\n\n  defer(onDispose: () => Promise<void>) {\n    this.resources.push({\n      [Symbol.asyncDispose]: onDispose,\n    });\n  }\n\n  // TODO(stevegolton): Handle error suppression properly\n  // https://github.com/tc39/proposal-explicit-resource-management?tab=readme-ov-file#aggregation\n  async [Symbol.asyncDispose](): Promise<void> {\n    this.isDisposed = true;\n    while (true) {\n      const res = this.resources.pop();\n      if (res === undefined) {\n        break;\n      }\n      const timerId = setTimeout(() => {\n        throw new Error(\n          'asyncDispose timed out. This might be due to a Disposable ' +\n            'resource  trying to issue cleanup queries on trace unload, ' +\n            'while the Wasm module was already destroyed ',\n        );\n      }, 10_000);\n      await res[Symbol.asyncDispose]();\n      clearTimeout(timerId);\n    }\n  }\n\n  asyncDispose(): Promise<void> {\n    return this[Symbol.asyncDispose]();\n  }\n\n  adopt<T>(value: T, onDispose: (value: T) => Promise<void>): T {\n    this.resources.push({\n      [Symbol.asyncDispose]: async () => onDispose(value),\n    });\n    return value;\n  }\n\n  move(): AsyncDisposableStack {\n    const other = new AsyncDisposableStack();\n    for (const res of this.resources) {\n      other.resources.push(res);\n    }\n    this.resources.length = 0;\n    return other;\n  }\n\n  readonly [Symbol.toStringTag]: string = 'AsyncDisposableStack';\n\n  get disposed(): boolean {\n    return this.isDisposed;\n  }\n}\n"]}