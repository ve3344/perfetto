{"version":3,"file":"store_unittest.js","sourceRoot":"","sources":["../../../src/base/store_unittest.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2023 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Draft} from 'immer';\nimport {createStore} from './store';\nimport {exists} from './utils';\n\ninterface Bar {\n  value: number;\n}\n\ninterface Foo {\n  counter: number;\n  nested: Bar;\n}\n\nfunction migrateFoo(init: unknown): Foo {\n  const migrated: Foo = {\n    counter: 123,\n    nested: {\n      value: 456,\n    },\n  };\n  if (exists(init) && typeof init === 'object') {\n    if ('counter' in init && typeof init.counter === 'number') {\n      migrated.counter = init.counter;\n    }\n    if ('nested' in init && typeof init.nested === 'object' && init.nested) {\n      if ('value' in init.nested && typeof init.nested.value === 'number') {\n        migrated.nested.value = init.nested.value;\n      }\n    }\n  }\n\n  console.log('migrating', init);\n\n  return migrated;\n}\n\ninterface State {\n  foo: Foo;\n}\n\nconst initialState: State = {\n  foo: {\n    counter: 0,\n    nested: {\n      value: 42,\n    },\n  },\n};\n\ndescribe('root store', () => {\n  test('edit', () => {\n    const store = createStore(initialState);\n    store.edit((draft) => {\n      draft.foo.counter += 123;\n    });\n\n    expect(store.state).toEqual({\n      foo: {\n        counter: 123,\n        nested: {\n          value: 42,\n        },\n      },\n    });\n  });\n\n  test('state [in]equality', () => {\n    const store = createStore(initialState);\n    store.edit((draft) => {\n      draft.foo.counter = 88;\n    });\n    expect(store.state).not.toBe(initialState);\n    expect(store.state.foo).not.toBe(initialState.foo);\n    expect(store.state.foo.nested).toBe(initialState.foo.nested);\n  });\n\n  it('can take multiple edits at once', () => {\n    const store = createStore(initialState);\n    const callback = jest.fn();\n\n    store.subscribe(callback);\n\n    store.edit([\n      (draft) => {\n        draft.foo.counter += 10;\n      },\n      (draft) => {\n        draft.foo.counter += 10;\n      },\n    ]);\n\n    expect(callback).toHaveBeenCalledTimes(1);\n    expect(callback).toHaveBeenCalledWith(store, initialState);\n    expect(store.state).toEqual({\n      foo: {\n        counter: 20,\n        nested: {\n          value: 42,\n        },\n      },\n    });\n  });\n\n  it('can support a huge number of edits', () => {\n    const store = createStore(initialState);\n    const N = 100_000;\n    const edits = Array(N).fill((draft: Draft<State>) => {\n      draft.foo.counter++;\n    });\n    store.edit(edits);\n    expect(store.state.foo.counter).toEqual(N);\n  });\n\n  it('notifies subscribers', () => {\n    const store = createStore(initialState);\n    const callback = jest.fn();\n\n    store.subscribe(callback);\n\n    store.edit((draft) => {\n      draft.foo.counter += 1;\n    });\n\n    expect(callback).toHaveBeenCalledTimes(1);\n    expect(callback).toHaveBeenCalledWith(store, initialState);\n  });\n\n  it('does not notify unsubscribed subscribers', () => {\n    const store = createStore(initialState);\n    const callback = jest.fn();\n\n    // Subscribe then immediately unsubscribe\n    store.subscribe(callback)[Symbol.dispose]();\n\n    // Make an arbitrary edit\n    store.edit((draft) => {\n      draft.foo.counter += 1;\n    });\n\n    expect(callback).not.toHaveBeenCalled();\n  });\n});\n\ndescribe('sub-store', () => {\n  test('edit', () => {\n    const store = createStore(initialState);\n    const subStore = store.createSubStore<Foo>(['foo'], (x) => x as Foo);\n\n    subStore.edit((draft) => {\n      draft.counter += 1;\n    });\n\n    expect(subStore.state).toEqual({\n      counter: 1,\n      nested: {\n        value: 42,\n      },\n    });\n\n    expect(store.state).toEqual({\n      foo: {\n        counter: 1,\n        nested: {\n          value: 42,\n        },\n      },\n    });\n  });\n\n  test('edit from root store', () => {\n    const store = createStore(initialState);\n    const subStore = store.createSubStore<Foo>(['foo'], (x) => x as Foo);\n\n    store.edit((draft) => {\n      draft.foo.counter += 1;\n    });\n\n    expect(subStore.state).toEqual({\n      counter: 1,\n      nested: {\n        value: 42,\n      },\n    });\n  });\n\n  it('can create more substores and edit', () => {\n    const store = createStore(initialState);\n    const fooState = store.createSubStore<Foo>(['foo'], (x) => x as Foo);\n    const nestedStore = fooState.createSubStore<Bar>(\n      ['nested'],\n      (x) => x as Bar,\n    );\n\n    nestedStore.edit((draft) => {\n      draft.value += 1;\n    });\n\n    expect(nestedStore.state).toEqual({\n      value: 43,\n    });\n  });\n\n  it('notifies subscribers', () => {\n    const store = createStore(initialState);\n    const subStore = store.createSubStore<Foo>(['foo'], (x) => x as Foo);\n    const callback = jest.fn();\n\n    subStore.subscribe(callback);\n\n    subStore.edit((draft) => {\n      draft.counter += 1;\n    });\n\n    expect(callback).toHaveBeenCalledTimes(1);\n    expect(callback).toHaveBeenCalledWith(subStore, initialState.foo);\n  });\n\n  it('does not notify unsubscribed subscribers', () => {\n    const store = createStore(initialState);\n    const subStore = store.createSubStore<Foo>(['foo'], (x) => x as Foo);\n    const callback = jest.fn();\n\n    // Subscribe then immediately unsubscribe\n    subStore.subscribe(callback)[Symbol.dispose]();\n\n    // Make an arbitrary edit\n    subStore.edit((draft) => {\n      draft.counter += 1;\n    });\n\n    expect(callback).not.toHaveBeenCalled();\n  });\n\n  it('handles reading when path doesn\\t exist in root store', () => {\n    const store = createStore(initialState);\n\n    // This target node is missing - baz doesn't exist in State\n    const subStore = store.createSubStore<Foo>(['baz'], (x) => x as Foo);\n    expect(subStore.state).toBe(undefined);\n  });\n\n  it(\"handles edit when path doesn't exist in root store\", () => {\n    const store = createStore(initialState);\n    const value: Foo = {\n      counter: 123,\n      nested: {\n        value: 456,\n      },\n    };\n\n    // This target node is missing - baz doesn't exist in State\n    const subStore = store.createSubStore<Foo>(['baz', 'quux'], () => value);\n\n    // Edits should work just fine, but the root store will not be modified.\n    subStore.edit((draft) => {\n      draft.counter += 1;\n    });\n  });\n\n  it('check subscriber only called once when edits made to undefined root path', () => {\n    const store = createStore(initialState);\n    const value: Foo = {\n      counter: 123,\n      nested: {\n        value: 456,\n      },\n    };\n\n    const callback = jest.fn();\n\n    // This target node is missing - baz doesn't exist in State\n    const subStore = store.createSubStore<Foo>(['baz', 'quux'], () => value);\n    subStore.subscribe(callback);\n\n    // Edits should work just fine, but the root store will not be modified.\n    subStore.edit((draft) => {\n      draft.counter += 1;\n    });\n\n    expect(callback).toHaveBeenCalledTimes(1);\n    expect(callback).toHaveBeenCalledWith(subStore, value);\n  });\n\n  it(\"notifies subscribers even when path doesn't exist in root store\", () => {\n    const store = createStore(initialState);\n    const value: Foo = {\n      counter: 123,\n      nested: {\n        value: 456,\n      },\n    };\n    const subStore = store.createSubStore<Foo>(['baz', 'quux'], () => value);\n\n    const callback = jest.fn();\n    subStore.subscribe(callback);\n\n    subStore.edit((draft) => {\n      draft.counter += 1;\n    });\n\n    expect(callback).toHaveBeenCalledTimes(1);\n    expect(callback).toHaveBeenCalledWith(subStore, value);\n  });\n\n  it('notifies when relevant edits are made from root store', () => {\n    const store = createStore(initialState);\n    const subStore = store.createSubStore<Foo>(['foo'], (x) => x as Foo);\n    const callback = jest.fn();\n\n    // Subscribe on the proxy store\n    subStore.subscribe(callback);\n\n    // Edit the subtree from the root store\n    store.edit((draft) => {\n      draft.foo.counter++;\n    });\n\n    // Expect proxy callback called with correct subtree\n    expect(callback).toHaveBeenCalledTimes(1);\n    expect(callback).toHaveBeenCalledWith(subStore, initialState.foo);\n  });\n\n  it('ignores irrelevant edits from the root store', () => {\n    const store = createStore(initialState);\n    const nestedStore = store.createSubStore<Bar>(\n      ['foo', 'nested'],\n      (x) => x as Bar,\n    );\n    const callback = jest.fn();\n\n    // Subscribe on the proxy store\n    nestedStore.subscribe(callback);\n\n    // Edit an irrelevant subtree on the root store\n    store.edit((draft) => {\n      draft.foo.counter++;\n    });\n\n    // Ensure proxy callback hasn't been called\n    expect(callback).not.toHaveBeenCalled();\n  });\n\n  it('immutable [in]equality works', () => {\n    const store = createStore(initialState);\n    const subStore = store.createSubStore<Foo>(['foo'], migrateFoo);\n    const before = subStore.state;\n\n    subStore.edit((draft) => {\n      draft.counter += 1;\n    });\n\n    const after = subStore.state;\n\n    // something has changed so root should not equal\n    expect(before).not.toBe(after);\n\n    // nested has not changed and so should be the before version.\n    expect(before.nested).toBe(after.nested);\n  });\n\n  // This test depends on the migrate function - if it attempts to preserve\n  // equality then we might have a chance, but our migrate function here does\n  // not, and I'm not sure we can expect people do provide one that does.\n  // TODO(stevegolton): See if we can get this working, regardless of migrate\n  // function implementation.\n  it.skip('unrelated state refs are still equal when modified from root store', () => {\n    const store = createStore(initialState);\n    const subStore = store.createSubStore<Foo>(['foo'], migrateFoo);\n    const before = subStore.state;\n\n    // Check that unrelated state is still the same even though subtree is\n    // modified from the root store\n    store.edit((draft) => {\n      draft.foo.counter = 1234;\n    });\n\n    expect(before.nested).toBe(subStore.state.nested);\n    expect(subStore.state.counter).toBe(1234);\n  });\n\n  it('works when underlying state is undefined', () => {\n    interface RootState {\n      dict: {[key: string]: unknown};\n    }\n    interface ProxyState {\n      bar: string;\n    }\n\n    const store = createStore<RootState>({dict: {}});\n    const migrate = (init: unknown) => (init ?? {bar: 'bar'}) as ProxyState;\n    const subStore = store.createSubStore(['dict', 'foo'], migrate);\n\n    // Check initial migration works, yet underlying store is untouched\n    expect(subStore.state.bar).toBe('bar');\n    expect(store.state.dict['foo']).toBe(undefined);\n\n    // Check updates work\n    subStore.edit((draft) => {\n      draft.bar = 'baz';\n    });\n    expect(subStore.state.bar).toBe('baz');\n    expect((store.state.dict['foo'] as ProxyState).bar).toBe('baz');\n  });\n\n  test('chained substores', () => {\n    interface State {\n      dict: {[key: string]: unknown};\n    }\n\n    interface FooState {\n      bar: {\n        baz: string;\n      };\n    }\n\n    const store = createStore<State>({dict: {}});\n\n    const DEFAULT_FOO_STATE: FooState = {bar: {baz: 'abc'}};\n    const fooStore = store.createSubStore(\n      ['dict', 'foo'],\n      (init) => init ?? DEFAULT_FOO_STATE,\n    );\n\n    const subFooStore = fooStore.createSubStore(\n      ['bar'],\n      (x) => x as FooState['bar'],\n    );\n\n    // Since the entry for 'foo' will be undefined in the dict, we expect the\n    // migrate function on fooStore to return DEFAULT_FOO_STATE, and thus the\n    // state of the subFooStore will be DEFAULT_FOO_STATE.bar.\n    expect(subFooStore.state).toEqual({baz: 'abc'});\n  });\n});\n"]}