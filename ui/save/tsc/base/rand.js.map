{"version":3,"file":"rand.js","sourceRoot":"","sources":["../../../src/base/rand.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAiBjC,gCAIC;AAnBD,oCAAoC;AACpC,MAAM,OAAO,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;AAC5B,MAAM,UAAU,GAAG,KAAK,CAAC;AACzB,MAAM,SAAS,GAAG,CAAC,CAAC;AAOpB,+EAA+E;AAC/E,qBAAqB;AACrB,MAAM,eAAe,GAAc,EAAC,IAAI,EAAE,CAAC,EAAC,CAAC;AAE7C,4EAA4E;AAC5E,SAAgB,UAAU,CAAC,KAAiB;IAC1C,KAAK,GAAG,KAAK,IAAI,eAAe,CAAC;IACjC,KAAK,CAAC,IAAI,GAAG,CAAC,UAAU,GAAG,KAAK,CAAC,IAAI,GAAG,SAAS,CAAC,GAAG,OAAO,CAAC;IAC7D,OAAO,KAAK,CAAC,IAAI,GAAG,OAAO,CAAC;AAC9B,CAAC","sourcesContent":["// Copyright (C) 2024 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// Match C++ minstd_rand0 behaviour.\nconst MODULUS = 2 ** 31 - 1;\nconst MULTIPLIER = 48271;\nconst INCREMENT = 1;\n\n// Allow callers to have a private sequence.\nexport interface RandState {\n  seed: number;\n}\n\n// If callers don't want to bother maintain their own state, use the global one\n// for the whole app.\nconst globalRandState: RandState = {seed: 0};\n\n// Like math.Rand(), but yields a repeateabled sequence (matters for tests).\nexport function pseudoRand(state?: RandState): number {\n  state = state ?? globalRandState;\n  state.seed = (MULTIPLIER * state.seed + INCREMENT) % MODULUS;\n  return state.seed / MODULUS;\n}\n"]}