{"version":3,"file":"json_utils.js","sourceRoot":"","sources":["../../../src/base/json_utils.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAOjC,4DAIC;AATD,oDAAoD;AACpD,8EAA8E;AAC9E,kEAAkE;AAClE,iEAAiE;AACjE,8DAA8D;AAC9D,SAAgB,wBAAwB,CAAC,MAAW;IAClD,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,CACzC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,KAAK,CACrD,CAAC;AACJ,CAAC","sourcesContent":["// Copyright (C) 2023 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// Similar to JSON.stringify() but supports bigints.\n// Bigints are simply serialized to a string, so the original object cannot be\n// recovered with JSON.parse(), as bigints will turn into strings.\n// Useful for e.g. tracing, where string arg values are required.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function stringifyJsonWithBigints(object: any): string {\n  return JSON.stringify(object, (_, value) =>\n    typeof value === 'bigint' ? value.toString() : value,\n  );\n}\n"]}