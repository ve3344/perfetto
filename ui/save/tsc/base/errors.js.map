{"version":3,"file":"errors.js","sourceRoot":"","sources":["../../../src/base/errors.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAsBjC,0CAoBC;AAaD,sEAMC;AA3DD,mCAA+B;AAkB/B,2DAA2D;AAC3D,2EAA2E;AAC3E,SAAgB,eAAe,CAAC,CAA6B;IAC3D,IAAI,IAAA,cAAM,EAAC,CAAC,CAAC,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE,CAAC;QACvC,MAAM,WAAW,GAAG,CAAoB,CAAC;QACzC,IAAI,IAAA,cAAM,EAAC,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC;YAChC,uBAAuB;YACvB,OAAO,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QACrC,CAAC;aAAM,IAAI,IAAA,cAAM,EAAC,WAAW,CAAC,KAAK,CAAC,IAAI,IAAA,cAAM,EAAC,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC;YAC1E,aAAa;YACb,OAAO,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC3C,CAAC;IACH,CAAC;IACD,MAAM,QAAQ,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IAC3B,IAAI,QAAQ,KAAK,iBAAiB,EAAE,CAAC;QACnC,IAAI,CAAC;YACH,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QAC3B,CAAC;QAAC,OAAO,cAAc,EAAE,CAAC;YACxB,wCAAwC;QAC1C,CAAC;IACH,CAAC;IACD,OAAO,QAAQ,CAAC;AAClB,CAAC;AAED,qDAAqD;AACrD,gDAAgD;AAChD,qEAAqE;AACrE,4CAA4C;AAC5C,qLAAqL;AACrL,oKAAoK;AACpK,oEAAoE;AACpE,mEAAmE;AACnE,sEAAsE;AACtE,OAAO;AACP,kCAAkC;AAClC,SAAgB,6BAA6B,CAAI,CAAU,EAAE,MAAS;IACpE,IAAI,eAAe,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAE,CAAC;QAChD,OAAO,MAAM,CAAC;IAChB,CAAC;SAAM,CAAC;QACN,MAAM,CAAC,CAAC;IACV,CAAC;AACH,CAAC","sourcesContent":["// Copyright (C) 2022 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {exists} from './utils';\n\n// Errors in JavaScript are (sadly) extremely free form. Three common\n// cases are:\n// - the error is a string\n// - the error object itself has a 'message' field (normally because\n//   its an instance of Error or a subclass of Error).\n// - the outer object wraps an error under the 'error' key. As in:\n//   https://google.github.io/styleguide/jsoncstyleguide.xml#Reserved_Property_Names_in_the_error_object\n// TODO(hjd): Can this last case actually occur for us? Maybe this\n// too closely followed the code from flash station?\ninterface ErrorLikeObject {\n  message?: unknown;\n  error?: {message?: unknown};\n  stack?: unknown;\n  code?: unknown;\n}\n\n// Attempt to coerce an error object into a string message.\n// Sometimes an error message is wrapped in an Error object, sometimes not.\nexport function getErrorMessage(e: unknown | undefined | null) {\n  if (exists(e) && typeof e === 'object') {\n    const errorObject = e as ErrorLikeObject;\n    if (exists(errorObject.message)) {\n      // regular Error Object\n      return String(errorObject.message);\n    } else if (exists(errorObject.error) && exists(errorObject.error.message)) {\n      // API result\n      return String(errorObject.error.message);\n    }\n  }\n  const asString = String(e);\n  if (asString === '[object Object]') {\n    try {\n      return JSON.stringify(e);\n    } catch (stringifyError) {\n      // ignore failures and just fall through\n    }\n  }\n  return asString;\n}\n\n// Occasionally operations using the cache API throw:\n// 'UnknownError: Unexpected internal error. {}'\n// It's not clear under which circumstances this can occur. A dive of\n// the Chromium code didn't shed much light:\n// https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/modules/cache_storage/cache_storage_error.cc;l=26;drc=4cfe86482b000e848009077783ba35f83f3c3cfe\n// https://source.chromium.org/chromium/chromium/src/+/main:content/browser/cache_storage/cache_storage_cache.cc;l=1686;drc=ab68c05beb790d04d1cb7fd8faa0a197fb40d399\n// Given the error is not actionable at present and caching is 'best\n// effort' in any case ignore this error. We will want to throw for\n// errors in general though so as not to hide errors we actually could\n// fix.\n// See b/227785665 for an example.\nexport function ignoreCacheUnactionableErrors<T>(e: unknown, result: T): T {\n  if (getErrorMessage(e).includes('UnknownError')) {\n    return result;\n  } else {\n    throw e;\n  }\n}\n"]}