{"version":3,"file":"timestamp_format.js","sourceRoot":"","sources":["../../../src/core/timestamp_format.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAUjC,0CAYC;AAED,gDAGC;AAOD,8CAYC;AAED,oDAGC;AAjDD,uDAAiD;AACjD,iDAAsE;AAEtE,IAAI,qBAAkD,CAAC;AAEvD,MAAM,oBAAoB,GAAG,iBAAiB,CAAC;AAC/C,MAAM,wBAAwB,GAAG,0BAAe,CAAC,QAAQ,CAAC;AAE1D,SAAgB,eAAe;IAC7B,IAAI,qBAAqB,KAAK,SAAS,EAAE,CAAC;QACxC,OAAO,qBAAqB,CAAC;IAC/B,CAAC;SAAM,CAAC;QACN,MAAM,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC;QAChE,IAAI,YAAY,IAAI,IAAA,0BAAW,EAAC,0BAAe,EAAE,YAAY,CAAC,EAAE,CAAC;YAC/D,qBAAqB,GAAG,YAAY,CAAC;QACvC,CAAC;aAAM,CAAC;YACN,qBAAqB,GAAG,wBAAwB,CAAC;QACnD,CAAC;QACD,OAAO,qBAAqB,CAAC;IAC/B,CAAC;AACH,CAAC;AAED,SAAgB,kBAAkB,CAAC,MAAuB;IACxD,qBAAqB,GAAG,MAAM,CAAC;IAC/B,YAAY,CAAC,OAAO,CAAC,oBAAoB,EAAE,MAAM,CAAC,CAAC;AACrD,CAAC;AAED,IAAI,oBAAmD,CAAC;AAExD,MAAM,mBAAmB,GAAG,gBAAgB,CAAC;AAC7C,MAAM,uBAAuB,GAAG,4BAAiB,CAAC,IAAI,CAAC;AAEvD,SAAgB,iBAAiB;IAC/B,IAAI,oBAAoB,KAAK,SAAS,EAAE,CAAC;QACvC,OAAO,oBAAoB,CAAC;IAC9B,CAAC;SAAM,CAAC;QACN,MAAM,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;QAC/D,IAAI,YAAY,IAAI,IAAA,0BAAW,EAAC,4BAAiB,EAAE,YAAY,CAAC,EAAE,CAAC;YACjE,oBAAoB,GAAG,YAAY,CAAC;QACtC,CAAC;aAAM,CAAC;YACN,oBAAoB,GAAG,uBAAuB,CAAC;QACjD,CAAC;QACD,OAAO,oBAAoB,CAAC;IAC9B,CAAC;AACH,CAAC;AAED,SAAgB,oBAAoB,CAAC,MAAyB;IAC5D,oBAAoB,GAAG,MAAM,CAAC;IAC9B,YAAY,CAAC,OAAO,CAAC,mBAAmB,EAAE,MAAM,CAAC,CAAC;AACpD,CAAC","sourcesContent":["// Copyright (C) 2023 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {isEnumValue} from '../base/object_utils';\nimport {DurationPrecision, TimestampFormat} from '../public/timeline';\n\nlet timestampFormatCached: TimestampFormat | undefined;\n\nconst TIMESTAMP_FORMAT_KEY = 'timestampFormat';\nconst DEFAULT_TIMESTAMP_FORMAT = TimestampFormat.Timecode;\n\nexport function timestampFormat(): TimestampFormat {\n  if (timestampFormatCached !== undefined) {\n    return timestampFormatCached;\n  } else {\n    const storedFormat = localStorage.getItem(TIMESTAMP_FORMAT_KEY);\n    if (storedFormat && isEnumValue(TimestampFormat, storedFormat)) {\n      timestampFormatCached = storedFormat;\n    } else {\n      timestampFormatCached = DEFAULT_TIMESTAMP_FORMAT;\n    }\n    return timestampFormatCached;\n  }\n}\n\nexport function setTimestampFormat(format: TimestampFormat) {\n  timestampFormatCached = format;\n  localStorage.setItem(TIMESTAMP_FORMAT_KEY, format);\n}\n\nlet durationFormatCached: DurationPrecision | undefined;\n\nconst DURATION_FORMAT_KEY = 'durationFormat';\nconst DEFAULT_DURATION_FORMAT = DurationPrecision.Full;\n\nexport function durationPrecision(): DurationPrecision {\n  if (durationFormatCached !== undefined) {\n    return durationFormatCached;\n  } else {\n    const storedFormat = localStorage.getItem(DURATION_FORMAT_KEY);\n    if (storedFormat && isEnumValue(DurationPrecision, storedFormat)) {\n      durationFormatCached = storedFormat;\n    } else {\n      durationFormatCached = DEFAULT_DURATION_FORMAT;\n    }\n    return durationFormatCached;\n  }\n}\n\nexport function setDurationPrecision(format: DurationPrecision) {\n  durationFormatCached = format;\n  localStorage.setItem(DURATION_FORMAT_KEY, format);\n}\n"]}