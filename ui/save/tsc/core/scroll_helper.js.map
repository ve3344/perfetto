{"version":3,"file":"scroll_helper.js","sourceRoot":"","sources":["../../../src/core/scroll_helper.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2024 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {HighPrecisionTimeSpan} from '../base/high_precision_time_span';\nimport {time} from '../base/time';\nimport {ScrollToArgs} from '../public/scroll_helper';\nimport {TraceInfo} from '../public/trace_info';\nimport {Workspace} from '../public/workspace';\nimport {raf} from './raf_scheduler';\nimport {TimelineImpl} from './timeline';\nimport {TrackManagerImpl} from './track_manager';\n\n// A helper class to help jumping to tracks and time ranges.\n// This class must NOT alter in any way the selection status. That\n// responsibility belongs to SelectionManager (which uses this).\nexport class ScrollHelper {\n  constructor(\n    private traceInfo: TraceInfo,\n    private timeline: TimelineImpl,\n    private workspace: Workspace,\n    private trackManager: TrackManagerImpl,\n  ) {}\n\n  // See comments in ScrollToArgs for the intended semantics.\n  scrollTo(args: ScrollToArgs) {\n    const {time, track} = args;\n    raf.scheduleCanvasRedraw();\n\n    if (time !== undefined) {\n      if (time.end === undefined) {\n        this.timeline.panToTimestamp(time.start);\n      } else if (time.viewPercentage !== undefined) {\n        this.focusHorizontalRangePercentage(\n          time.start,\n          time.end,\n          time.viewPercentage,\n        );\n      } else {\n        this.focusHorizontalRange(time.start, time.end);\n      }\n    }\n\n    if (track !== undefined) {\n      this.verticalScrollToTrack(track.uri, track.expandGroup ?? false);\n    }\n  }\n\n  private focusHorizontalRangePercentage(\n    start: time,\n    end: time,\n    viewPercentage: number,\n  ): void {\n    const aoi = HighPrecisionTimeSpan.fromTime(start, end);\n\n    if (viewPercentage <= 0.0 || viewPercentage > 1.0) {\n      console.warn(\n        'Invalid value for [viewPercentage]. ' +\n          'Value must be between 0.0 (exclusive) and 1.0 (inclusive).',\n      );\n      // Default to 50%.\n      viewPercentage = 0.5;\n    }\n    const paddingPercentage = 1.0 - viewPercentage;\n    const halfPaddingTime = (aoi.duration * paddingPercentage) / 2;\n    this.timeline.updateVisibleTimeHP(aoi.pad(halfPaddingTime));\n  }\n\n  private focusHorizontalRange(start: time, end: time): void {\n    const visible = this.timeline.visibleWindow;\n    const aoi = HighPrecisionTimeSpan.fromTime(start, end);\n    const fillRatio = 5; // Default amount to make the AOI fill the viewport\n    const padRatio = (fillRatio - 1) / 2;\n\n    // If the area of interest already fills more than half the viewport, zoom\n    // out so that the AOI fills 20% of the viewport\n    if (aoi.duration * 2 > visible.duration) {\n      const padded = aoi.pad(aoi.duration * padRatio);\n      this.timeline.updateVisibleTimeHP(padded);\n    } else {\n      // Center visible window on the middle of the AOI, preserving zoom level.\n      const newStart = aoi.midpoint.subNumber(visible.duration / 2);\n\n      // Adjust the new visible window if it intersects with the trace boundaries.\n      // It's needed to make the \"update the zoom level if visible window doesn't\n      // change\" logic reliable.\n      const newVisibleWindow = new HighPrecisionTimeSpan(\n        newStart,\n        visible.duration,\n      ).fitWithin(this.traceInfo.start, this.traceInfo.end);\n\n      // If preserving the zoom doesn't change the visible window, consider this\n      // to be the \"second\" hotkey press, so just make the AOI fill 20% of the\n      // viewport\n      if (newVisibleWindow.equals(visible)) {\n        const padded = aoi.pad(aoi.duration * padRatio);\n        this.timeline.updateVisibleTimeHP(padded);\n      } else {\n        this.timeline.updateVisibleTimeHP(newVisibleWindow);\n      }\n    }\n  }\n\n  private verticalScrollToTrack(trackUri: string, openGroup: boolean) {\n    // Find the actual track node that uses that URI, we need various properties\n    // from it.\n    const trackNode = this.workspace.findTrackByUri(trackUri);\n    if (!trackNode) return;\n\n    // Try finding the track directly.\n    const element = document.getElementById(trackNode.id);\n    if (element) {\n      // block: 'nearest' means that it will only scroll if the track is not\n      // currently in view.\n      element.scrollIntoView({behavior: 'smooth', block: 'nearest'});\n      return;\n    }\n\n    // If we get here, the element for this track was not present in the DOM,\n    // which might be because it's inside a collapsed group.\n    if (openGroup) {\n      // Try to reveal the track node in the workspace by opening up all\n      // ancestor groups, and mark the track URI to be scrolled to in the\n      // future.\n      trackNode.reveal();\n      this.trackManager.scrollToTrackNodeId = trackNode.id;\n    } else {\n      // Find the closest visible ancestor of our target track and scroll to\n      // that instead.\n      const container = trackNode.findClosestVisibleAncestor();\n      document\n        .getElementById(container.id)\n        ?.scrollIntoView({behavior: 'smooth', block: 'nearest'});\n    }\n  }\n}\n"]}