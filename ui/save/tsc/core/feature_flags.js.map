{"version":3,"file":"feature_flags.js","sourceRoot":"","sources":["../../../src/core/feature_flags.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2021 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// This file should not import anything else. Since the flags will be used from\n// ~everywhere and the are \"statically\" initialized (i.e. files construct Flags\n// at import time) if this file starts importing anything we will quickly run\n// into issues with initialization order which will be a pain.\nimport {z} from 'zod';\nimport {Flag, FlagSettings, OverrideState} from '../public/feature_flag';\n\nexport interface FlagStore {\n  load(): object;\n  save(o: object): void;\n}\n\n// Stored state for a number of flags.\ninterface FlagOverrides {\n  [id: string]: OverrideState;\n}\n\nclass Flags {\n  private store: FlagStore;\n  private flags: Map<string, FlagImpl>;\n  private overrides: FlagOverrides;\n\n  constructor(store: FlagStore) {\n    this.store = store;\n    this.flags = new Map();\n    this.overrides = {};\n    this.load();\n  }\n\n  register(settings: FlagSettings): Flag {\n    const id = settings.id;\n    if (this.flags.has(id)) {\n      throw new Error(`Flag with id \"${id}\" is already registered.`);\n    }\n\n    const saved = this.overrides[id];\n    const state = saved === undefined ? OverrideState.DEFAULT : saved;\n    const flag = new FlagImpl(this, state, settings);\n    this.flags.set(id, flag);\n    return flag;\n  }\n\n  allFlags(): Flag[] {\n    const includeDevFlags = ['127.0.0.1', '::1', 'localhost'].includes(\n      window.location.hostname,\n    );\n\n    let flags = [...this.flags.values()];\n    flags = flags.filter((flag) => includeDevFlags || !flag.devOnly);\n    flags.sort((a, b) => a.name.localeCompare(b.name));\n    return flags;\n  }\n\n  resetAll() {\n    for (const flag of this.flags.values()) {\n      flag.state = OverrideState.DEFAULT;\n    }\n    this.save();\n  }\n\n  load(): void {\n    const o = this.store.load();\n\n    // Check if the given object is a valid FlagOverrides.\n    // This is necessary since someone could modify the persisted flags\n    // behind our backs.\n    const flagsSchema = z.record(\n      z.string(),\n      z.union([z.literal(OverrideState.TRUE), z.literal(OverrideState.FALSE)]),\n    );\n    const {success, data} = flagsSchema.safeParse(o);\n    if (success) {\n      this.overrides = data;\n    }\n  }\n\n  save(): void {\n    for (const flag of this.flags.values()) {\n      if (flag.isOverridden()) {\n        this.overrides[flag.id] = flag.state;\n      } else {\n        delete this.overrides[flag.id];\n      }\n    }\n\n    this.store.save(this.overrides);\n  }\n}\n\nclass FlagImpl implements Flag {\n  registry: Flags;\n  state: OverrideState;\n\n  readonly id: string;\n  readonly name: string;\n  readonly description: string;\n  readonly defaultValue: boolean;\n  readonly devOnly: boolean;\n\n  constructor(registry: Flags, state: OverrideState, settings: FlagSettings) {\n    this.registry = registry;\n    this.id = settings.id;\n    this.state = state;\n    this.description = settings.description;\n    this.defaultValue = settings.defaultValue;\n    this.name = settings.name ?? settings.id;\n    this.devOnly = settings.devOnly || false;\n  }\n\n  get(): boolean {\n    switch (this.state) {\n      case OverrideState.TRUE:\n        return true;\n      case OverrideState.FALSE:\n        return false;\n      case OverrideState.DEFAULT:\n      default:\n        return this.defaultValue;\n    }\n  }\n\n  set(value: boolean): void {\n    const next = value ? OverrideState.TRUE : OverrideState.FALSE;\n    if (this.state === next) {\n      return;\n    }\n    this.state = next;\n    this.registry.save();\n  }\n\n  overriddenState(): OverrideState {\n    return this.state;\n  }\n\n  reset() {\n    this.state = OverrideState.DEFAULT;\n    this.registry.save();\n  }\n\n  isOverridden(): boolean {\n    return this.state !== OverrideState.DEFAULT;\n  }\n}\n\nclass LocalStorageStore implements FlagStore {\n  static KEY = 'perfettoFeatureFlags';\n\n  load(): object {\n    const s = localStorage.getItem(LocalStorageStore.KEY);\n    let parsed: object;\n    try {\n      parsed = JSON.parse(s ?? '{}');\n    } catch (e) {\n      return {};\n    }\n    if (typeof parsed !== 'object' || parsed === null) {\n      return {};\n    }\n    return parsed;\n  }\n\n  save(o: object): void {\n    const s = JSON.stringify(o);\n    localStorage.setItem(LocalStorageStore.KEY, s);\n  }\n}\n\nexport const FlagsForTesting = Flags;\nexport const featureFlags = new Flags(new LocalStorageStore());\n"]}