{"version":3,"file":"event_set_nocompile_test.js","sourceRoot":"","sources":["../../../src/core/event_set_nocompile_test.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAcjC,oDAYC;AAED,8DAoBC;AAED,sDAkBC;AAOD,gDA2BC;AApGD,2CAUqB;AAErB,SAAgB,oBAAoB;IAClC,MAAM,EAAE,GAAG;QACT,EAAE,EAAE,cAAE;QACN,GAAG,EAAE,eAAG;KACT,CAAC;IAEF,mBAAmB;IACnB,MAAM,KAAK,GAAqB;QAC9B,EAAE,EAAE,MAAM;KACX,CAAC;IAEF,OAAO,KAAK,CAAC;AACf,CAAC;AAED,SAAgB,yBAAyB;IACvC,MAAM,EAAE,GAAG;QACT,EAAE,EAAE,cAAE;QACN,GAAG,EAAE,eAAG;QACR,GAAG,EAAE,eAAG;QACR,GAAG,EAAE,gBAAI;QACT,KAAK,EAAE,gBAAI;KACZ,CAAC;IAEF,MAAM,KAAK,GAAqB;QAC9B,EAAE,EAAE,MAAM;QACV,GAAG,EAAE,KAAK;QACV,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,KAAK;QACV,KAAK,EAAE,IAAI;QACX,mBAAmB;QACnB,KAAK,EAAE,EAAE;KACV,CAAC;IAEF,OAAO,KAAK,CAAC;AACf,CAAC;AAED,SAAgB,qBAAqB;IACnC,MAAM,EAAE,GAAG;QACT,EAAE,EAAE,cAAE;QACN,GAAG,EAAE,eAAG;QACR,GAAG,EAAE,eAAG;QACR,GAAG,EAAE,gBAAI;QACT,KAAK,EAAE,gBAAI;KACZ,CAAC;IAEF,MAAM,KAAK,GAAqB;QAC9B,EAAE,EAAE,MAAM;QACV,GAAG,EAAE,KAAK;QACV,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,KAAK;QACV,KAAK,EAAE,IAAI;KACZ,CAAC;IAEF,OAAO,KAAK,CAAC;AACf,CAAC;AAED,MAAM,aAAa,GAAG;IACpB,GAAG,EAAE,eAAG;IACR,IAAI,EAAE,eAAG;CACV,CAAC;AAEK,KAAK,UAAU,kBAAkB,CACtC,KAAqC;IAErC,CAAC;QACC,MAAM,CAAC,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC;YAChC,GAAG,EAAE,eAAG;SACT,CAAC,CAAC;QACH,mBAAmB;QACnB,CAAC,CAAC,MAAM,CAAC;IACX,CAAC;IAED,CAAC;QACC,gBAAgB;QAChB,MAAM,CAAC,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;QACjD,CAAC,CAAC,MAAM,CAAC;IACX,CAAC;IAED,CAAC;QACC,cAAc;QACd,MAAM,CAAC,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC;YAChC,GAAG,EAAE,eAAG;YACR,IAAI,EAAE,eAAG;SACV,CAAC,CAAC;QACH,CAAC,CAAC,MAAM,CAAC;IACX,CAAC;IAED,OAAO,KAAK,CAAC;AACf,CAAC","sourcesContent":["// Copyright (C) 2023 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {\n  Bool,\n  Event,\n  EventSet,\n  Id,\n  KeySet,\n  Null,\n  Num,\n  Str,\n  UntypedEventSet,\n} from './event_set';\n\nexport function eventMustHaveAllKeys(): Event<KeySet> {\n  const ks = {\n    id: Id,\n    foo: Str,\n  };\n\n  // @ts-expect-error\n  const event: Event<typeof ks> = {\n    id: 'myid',\n  };\n\n  return event;\n}\n\nexport function eventMustNotHaveExtraKeys(): Event<KeySet> {\n  const ks = {\n    id: Id,\n    foo: Str,\n    bar: Num,\n    baz: Bool,\n    xyzzy: Null,\n  };\n\n  const event: Event<typeof ks> = {\n    id: 'myid',\n    foo: 'foo',\n    bar: 32,\n    baz: false,\n    xyzzy: null,\n    // @ts-expect-error\n    plugh: 42,\n  };\n\n  return event;\n}\n\nexport function eventsCanBeWellFormed(): Event<KeySet> {\n  const ks = {\n    id: Id,\n    foo: Str,\n    bar: Num,\n    baz: Bool,\n    xyzzy: Null,\n  };\n\n  const event: Event<typeof ks> = {\n    id: 'myid',\n    foo: 'foo',\n    bar: 32,\n    baz: false,\n    xyzzy: null,\n  };\n\n  return event;\n}\n\nconst lettersKeySet = {\n  num: Num,\n  char: Str,\n};\n\nexport async function badMaterialisation(\n  input: EventSet<typeof lettersKeySet>,\n): Promise<UntypedEventSet> {\n  {\n    const a = await input.materialise({\n      baz: Num,\n    });\n    // @ts-expect-error\n    a.events;\n  }\n\n  {\n    // This is fine:\n    const a = await input.materialise(lettersKeySet);\n    a.events;\n  }\n\n  {\n    // So is this:\n    const a = await input.materialise({\n      num: Num,\n      char: Str,\n    });\n    a.events;\n  }\n\n  return input;\n}\n"]}