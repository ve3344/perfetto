{"version":3,"file":"command_manager.js","sourceRoot":"","sources":["../../../src/core/command_manager.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;;AAEjC,yCAAwD;AACxD,+CAA0C;AAE1C,mDAAoC;AAMpC,MAAa,kBAAkB;IACZ,QAAQ,GAAG,IAAI,mBAAQ,CAAU,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAEnE,UAAU,CAAC,SAAiB;QAC1B,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IACtC,CAAC;IAED,UAAU,CAAC,SAAiB;QAC1B,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IACtC,CAAC;IAED,IAAI,QAAQ;QACV,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC;IAC5C,CAAC;IAED,eAAe,CAAC,GAAY;QAC1B,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;IACrC,CAAC;IAED,UAAU,CAAC,EAAU,EAAE,GAAG,IAAe;QACvC,MAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAClC,MAAM,GAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,CAAC;QAClC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,mBAAG,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,CAAC;QACpE,OAAO,GAAG,CAAC;IACb,CAAC;IAED,2EAA2E;IAC3E,uEAAuE;IACvE,eAAe;IACf,mBAAmB,CAAC,UAAkB;QACpC,MAAM,MAAM,GAAG,IAAI,mBAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,EAAC,IAAI,EAAC,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC;QAChE,OAAO,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE;YAC5C,OAAO,EAAC,QAAQ,EAAE,MAAM,CAAC,QAAQ,EAAE,GAAG,MAAM,CAAC,IAAI,EAAC,CAAC;QACrD,CAAC,CAAC,CAAC;IACL,CAAC;CACF;AAnCD,gDAmCC","sourcesContent":["// Copyright (C) 2023 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {FuzzyFinder, FuzzySegment} from '../base/fuzzy';\nimport {Registry} from '../base/registry';\nimport {Command, CommandManager} from '../public/command';\nimport {raf} from './raf_scheduler';\n\nexport interface CommandWithMatchInfo extends Command {\n  segments: FuzzySegment[];\n}\n\nexport class CommandManagerImpl implements CommandManager {\n  private readonly registry = new Registry<Command>((cmd) => cmd.id);\n\n  getCommand(commandId: string): Command {\n    return this.registry.get(commandId);\n  }\n\n  hasCommand(commandId: string): boolean {\n    return this.registry.has(commandId);\n  }\n\n  get commands(): Command[] {\n    return Array.from(this.registry.values());\n  }\n\n  registerCommand(cmd: Command): Disposable {\n    return this.registry.register(cmd);\n  }\n\n  runCommand(id: string, ...args: unknown[]): unknown {\n    const cmd = this.registry.get(id);\n    const res = cmd.callback(...args);\n    Promise.resolve(res).finally(() => raf.scheduleFullRedraw('force'));\n    return res;\n  }\n\n  // Returns a list of commands that match the search term, along with a list\n  // of segments which describe which parts of the command name match and\n  // which don't.\n  fuzzyFilterCommands(searchTerm: string): CommandWithMatchInfo[] {\n    const finder = new FuzzyFinder(this.commands, ({name}) => name);\n    return finder.find(searchTerm).map((result) => {\n      return {segments: result.segments, ...result.item};\n    });\n  }\n}\n"]}