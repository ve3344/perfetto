{"version":3,"file":"router_unittest.js","sourceRoot":"","sources":["../../../src/core/router_unittest.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2018 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {PageManagerImpl} from './page_manager';\nimport {CORE_PLUGIN_ID} from './plugin_manager';\nimport {Router} from './router';\n\nconst mockComponent = {\n  view() {},\n};\n\ndescribe('Router#resolve', () => {\n  beforeEach(() => {\n    window.location.hash = '';\n  });\n\n  const pluginId = CORE_PLUGIN_ID;\n  const traceless = true;\n\n  test('Resolves empty route to default component', () => {\n    const pages = new PageManagerImpl();\n    pages.registerPage({route: '/', page: mockComponent, traceless, pluginId});\n    window.location.hash = '';\n    expect(pages.renderPageForCurrentRoute(undefined).tag).toBe(mockComponent);\n  });\n\n  test('Resolves subpage route to component of main page', () => {\n    const nonDefaultComponent = {view() {}};\n    const pages = new PageManagerImpl();\n    pages.registerPage({route: '/', page: mockComponent, traceless, pluginId});\n    pages.registerPage({\n      route: '/a',\n      page: nonDefaultComponent,\n      traceless,\n      pluginId,\n    });\n    window.location.hash = '#!/a/subpage';\n    expect(pages.renderPageForCurrentRoute(undefined).tag).toBe(\n      nonDefaultComponent,\n    );\n    expect(pages.renderPageForCurrentRoute(undefined).attrs.subpage).toBe(\n      '/subpage',\n    );\n  });\n\n  test('Pass empty subpage if not found in URL', () => {\n    const nonDefaultComponent = {view() {}};\n    const pages = new PageManagerImpl();\n    pages.registerPage({route: '/', page: mockComponent, traceless, pluginId});\n    pages.registerPage({\n      route: '/a',\n      page: nonDefaultComponent,\n      traceless,\n      pluginId,\n    });\n    window.location.hash = '#!/a';\n    expect(pages.renderPageForCurrentRoute(undefined).tag).toBe(\n      nonDefaultComponent,\n    );\n    expect(pages.renderPageForCurrentRoute(undefined).attrs.subpage).toBe('');\n  });\n});\n\ndescribe('Router.parseUrl', () => {\n  // Can parse arguments from the search string.\n  test('Search parsing', () => {\n    const url = 'http://localhost?p=123&s=42&url=a?b?c';\n    const route = Router.parseUrl(url);\n    const args = route.args;\n    expect(args.p).toBe('123');\n    expect(args.s).toBe('42');\n    expect(args.url).toBe('a?b?c');\n    expect(route.fragment).toBe('');\n  });\n\n  // Or from the fragment string.\n  test('Fragment parsing', () => {\n    const url = 'http://localhost/#!/foo?p=123&s=42&url=a?b?c';\n    const route = Router.parseUrl(url);\n    const args = route.args;\n    expect(args.p).toBe('123');\n    expect(args.s).toBe('42');\n    expect(args.url).toBe('a?b?c');\n    expect(route.fragment).toBe('');\n  });\n\n  // Or both in which case fragment overrides the search.\n  test('Fragment parsing', () => {\n    const url =\n      'http://localhost/?p=1&s=2&hideSidebar=true#!/foo?s=3&url=4&hideSidebar=false';\n    const route = Router.parseUrl(url);\n    const args = route.args;\n    expect(args.p).toBe('1');\n    expect(args.s).toBe('3');\n    expect(args.url).toBe('4');\n    expect(args.hideSidebar).toBe(false);\n    expect(route.fragment).toBe('');\n  });\n\n  // + is also space\n  test('plus is space query', () => {\n    const url = 'http://localhost?query=(foo+%2B+bar),';\n    const route = Router.parseUrl(url);\n    const args = route.args;\n    expect(args.query).toBe('(foo + bar),');\n  });\n\n  // + is also space\n  test('plus is space hash', () => {\n    const url = 'http://localhost#!/foo?query=(foo+%2B+bar),';\n    const route = Router.parseUrl(url);\n    const args = route.args;\n    expect(args.query).toBe('(foo + bar),');\n  });\n\n  test('Nested fragment', () => {\n    const url =\n      'http://localhost/?p=1&s=2&hideSidebar=true#!/foo?s=3&url=4&hideSidebar=false#myfragment';\n    const route = Router.parseUrl(url);\n    expect(route.fragment).toBe('myfragment');\n  });\n});\n\ndescribe('Router.parseFragment', () => {\n  test('empty route broken into empty components', () => {\n    const {page, subpage, args} = Router.parseFragment('');\n    expect(page).toBe('');\n    expect(subpage).toBe('');\n    expect(args.mode).toBe(undefined);\n  });\n\n  test('by default args are undefined', () => {\n    // This prevents the url from becoming messy.\n    const {args} = Router.parseFragment('');\n    expect(args).toEqual({});\n  });\n\n  test('invalid route broken into empty components', () => {\n    const {page, subpage} = Router.parseFragment('/bla');\n    expect(page).toBe('');\n    expect(subpage).toBe('');\n  });\n\n  test('simple route has page defined', () => {\n    const {page, subpage} = Router.parseFragment('#!/record');\n    expect(page).toBe('/record');\n    expect(subpage).toBe('');\n  });\n\n  test('simple route has both components defined', () => {\n    const {page, subpage} = Router.parseFragment('#!/record/memory');\n    expect(page).toBe('/record');\n    expect(subpage).toBe('/memory');\n  });\n\n  test('route broken at first slash', () => {\n    const {page, subpage} = Router.parseFragment('#!/record/memory/stuff');\n    expect(page).toBe('/record');\n    expect(subpage).toBe('/memory/stuff');\n  });\n\n  test('parameters separated from route', () => {\n    const {page, subpage, args} = Router.parseFragment(\n      '#!/record/memory?url=http://localhost:1234/aaaa',\n    );\n    expect(page).toBe('/record');\n    expect(subpage).toBe('/memory');\n    expect(args.url).toEqual('http://localhost:1234/aaaa');\n  });\n\n  test('openFromAndroidBugTool can be false', () => {\n    const {args} = Router.parseFragment('#!/?openFromAndroidBugTool=false');\n    expect(args.openFromAndroidBugTool).toEqual(false);\n  });\n\n  test('openFromAndroidBugTool can be true', () => {\n    const {args} = Router.parseFragment('#!/?openFromAndroidBugTool=true');\n    expect(args.openFromAndroidBugTool).toEqual(true);\n  });\n\n  test('bad modes are coerced to default', () => {\n    const {args} = Router.parseFragment('#!/?mode=1234');\n    expect(args.mode).toEqual(undefined);\n  });\n\n  test('bad hideSidebar is coerced to default', () => {\n    const {args} = Router.parseFragment('#!/?hideSidebar=helloworld!');\n    expect(args.hideSidebar).toEqual(undefined);\n  });\n});\n"]}