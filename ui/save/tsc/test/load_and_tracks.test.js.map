{"version":3,"file":"load_and_tracks.test.js","sourceRoot":"","sources":["../../../src/test/load_and_tracks.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2024 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {test, Page} from '@playwright/test';\nimport {PerfettoTestHelper} from './perfetto_ui_test_helper';\n\ntest.describe.configure({mode: 'serial'});\n\nlet pth: PerfettoTestHelper;\nlet page: Page;\n\ntest.beforeAll(async ({browser}, _testInfo) => {\n  page = await browser.newPage();\n  pth = new PerfettoTestHelper(page);\n  await pth.openTraceFile('api34_startup_cold.perfetto-trace');\n});\n\ntest('load trace', async () => {\n  await pth.waitForIdleAndScreenshot('loaded.png');\n});\n\ntest('info and stats', async () => {\n  await pth.navigate('#!/info');\n  await pth.waitForIdleAndScreenshot('into_and_stats.png');\n  await pth.navigate('#!/viewer');\n  await pth.waitForIdleAndScreenshot('back_to_timeline.png');\n});\n\ntest('omnibox search', async () => {\n  await pth.searchSlice('composite 572441');\n  await pth.resetFocus();\n  await page.keyboard.press('f');\n  await pth.waitForPerfettoIdle();\n  await pth.waitForIdleAndScreenshot('search_slice.png');\n\n  // Click on show process details in the details panel.\n  await page.getByText('/system/bin/surfaceflinger [598]').click();\n  await page.getByText('Show process details').click();\n  await pth.waitForIdleAndScreenshot('process_details.png');\n});\n\ntest('mark', async () => {\n  await page.keyboard.press('/');\n  await pth.waitForPerfettoIdle();\n\n  await page.keyboard.type('doFrame');\n  await pth.waitForPerfettoIdle();\n\n  for (let i = 0; i < 4; i++) {\n    await page.keyboard.press('Enter');\n    await pth.waitForPerfettoIdle();\n\n    if (i == 2) {\n      await page.keyboard.press('Shift+M');\n    } else {\n      await page.keyboard.press('m');\n    }\n    await pth.waitForIdleAndScreenshot(`mark_${i}.png`);\n  }\n});\n\ntest('track expand and collapse', async () => {\n  const trackGroup = pth.locateTrackGroup('traced_probes 1054');\n  await trackGroup.scrollIntoViewIfNeeded();\n  await trackGroup.click();\n  await pth.waitForIdleAndScreenshot('traced_probes_expanded.png');\n\n  // Click 5 times in rapid succession.\n  for (let i = 0; i < 5; i++) {\n    await trackGroup.click();\n    await pth.waitForPerfettoIdle(50);\n  }\n  await pth.waitForIdleAndScreenshot('traced_probes_compressed.png');\n});\n\ntest('pin tracks', async () => {\n  const trackGroup = pth.locateTrackGroup('traced 1055');\n  await pth.toggleTrackGroup(trackGroup);\n  let track = pth.locateTrack('traced 1055/mem.rss', trackGroup);\n  await pth.pinTrackUsingShellBtn(track);\n  await pth.waitForPerfettoIdle();\n  await pth.waitForIdleAndScreenshot('one_track_pinned.png');\n\n  track = pth.locateTrack('traced 1055/traced 1055', trackGroup);\n  await pth.pinTrackUsingShellBtn(track);\n  await pth.waitForPerfettoIdle();\n  await pth.waitForIdleAndScreenshot('two_tracks_pinned.png');\n});\n"]}