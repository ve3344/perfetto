{"version":3,"file":"queries.test.js","sourceRoot":"","sources":["../../../src/test/queries.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2024 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {test, Page, expect} from '@playwright/test';\nimport {PerfettoTestHelper} from './perfetto_ui_test_helper';\n\ntest.describe.configure({mode: 'serial'});\n\nlet pth: PerfettoTestHelper;\nlet page: Page;\n\ntest.beforeAll(async ({browser}, _testInfo) => {\n  page = await browser.newPage();\n  pth = new PerfettoTestHelper(page);\n  await pth.openTraceFile('api34_startup_cold.perfetto-trace');\n});\n\ntest('omnibox query', async () => {\n  const omnibox = page.locator('input[ref=omnibox]');\n  await omnibox.focus();\n  await omnibox.fill('foo');\n  await omnibox.selectText();\n  await omnibox.press(':');\n  await pth.waitForPerfettoIdle();\n  await omnibox.fill(\n    'select id, ts, dur, name, track_id from slices limit 100',\n  );\n  await pth.waitForPerfettoIdle();\n  await omnibox.press('Enter');\n\n  await pth.waitForIdleAndScreenshot('query mode.png');\n\n  page.locator('.pf-query-table').getByText('17806091326279').click();\n  await pth.waitForIdleAndScreenshot('row 1 clicked.png');\n\n  page.locator('.pf-query-table').getByText('17806092405136').click();\n  await pth.waitForIdleAndScreenshot('row 2 clicked.png');\n\n  // Clear the omnibox\n  await omnibox.selectText();\n  for (let i = 0; i < 2; i++) {\n    await omnibox.press('Backspace');\n    await pth.waitForPerfettoIdle();\n  }\n  await pth.waitForIdleAndScreenshot('omnibox cleared.png', {\n    clip: {x: 0, y: 0, width: 1920, height: 100},\n  });\n});\n\ntest('query page', async () => {\n  await pth.navigate('#!/query');\n  await pth.waitForPerfettoIdle();\n  const textbox = page.locator('.pf-editor div[role=textbox]');\n  for (let i = 1; i <= 3; i++) {\n    await textbox.focus();\n    await textbox.clear();\n    await textbox.fill(`select id, ts, dur, name from slices limit ${i}`);\n    await textbox.press('ControlOrMeta+Enter');\n    await textbox.blur();\n    await pth.waitForIdleAndScreenshot(`query limit ${i}.png`);\n  }\n\n  // Now test the query history.\n  page.locator('.query-history .history-item').nth(0).click();\n  await pth.waitForPerfettoIdle();\n  expect(await textbox.textContent()).toEqual(\n    'select id, ts, dur, name from slices limit 3',\n  );\n\n  page.locator('.query-history .history-item').nth(2).click();\n  await pth.waitForPerfettoIdle();\n  expect(await textbox.textContent()).toEqual(\n    'select id, ts, dur, name from slices limit 1',\n  );\n\n  // Double click on the 2nd one and expect the query is re-ran.\n  page.locator('.query-history .history-item').nth(1).dblclick();\n  await pth.waitForPerfettoIdle();\n  expect(await page.locator('.pf-query-table tbody tr').count()).toEqual(2);\n});\n"]}