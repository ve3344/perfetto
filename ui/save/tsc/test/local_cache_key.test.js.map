{"version":3,"file":"local_cache_key.test.js","sourceRoot":"","sources":["../../../src/test/local_cache_key.test.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAEjC,2CAA8C;AAC9C,uEAA6D;AAE7D,IAAA,WAAI,EAAC,6CAA6C,EAAE,KAAK,EAAE,EAAC,OAAO,EAAC,EAAE,EAAE;IACtE,MAAM,IAAI,GAAG,MAAM,OAAO,CAAC,OAAO,EAAE,CAAC;IACrC,MAAM,GAAG,GAAG,IAAI,4CAAkB,CAAC,IAAI,CAAC,CAAC;IAEzC,oBAAoB;IACpB,MAAM,GAAG,CAAC,QAAQ,CAChB,0EAA0E,CAC3E,CAAC;IACF,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,8BAA8B,CAAE,CAAC,CAAC,CAAC,CAAC;IACvE,MAAM,GAAG,CAAC,wBAAwB,CAAC,aAAa,CAAC,CAAC;IAElD,qBAAqB;IACrB,MAAM,GAAG,CAAC,QAAQ,CAChB,mEAAmE,CACpE,CAAC;IACF,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,8BAA8B,CAAE,CAAC,CAAC,CAAC,CAAC;IACvE,IAAA,aAAM,EAAC,SAAS,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IACzC,MAAM,GAAG,CAAC,wBAAwB,CAAC,aAAa,CAAC,CAAC;IAElD,wEAAwE;IACxE,MAAM,GAAG,CAAC,QAAQ,CAAC,4BAA4B,GAAG,SAAS,CAAC,CAAC;IAC7D,MAAM,GAAG,CAAC,wBAAwB,CAAC,yBAAyB,CAAC,CAAC;IAE9D,MAAM,IAAI,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC,KAAK,EAAE,CAAC;IACvD,MAAM,GAAG,CAAC,mBAAmB,EAAE,CAAC;IAChC,MAAM,GAAG,CAAC,wBAAwB,CAAC,qBAAqB,CAAC,CAAC;AAC5D,CAAC,CAAC,CAAC","sourcesContent":["// Copyright (C) 2024 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {test, expect} from '@playwright/test';\nimport {PerfettoTestHelper} from './perfetto_ui_test_helper';\n\ntest('multiple traces via url and local_cache_key', async ({browser}) => {\n  const page = await browser.newPage();\n  const pth = new PerfettoTestHelper(page);\n\n  // Open first trace.\n  await pth.navigate(\n    '#!/?url=http://127.0.0.1:10000/test/data/perf_sample_annotations.pftrace',\n  );\n  const cacheKey1 = page.url().match(/local_cache_key=([a-z0-9-]+)/)![1];\n  await pth.waitForIdleAndScreenshot('trace_1.png');\n\n  // Open second trace.\n  await pth.navigate(\n    '#!/?url=http://127.0.0.1:10000/test/data/atrace_compressed.ctrace',\n  );\n  const cacheKey2 = page.url().match(/local_cache_key=([a-z0-9-]+)/)![1];\n  expect(cacheKey1).not.toEqual(cacheKey2);\n  await pth.waitForIdleAndScreenshot('trace_2.png');\n\n  // Navigate back to the first trace. A confirmation dialog will be shown\n  await pth.navigate('#!/viewer?local_cache_key=' + cacheKey1);\n  await pth.waitForIdleAndScreenshot('confirmation_dialog.png');\n\n  await page.locator('button.modal-btn-primary').click();\n  await pth.waitForPerfettoIdle();\n  await pth.waitForIdleAndScreenshot('back_to_trace_1.png');\n});\n"]}