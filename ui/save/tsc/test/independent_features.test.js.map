{"version":3,"file":"independent_features.test.js","sourceRoot":"","sources":["../../../src/test/independent_features.test.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAEjC,2CAAsC;AACtC,uEAA6D;AAE7D,WAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAC,IAAI,EAAE,UAAU,EAAC,CAAC,CAAC;AAE5C,4EAA4E;AAC5E,qCAAqC;AACrC,IAAA,WAAI,EAAC,iBAAiB,EAAE,KAAK,EAAE,EAAC,OAAO,EAAC,EAAE,EAAE;IAC1C,MAAM,IAAI,GAAG,MAAM,OAAO,CAAC,OAAO,EAAE,CAAC;IACrC,MAAM,GAAG,GAAG,IAAI,4CAAkB,CAAC,IAAI,CAAC,CAAC;IACzC,MAAM,GAAG,CAAC,aAAa,CAAC,mCAAmC,CAAC,CAAC;IAC7D,MAAM,UAAU,GAAG,GAAG,CAAC,gBAAgB,CACrC,yDAAyD,CAC1D,CAAC;IACF,MAAM,UAAU,CAAC,sBAAsB,EAAE,CAAC;IAC1C,MAAM,GAAG,CAAC,wBAAwB,CAAC,gCAAgC,CAAC,CAAC;IAErE,MAAM,GAAG,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;IACvC,MAAM,GAAG,CAAC,wBAAwB,CAAC,yCAAyC,CAAC,CAAC;AAChF,CAAC,CAAC,CAAC;AAEH,IAAA,WAAI,EAAC,0BAA0B,EAAE,KAAK,EAAE,EAAC,OAAO,EAAC,EAAE,EAAE;IACnD,MAAM,IAAI,GAAG,MAAM,OAAO,CAAC,OAAO,EAAE,CAAC;IACrC,MAAM,GAAG,GAAG,IAAI,4CAAkB,CAAC,IAAI,CAAC,CAAC;IACzC,MAAM,GAAG,CAAC,aAAa,CAAC,mBAAmB,CAAC,CAAC;IAC7C,MAAM,GAAG,CAAC,wBAAwB,CAAC,gBAAgB,EAAE;QACnD,IAAI,EAAE,EAAC,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAC;KAC/C,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright (C) 2024 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {test} from '@playwright/test';\nimport {PerfettoTestHelper} from './perfetto_ui_test_helper';\n\ntest.describe.configure({mode: 'parallel'});\n\n// Test that we show a (debuggable) chip next to tracks for debuggable apps.\n// Regression test for aosp/3106008 .\ntest('debuggable chip', async ({browser}) => {\n  const page = await browser.newPage();\n  const pth = new PerfettoTestHelper(page);\n  await pth.openTraceFile('api32_startup_warm.perfetto-trace');\n  const trackGroup = pth.locateTrackGroup(\n    'androidx.benchmark.integration.macrobenchmark.test 7527',\n  );\n  await trackGroup.scrollIntoViewIfNeeded();\n  await pth.waitForIdleAndScreenshot('track_with_debuggable_chip.png');\n\n  await pth.toggleTrackGroup(trackGroup);\n  await pth.waitForIdleAndScreenshot('track_with_debuggable_chip_expanded.png');\n});\n\ntest('trace error notification', async ({browser}) => {\n  const page = await browser.newPage();\n  const pth = new PerfettoTestHelper(page);\n  await pth.openTraceFile('clusterfuzz_14753');\n  await pth.waitForIdleAndScreenshot('error-icon.png', {\n    clip: {x: 1800, y: 0, width: 150, height: 150},\n  });\n});\n"]}