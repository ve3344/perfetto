{"version":3,"file":"perfetto_ui_test_helper.js","sourceRoot":"","sources":["../../../src/test/perfetto_ui_test_helper.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2021 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {\n  expect,\n  Locator,\n  Page,\n  PageAssertionsToHaveScreenshotOptions,\n} from '@playwright/test';\nimport fs from 'fs';\nimport path from 'path';\nimport {IdleDetectorWindow} from '../frontend/idle_detector_interface';\nimport {assertExists} from '../base/logging';\nimport {Size2D} from '../base/geom';\n\nexport class PerfettoTestHelper {\n  private cachedSidebarSize?: Size2D;\n\n  constructor(readonly page: Page) {}\n\n  resetFocus(): Promise<void> {\n    return this.page.click('.sidebar img.brand');\n  }\n\n  async sidebarSize(): Promise<Size2D> {\n    if (this.cachedSidebarSize === undefined) {\n      const size = await this.page.locator('main > .sidebar').boundingBox();\n      this.cachedSidebarSize = assertExists(size);\n    }\n    return this.cachedSidebarSize;\n  }\n\n  async navigate(fragment: string): Promise<void> {\n    await this.page.goto('/?testing=1' + fragment);\n    await this.waitForPerfettoIdle();\n    await this.page.click('body');\n  }\n\n  async openTraceFile(traceName: string, args?: {}): Promise<void> {\n    args = {testing: '1', ...args};\n    const qs = Object.entries(args ?? {})\n      .map(([k, v]) => `${k}=${v}`)\n      .join('&');\n    await this.page.goto('/?' + qs);\n    const file = await this.page.waitForSelector('input.trace_file', {\n      state: 'attached',\n    });\n    await this.page.evaluate(() =>\n      localStorage.setItem('dismissedPanningHint', 'true'),\n    );\n    const tracePath = this.getTestTracePath(traceName);\n    assertExists(file).setInputFiles(tracePath);\n    await this.waitForPerfettoIdle();\n    await this.page.mouse.move(0, 0);\n  }\n\n  waitForPerfettoIdle(idleHysteresisMs?: number): Promise<void> {\n    return this.page.evaluate(\n      async (ms) =>\n        (window as {} as IdleDetectorWindow).waitForPerfettoIdle(ms),\n      idleHysteresisMs,\n    );\n  }\n\n  async waitForIdleAndScreenshot(\n    screenshotName: string,\n    opts?: PageAssertionsToHaveScreenshotOptions,\n  ) {\n    await this.page.mouse.move(0, 0); // Move mouse out of the way.\n    await this.waitForPerfettoIdle();\n    await expect.soft(this.page).toHaveScreenshot(screenshotName, opts);\n  }\n\n  locateTrackGroup(name: string): Locator {\n    return this.page\n      .locator('.pf-panel-group')\n      .filter({has: this.page.locator(`h1[ref=\"${name}\"]`)});\n  }\n\n  async toggleTrackGroup(locator: Locator) {\n    await locator.locator('.pf-track-title').first().click();\n    await this.waitForPerfettoIdle();\n  }\n\n  locateTrack(name: string, trackGroup?: Locator): Locator {\n    return (trackGroup ?? this.page)\n      .locator('.pf-track')\n      .filter({has: this.page.locator(`h1[ref=\"${name}\"]`)});\n  }\n\n  pinTrackUsingShellBtn(track: Locator) {\n    track.locator('button[title=\"Pin to top\"]').click({force: true});\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  async runCommand(cmdId: string, ...args: any[]) {\n    await this.page.evaluate(\n      (arg) => self.app.commands.runCommand(arg.cmdId, ...arg.args),\n      {cmdId, args},\n    );\n  }\n\n  async searchSlice(name: string) {\n    const omnibox = this.page.locator('input[ref=omnibox]');\n    await omnibox.focus();\n    await omnibox.fill(name);\n    await this.waitForPerfettoIdle();\n    await omnibox.press('Enter');\n    await this.waitForPerfettoIdle();\n  }\n\n  getTestTracePath(fname: string): string {\n    const parts = ['test', 'data', fname];\n    if (process.cwd().endsWith('/ui')) {\n      parts.unshift('..');\n    }\n    const fPath = path.join(...parts);\n    if (!fs.existsSync(fPath)) {\n      throw new Error(`Could not locate file ${fPath}, cwd=${process.cwd()}`);\n    }\n    return fPath;\n  }\n}\n"]}