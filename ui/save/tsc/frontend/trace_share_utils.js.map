{"version":3,"file":"trace_share_utils.js","sourceRoot":"","sources":["../../../src/frontend/trace_share_utils.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAYjC,kCAEC;AAED,gCAqCC;;AAnDD,8DAAwB;AAExB,2CAA4C;AAC5C,4CAA2C;AAC3C,uCAAkC;AAClC,+CAAyC;AAGzC,4DAAsD;AAEtD,SAAgB,WAAW,CAAC,KAAY;IACtC,OAAO,iBAAO,CAAC,cAAc,IAAI,KAAK,CAAC,SAAS,CAAC,YAAY,CAAC;AAChE,CAAC;AAEM,KAAK,UAAU,UAAU,CAAC,KAAgB;IAC/C,MAAM,WAAW,GAAG,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC;IAC3C,MAAM,QAAQ,GAAI,WAA8B,CAAC,GAAG,IAAI,EAAE,CAAC;IAE3D,4EAA4E;IAC5E,4DAA4D;IAC5D,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC;QACxB,MAAM,GAAG,GAAG;YACV,IAAA,iBAAC,EACC,GAAG,EACH,+DAA+D;gBAC7D,uCAAuC,CAC1C;SACF,CAAC;QACF,IAAI,QAAQ,EAAE,CAAC;YACb,GAAG,CAAC,IAAI,CAAC,IAAA,iBAAC,EAAC,GAAG,EAAE,uDAAuD,CAAC,CAAC,CAAC;YAC1E,GAAG,CAAC,IAAI,CAAC,IAAA,iBAAC,EAAC,GAAG,EAAE,gDAAgD,CAAC,CAAC,CAAC;YACnE,GAAG,CAAC,IAAI,CAAC,IAAA,iBAAC,EAAC,4BAAY,EAAE,EAAC,GAAG,EAAE,QAAQ,EAAC,CAAC,CAAC,CAAC;QAC7C,CAAC;QAED,IAAA,iBAAS,EAAC;YACR,KAAK,EAAE,6CAA6C;YACpD,OAAO,EAAE,IAAA,iBAAC,EAAC,KAAK,EAAE,GAAG,CAAC;SACvB,CAAC,CAAC;QACH,OAAO;IACT,CAAC;IAED,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;QAAE,OAAO;IAEhC,MAAM,MAAM,GAAG,OAAO,CACpB,4CAA4C;QAC1C,6DAA6D,CAChE,CAAC;IACF,IAAI,MAAM,EAAE,CAAC;QACX,kBAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,eAAe,EAAE,kBAAkB,CAAC,CAAC;QACzE,OAAO,MAAM,IAAA,2BAAe,GAAE,CAAC;IACjC,CAAC;AACH,CAAC","sourcesContent":["// Copyright (C) 2020 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport m from 'mithril';\nimport {TraceUrlSource} from '../core/trace_source';\nimport {createPermalink} from './permalink';\nimport {showModal} from '../widgets/modal';\nimport {globals} from './globals';\nimport {AppImpl} from '../core/app_impl';\nimport {Trace} from '../public/trace';\nimport {TraceImpl} from '../core/trace_impl';\nimport {CopyableLink} from '../widgets/copyable_link';\n\nexport function isShareable(trace: Trace) {\n  return globals.isInternalUser && trace.traceInfo.downloadable;\n}\n\nexport async function shareTrace(trace: TraceImpl) {\n  const traceSource = trace.traceInfo.source;\n  const traceUrl = (traceSource as TraceUrlSource).url ?? '';\n\n  // If the trace is not shareable (has been pushed via postMessage()) but has\n  // a url, create a pseudo-permalink by echoing back the URL.\n  if (!isShareable(trace)) {\n    const msg = [\n      m(\n        'p',\n        'This trace was opened by an external site and as such cannot ' +\n          'be re-shared preserving the UI state.',\n      ),\n    ];\n    if (traceUrl) {\n      msg.push(m('p', 'By using the URL below you can open this trace again.'));\n      msg.push(m('p', 'Clicking will copy the URL into the clipboard.'));\n      msg.push(m(CopyableLink, {url: traceUrl}));\n    }\n\n    showModal({\n      title: 'Cannot create permalink from external trace',\n      content: m('div', msg),\n    });\n    return;\n  }\n\n  if (!isShareable(trace)) return;\n\n  const result = confirm(\n    `Upload UI state and generate a permalink. ` +\n      `The trace will be accessible by anybody with the permalink.`,\n  );\n  if (result) {\n    AppImpl.instance.analytics.logEvent('Trace Actions', 'Create permalink');\n    return await createPermalink();\n  }\n}\n"]}