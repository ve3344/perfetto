{"version":3,"file":"legacy_trace_viewer.js","sourceRoot":"","sources":["../../../src/frontend/legacy_trace_viewer.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AA+CjC,sCAkCC;AAED,sEA0BC;AAqDD,4DAuEC;;AAvOD,8DAAwB;AACxB,+BAA6B;AAC7B,6CAA2C;AAC3C,uDAA8C;AAC9C,4CAA2C;AAC3C,uDAAgD;AAChD,uDAAgD;AAChD,2CAAwC;AAExC,MAAM,aAAa,GAAG,UAAU,CAAC;AAEjC,KAAK,UAAU,QAAQ,CAAC,IAAU;IAChC,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;IAEzC,IAAI,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,CAAC;QACjC,OAAO,IAAI,CAAC;IACd,CAAC;IAED,iEAAiE;IACjE,mDAAmD;IACnD,IAAI,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;QAC9B,MAAM,MAAM,GAAG,MAAM,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;QAClD,IAAI,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE,CAAC;YACnC,OAAO,IAAI,CAAC;QACd,CAAC;IACH,CAAC;IAED,OAAO,KAAK,CAAC;AACf,CAAC;AAED,SAAS,QAAQ,CAAC,IAAU;IAC1B,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QACrC,MAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAChC,MAAM,CAAC,MAAM,GAAG,GAAG,EAAE;YACnB,IAAI,IAAA,uBAAQ,EAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC;gBAC5B,OAAO,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAChC,CAAC;QACH,CAAC,CAAC;QACF,MAAM,CAAC,OAAO,GAAG,CAAC,GAAG,EAAE,EAAE;YACvB,MAAM,CAAC,GAAG,CAAC,CAAC;QACd,CAAC,CAAC;QACF,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CAAC;AACL,CAAC;AAEM,KAAK,UAAU,aAAa,CAAC,IAAU;IAC5C,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;IACzC,IACE,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC;QAC1B,QAAQ,CAAC,QAAQ,CAAC,UAAU,CAAC;QAC7B,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC;QACzB,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,EAC1B,CAAC;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,IAAI,MAAM,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC;QACzB,OAAO,IAAI,CAAC;IACd,CAAC;IAED,mEAAmE;IACnE,sEAAsE;IACtE,sEAAsE;IACtE,2CAA2C;IAC3C,IAAI,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC;QAChC,MAAM,MAAM,GAAG,MAAM,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;QAClD,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACjC,IAAI,YAAY,GAAG,CAAC,CAAC;QACrB,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE,CAAC;YACzB,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC;gBACzB,YAAY,EAAE,CAAC;YACjB,CAAC;QACH,CAAC;QACD,IAAI,YAAY,GAAG,CAAC,EAAE,CAAC;YACrB,OAAO,IAAI,CAAC;QACd,CAAC;IACH,CAAC;IAED,OAAO,KAAK,CAAC;AACf,CAAC;AAEM,KAAK,UAAU,6BAA6B,CAAC,IAAU;IAC5D,MAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;IAChC,MAAM,CAAC,MAAM,GAAG,GAAG,EAAE;QACnB,IAAI,MAAM,CAAC,MAAM,YAAY,WAAW,EAAE,CAAC;YACzC,OAAO,+BAA+B,CACpC,IAAI,CAAC,IAAI,EACT,MAAM,CAAC,MAAM,EACb,MAAM,CAAC,MAAM,CAAC,UAAU,CACzB,CAAC;QACJ,CAAC;aAAM,CAAC;YACN,MAAM,GAAG,GAAG,MAAM,CAAC,MAAgB,CAAC;YACpC,OAAO,+BAA+B,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;QACrE,CAAC;IACH,CAAC,CAAC;IACF,MAAM,CAAC,OAAO,GAAG,CAAC,GAAG,EAAE,EAAE;QACvB,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACrB,CAAC,CAAC;IACF,IACE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;QACzB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;QAC1B,CAAC,MAAM,QAAQ,CAAC,IAAI,CAAC,CAAC,EACtB,CAAC;QACD,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;SAAM,CAAC;QACN,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC;AACH,CAAC;AAED,SAAS,+BAA+B,CACtC,IAAY,EACZ,IAA0B,EAC1B,IAAY;IAEZ,IAAI,IAAI,YAAY,WAAW,EAAE,CAAC;QAChC,IAAA,oBAAU,EAAC,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC;QACpC,IAAI,IAAI,KAAK,IAAI,CAAC,UAAU,EAAE,CAAC;YAC7B,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;QAC7B,CAAC;QAED,wBAAwB;QACxB,MAAM,MAAM,GAAG,IAAA,yBAAU,EAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;QAC9C,IAAI,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE,CAAC;YACnC,MAAM,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,GAAG,aAAa,CAAC,MAAM,CAAC;YACpE,IAAI,GAAG,IAAA,cAAO,EAAC,IAAI,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,EAAC,EAAE,EAAE,QAAQ,EAAC,CAAC,CAAC;QACrE,CAAC;IACH,CAAC;IAED,4EAA4E;IAC5E,6DAA6D;IAC7D,MAAM,WAAW,GAAG,IAAA,iBAAQ,EAAC,mCAAmC,CAAC,CAAC;IAClE,MAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACxC,IAAI,MAAM,EAAE,CAAC;QACX,oBAAoB;QACpB,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,CAAQ,EAAE,EAAE;YAC3C,MAAM,GAAG,GAAG,CAAC,CAAC,MAAkB,CAAC;YACjC,MAAM,GAAG,GAAG,GAAG,CAAC,aAAa,CAAC,kBAAkB,CAAmB,CAAC;YACpE,GAAG,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;QACH,OAAO;IACT,CAAC;IAED,0BAA0B;IAC1B,IAAA,iBAAS,EAAC;QACR,KAAK,EAAE,gDAAgD;QACvD,OAAO,EAAE,IAAA,iBAAC,EACR,KAAK,EACL,IAAA,iBAAC,EAAC,KAAK,EAAE,6DAA6D,CAAC,EACvE,IAAA,iBAAC,EAAC,KAAK,EAAE,8CAA8C,CAAC,CACzD;QACD,OAAO,EAAE;YACP;gBACE,IAAI,EAAE,gBAAgB;gBACtB,OAAO,EAAE,IAAI;gBACb,MAAM,EAAE,GAAG,EAAE,CAAC,+BAA+B,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;aAChE;SACF;KACF,CAAC,CAAC;AACL,CAAC;AAEM,KAAK,UAAU,wBAAwB,CAAC,KAAW;IACxD,2EAA2E;IAC3E,IAAI,KAAK,CAAC,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,EAAE,EAAE,CAAC;QAClC,OAAO,MAAM,IAAA,+BAAa,EAAC,KAAK,EAAE,+BAA+B,CAAC,CAAC;IACrE,CAAC;IAED,+DAA+D;IAC/D,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;IAEpD,0EAA0E;IAC1E,qDAAqD;IACrD,IAAI,WAAsC,CAAC;IAC3C,MAAM,cAAc,GAAG,CAAC,CAAgB,EAAE,EAAE,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;IAE/D,MAAM,IAAA,iBAAS,EAAC;QACd,KAAK,EAAE,uCAAuC;QAC9C,OAAO,EAAE,IAAA,iBAAC,EACR,KAAK,EACL,IAAA,iBAAC,EACC,GAAG,EACH,iBAAiB,IAAI,kCAAkC,GAAG,WAAW,CACtE,EACD,IAAA,iBAAC,EACC,GAAG,EACH,+BAA+B,EAC/B,IAAA,iBAAC,EACC,GAAG,EACH;YACE,IAAI,EAAE,8CAA8C;YACpD,MAAM,EAAE,QAAQ;SACjB,EACD,yBAAyB,CAC1B,EACD,GAAG,CACJ,CACF;QACD,OAAO,EAAE;YACP;gBACE,IAAI,EAAE,mCAAmC;gBACzC,MAAM,EAAE,GAAG,EAAE,CACX,cAAc,CAAC,IAAA,+BAAa,EAAC,KAAK,EAAE,+BAA+B,CAAC,CAAC;aACxE;YACD;gBACE,IAAI,EAAE,yBAAyB;gBAC/B,MAAM,EAAE,GAAG,EAAE,CACX,cAAc,CACZ,IAAA,+BAAa,EACX,KAAK,EACL,+BAA+B;gBAC/B,aAAa,CAAC,OAAO,CACtB,CACF;aACJ;YACD;gBACE,IAAI,EAAE,mBAAmB;gBACzB,OAAO,EAAE,IAAI;gBACb,MAAM,EAAE,GAAG,EAAE,CACX,cAAc,CACZ,IAAA,+BAAa,EACX,KAAK,EACL,+BAA+B;gBAC/B,aAAa,CAAC,KAAK,CACpB,CACF;aACJ;SACF;KACF,CAAC,CAAC;IACH,0EAA0E;IAC1E,IAAI,WAAW,KAAK,SAAS,EAAE,CAAC;QAC9B,MAAM,WAAW,CAAC;IACpB,CAAC;AACH,CAAC","sourcesContent":["// Copyright (C) 2018 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport m from 'mithril';\nimport {inflate} from 'pako';\nimport {assertTrue} from '../base/logging';\nimport {isString} from '../base/object_utils';\nimport {showModal} from '../widgets/modal';\nimport {utf8Decode} from '../base/string_utils';\nimport {convertToJson} from './trace_converter';\nimport {assetSrc} from '../base/assets';\n\nconst CTRACE_HEADER = 'TRACE:\\n';\n\nasync function isCtrace(file: File): Promise<boolean> {\n  const fileName = file.name.toLowerCase();\n\n  if (fileName.endsWith('.ctrace')) {\n    return true;\n  }\n\n  // .ctrace files sometimes end with .txt. We can detect these via\n  // the presence of TRACE: near the top of the file.\n  if (fileName.endsWith('.txt')) {\n    const header = await readText(file.slice(0, 128));\n    if (header.includes(CTRACE_HEADER)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction readText(blob: Blob): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = () => {\n      if (isString(reader.result)) {\n        return resolve(reader.result);\n      }\n    };\n    reader.onerror = (err) => {\n      reject(err);\n    };\n    reader.readAsText(blob);\n  });\n}\n\nexport async function isLegacyTrace(file: File): Promise<boolean> {\n  const fileName = file.name.toLowerCase();\n  if (\n    fileName.endsWith('.json') ||\n    fileName.endsWith('.json.gz') ||\n    fileName.endsWith('.zip') ||\n    fileName.endsWith('.html')\n  ) {\n    return true;\n  }\n\n  if (await isCtrace(file)) {\n    return true;\n  }\n\n  // Sometimes systrace formatted traces end with '.trace'. This is a\n  // little generic to assume all such traces are systrace format though\n  // so we read the beginning of the file and check to see if is has the\n  // systrace header (several comment lines):\n  if (fileName.endsWith('.trace')) {\n    const header = await readText(file.slice(0, 512));\n    const lines = header.split('\\n');\n    let commentCount = 0;\n    for (const line of lines) {\n      if (line.startsWith('#')) {\n        commentCount++;\n      }\n    }\n    if (commentCount > 5) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexport async function openFileWithLegacyTraceViewer(file: File) {\n  const reader = new FileReader();\n  reader.onload = () => {\n    if (reader.result instanceof ArrayBuffer) {\n      return openBufferWithLegacyTraceViewer(\n        file.name,\n        reader.result,\n        reader.result.byteLength,\n      );\n    } else {\n      const str = reader.result as string;\n      return openBufferWithLegacyTraceViewer(file.name, str, str.length);\n    }\n  };\n  reader.onerror = (err) => {\n    console.error(err);\n  };\n  if (\n    file.name.endsWith('.gz') ||\n    file.name.endsWith('.zip') ||\n    (await isCtrace(file))\n  ) {\n    reader.readAsArrayBuffer(file);\n  } else {\n    reader.readAsText(file);\n  }\n}\n\nfunction openBufferWithLegacyTraceViewer(\n  name: string,\n  data: ArrayBuffer | string,\n  size: number,\n) {\n  if (data instanceof ArrayBuffer) {\n    assertTrue(size <= data.byteLength);\n    if (size !== data.byteLength) {\n      data = data.slice(0, size);\n    }\n\n    // Handle .ctrace files.\n    const header = utf8Decode(data.slice(0, 128));\n    if (header.includes(CTRACE_HEADER)) {\n      const offset = header.indexOf(CTRACE_HEADER) + CTRACE_HEADER.length;\n      data = inflate(new Uint8Array(data.slice(offset)), {to: 'string'});\n    }\n  }\n\n  // The location.pathname mangling is to make this code work also when hosted\n  // in a non-root sub-directory, for the case of CI artifacts.\n  const catapultUrl = assetSrc('assets/catapult_trace_viewer.html');\n  const newWin = window.open(catapultUrl);\n  if (newWin) {\n    // Popup succeedeed.\n    newWin.addEventListener('load', (e: Event) => {\n      const doc = e.target as Document;\n      const ctl = doc.querySelector('x-profiling-view') as TraceViewerAPI;\n      ctl.setActiveTrace(name, data);\n    });\n    return;\n  }\n\n  // Popup blocker detected.\n  showModal({\n    title: 'Open trace in the legacy Catapult Trace Viewer',\n    content: m(\n      'div',\n      m('div', 'You are seeing this interstitial because popups are blocked'),\n      m('div', 'Enable popups to skip this dialog next time.'),\n    ),\n    buttons: [\n      {\n        text: 'Open legacy UI',\n        primary: true,\n        action: () => openBufferWithLegacyTraceViewer(name, data, size),\n      },\n    ],\n  });\n}\n\nexport async function openInOldUIWithSizeCheck(trace: Blob): Promise<void> {\n  // Perfetto traces smaller than 50mb can be safely opened in the legacy UI.\n  if (trace.size < 1024 * 1024 * 50) {\n    return await convertToJson(trace, openBufferWithLegacyTraceViewer);\n  }\n\n  // Give the user the option to truncate larger perfetto traces.\n  const size = Math.round(trace.size / (1024 * 1024));\n\n  // If the user presses one of the buttons below, remember the promise that\n  // they trigger, so we await for it before returning.\n  let nextPromise: Promise<void> | undefined;\n  const setNextPromise = (p: Promise<void>) => (nextPromise = p);\n\n  await showModal({\n    title: 'Legacy UI may fail to open this trace',\n    content: m(\n      'div',\n      m(\n        'p',\n        `This trace is ${size}mb, opening it in the legacy UI ` + `may fail.`,\n      ),\n      m(\n        'p',\n        'More options can be found at ',\n        m(\n          'a',\n          {\n            href: 'https://goto.google.com/opening-large-traces',\n            target: '_blank',\n          },\n          'go/opening-large-traces',\n        ),\n        '.',\n      ),\n    ),\n    buttons: [\n      {\n        text: 'Open full trace (not recommended)',\n        action: () =>\n          setNextPromise(convertToJson(trace, openBufferWithLegacyTraceViewer)),\n      },\n      {\n        text: 'Open beginning of trace',\n        action: () =>\n          setNextPromise(\n            convertToJson(\n              trace,\n              openBufferWithLegacyTraceViewer,\n              /* truncate*/ 'start',\n            ),\n          ),\n      },\n      {\n        text: 'Open end of trace',\n        primary: true,\n        action: () =>\n          setNextPromise(\n            convertToJson(\n              trace,\n              openBufferWithLegacyTraceViewer,\n              /* truncate*/ 'end',\n            ),\n          ),\n      },\n    ],\n  });\n  // nextPromise is undefined if the user just dimisses the dialog with ESC.\n  if (nextPromise !== undefined) {\n    await nextPromise;\n  }\n}\n\n// TraceViewer method that we wire up to trigger the file load.\ninterface TraceViewerAPI extends Element {\n  setActiveTrace(name: string, data: ArrayBuffer | string): void;\n}\n"]}