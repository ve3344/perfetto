{"version":3,"file":"omnibox.js","sourceRoot":"","sources":["../../../src/frontend/omnibox.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2023 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport m from 'mithril';\nimport {classNames} from '../base/classnames';\nimport {FuzzySegment} from '../base/fuzzy';\nimport {isString} from '../base/object_utils';\nimport {exists} from '../base/utils';\nimport {raf} from '../core/raf_scheduler';\nimport {EmptyState} from '../widgets/empty_state';\nimport {KeycapGlyph} from '../widgets/hotkey_glyphs';\nimport {Popup} from '../widgets/popup';\n\ninterface OmniboxOptionRowAttrs {\n  // Human readable display name for the option.\n  // This can either be a simple string, or a list of fuzzy segments in which\n  // case highlighting will be applied to the matching segments.\n  displayName: FuzzySegment[] | string;\n\n  // Highlight this option.\n  highlighted: boolean;\n\n  // Arbitrary components to put on the right hand side of the option.\n  rightContent?: m.Children;\n\n  // Some tag to place on the right (to the left of the right content).\n  label?: string;\n\n  // Additional attrs forwarded to the underlying element.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [htmlAttrs: string]: any;\n}\n\nclass OmniboxOptionRow implements m.ClassComponent<OmniboxOptionRowAttrs> {\n  private highlightedBefore = false;\n\n  view({attrs}: m.Vnode<OmniboxOptionRowAttrs>): void | m.Children {\n    const {displayName, highlighted, rightContent, label, ...htmlAttrs} = attrs;\n    return m(\n      'li',\n      {\n        class: classNames(highlighted && 'pf-highlighted'),\n        ...htmlAttrs,\n      },\n      m('span.pf-title', this.renderTitle(displayName)),\n      label && m('span.pf-tag', label),\n      rightContent,\n    );\n  }\n\n  private renderTitle(title: FuzzySegment[] | string): m.Children {\n    if (isString(title)) {\n      return title;\n    } else {\n      return title.map(({matching, value}) => {\n        return matching ? m('b', value) : value;\n      });\n    }\n  }\n\n  onupdate({attrs, dom}: m.VnodeDOM<OmniboxOptionRowAttrs, this>) {\n    if (this.highlightedBefore !== attrs.highlighted) {\n      if (attrs.highlighted) {\n        dom.scrollIntoView({block: 'nearest'});\n      }\n      this.highlightedBefore = attrs.highlighted;\n    }\n  }\n}\n\n// Omnibox option.\nexport interface OmniboxOption {\n  // The value to place into the omnibox. This is what's returned in onSubmit.\n  key: string;\n\n  // Display name provided as a string or a list of fuzzy segments to enable\n  // fuzzy match highlighting.\n  displayName: FuzzySegment[] | string;\n\n  // Some tag to place on the right (to the left of the right content).\n  tag?: string;\n\n  // Arbitrary components to put on the right hand side of the option.\n  rightContent?: m.Children;\n}\n\nexport interface OmniboxAttrs {\n  // Current value of the omnibox input.\n  value: string;\n\n  // What to show when value is blank.\n  placeholder?: string;\n\n  // Called when the text changes.\n  onInput?: (value: string, previousValue: string) => void;\n\n  // Class or list of classes to append to the Omnibox element.\n  extraClasses?: string;\n\n  // Called on close.\n  onClose?: () => void;\n\n  // Dropdown items to show. If none are supplied, the omnibox runs in free text\n  // mode, where anyt text can be input. Otherwise, onSubmit will always be\n  // called with one of the options.\n  // Options are provided in groups called categories. If the category has a\n  // name the name will be listed at the top of the group rendered with a little\n  // divider as well.\n  options?: OmniboxOption[];\n\n  // Called when the user expresses the intent to \"execute\" the thing.\n  onSubmit?: (value: string, mod: boolean, shift: boolean) => void;\n\n  // Called when the user hits backspace when the field is empty.\n  onGoBack?: () => void;\n\n  // When true, disable and grey-out the omnibox's input.\n  readonly?: boolean;\n\n  // Ref to use on the input - useful for extracing this element from the DOM.\n  inputRef?: string;\n\n  // Whether to close when the user presses Enter. Default = false.\n  closeOnSubmit?: boolean;\n\n  // Whether to close the omnibox (i.e. call the |onClose| handler) when we\n  // click outside the omnibox or its dropdown. Default = false.\n  closeOnOutsideClick?: boolean;\n\n  // Some content to place into the right hand side of the after the input.\n  rightContent?: m.Children;\n\n  // If we have options, this value indicates the index of the option which\n  // is currently highlighted.\n  selectedOptionIndex?: number;\n\n  // Callback for when the user pressed up/down, expressing a desire to change\n  // the |selectedOptionIndex|.\n  onSelectedOptionChanged?: (index: number) => void;\n}\n\nexport class Omnibox implements m.ClassComponent<OmniboxAttrs> {\n  private popupElement?: HTMLElement;\n  private dom?: Element;\n  private attrs?: OmniboxAttrs;\n\n  view({attrs}: m.Vnode<OmniboxAttrs>): m.Children {\n    const {\n      value,\n      placeholder,\n      extraClasses,\n      onInput = () => {},\n      onSubmit = () => {},\n      onGoBack = () => {},\n      inputRef = 'omnibox',\n      options,\n      closeOnSubmit = false,\n      rightContent,\n      selectedOptionIndex = 0,\n    } = attrs;\n\n    return m(\n      Popup,\n      {\n        onPopupMount: (dom: HTMLElement) => (this.popupElement = dom),\n        onPopupUnMount: (_dom: HTMLElement) => (this.popupElement = undefined),\n        isOpen: exists(options),\n        showArrow: false,\n        matchWidth: true,\n        offset: 2,\n        trigger: m(\n          '.omnibox',\n          {\n            class: extraClasses,\n          },\n          m('input', {\n            ref: inputRef,\n            value,\n            placeholder,\n            oninput: (e: Event) => {\n              onInput((e.target as HTMLInputElement).value, value);\n            },\n            onkeydown: (e: KeyboardEvent) => {\n              if (e.key === 'Backspace' && value === '') {\n                onGoBack();\n              } else if (e.key === 'Escape') {\n                e.preventDefault();\n                this.close(attrs);\n              }\n\n              if (options) {\n                if (e.key === 'ArrowUp') {\n                  e.preventDefault();\n                  this.highlightPreviousOption(attrs);\n                } else if (e.key === 'ArrowDown') {\n                  e.preventDefault();\n                  this.highlightNextOption(attrs);\n                } else if (e.key === 'Enter') {\n                  e.preventDefault();\n\n                  const option = options[selectedOptionIndex];\n                  // Return values from indexing arrays can be undefined.\n                  // We should enable noUncheckedIndexedAccess in\n                  // tsconfig.json.\n                  /* eslint-disable\n                      @typescript-eslint/strict-boolean-expressions */\n                  if (option) {\n                    /* eslint-enable */\n                    closeOnSubmit && this.close(attrs);\n\n                    const mod = e.metaKey || e.ctrlKey;\n                    const shift = e.shiftKey;\n                    onSubmit(option.key, mod, shift);\n                  }\n                }\n              } else {\n                if (e.key === 'Enter') {\n                  e.preventDefault();\n\n                  closeOnSubmit && this.close(attrs);\n\n                  const mod = e.metaKey || e.ctrlKey;\n                  const shift = e.shiftKey;\n                  onSubmit(value, mod, shift);\n                }\n              }\n            },\n          }),\n          rightContent,\n        ),\n      },\n      options && this.renderDropdown(attrs),\n    );\n  }\n\n  private renderDropdown(attrs: OmniboxAttrs): m.Children {\n    const {options} = attrs;\n\n    if (!options) return null;\n\n    if (options.length === 0) {\n      return m(EmptyState, {title: 'No matching options...'});\n    } else {\n      return m(\n        '.pf-omnibox-dropdown',\n        this.renderOptionsContainer(attrs, options),\n        this.renderFooter(),\n      );\n    }\n  }\n\n  private renderFooter() {\n    return m(\n      '.pf-omnibox-dropdown-footer',\n      m(\n        'section',\n        m(KeycapGlyph, {keyValue: 'ArrowUp'}),\n        m(KeycapGlyph, {keyValue: 'ArrowDown'}),\n        'to navigate',\n      ),\n      m('section', m(KeycapGlyph, {keyValue: 'Enter'}), 'to use'),\n      m('section', m(KeycapGlyph, {keyValue: 'Escape'}), 'to dismiss'),\n    );\n  }\n\n  private renderOptionsContainer(\n    attrs: OmniboxAttrs,\n    options: OmniboxOption[],\n  ): m.Children {\n    const {\n      onClose = () => {},\n      onSubmit = () => {},\n      closeOnSubmit = false,\n      selectedOptionIndex,\n    } = attrs;\n\n    const opts = options.map(({displayName, key, rightContent, tag}, index) => {\n      return m(OmniboxOptionRow, {\n        key,\n        label: tag,\n        displayName: displayName,\n        highlighted: index === selectedOptionIndex,\n        onclick: () => {\n          closeOnSubmit && onClose();\n          onSubmit(key, false, false);\n        },\n        rightContent,\n      });\n    });\n\n    return m('ul.pf-omnibox-options-container', opts);\n  }\n\n  oncreate({attrs, dom}: m.VnodeDOM<OmniboxAttrs, this>) {\n    this.attrs = attrs;\n    this.dom = dom;\n    const {closeOnOutsideClick} = attrs;\n    if (closeOnOutsideClick) {\n      document.addEventListener('mousedown', this.onMouseDown);\n    }\n  }\n\n  onupdate({attrs, dom}: m.VnodeDOM<OmniboxAttrs, this>) {\n    this.attrs = attrs;\n    this.dom = dom;\n    const {closeOnOutsideClick} = attrs;\n    if (closeOnOutsideClick) {\n      document.addEventListener('mousedown', this.onMouseDown);\n    } else {\n      document.removeEventListener('mousedown', this.onMouseDown);\n    }\n  }\n\n  onremove(_: m.VnodeDOM<OmniboxAttrs, this>) {\n    this.attrs = undefined;\n    this.dom = undefined;\n    document.removeEventListener('mousedown', this.onMouseDown);\n  }\n\n  // This is defined as an arrow function to have a single handler that can be\n  // added/remove while keeping `this` bound.\n  private onMouseDown = (e: Event) => {\n    // We need to schedule a redraw manually as this event handler was added\n    // manually to the DOM and doesn't use Mithril's auto-redraw system.\n    raf.scheduleFullRedraw('force');\n\n    // Don't close if the click was within ourselves or our popup.\n    if (e.target instanceof Node) {\n      if (this.popupElement && this.popupElement.contains(e.target)) {\n        return;\n      }\n      if (this.dom && this.dom.contains(e.target)) return;\n    }\n    if (this.attrs) {\n      this.close(this.attrs);\n    }\n  };\n\n  private close(attrs: OmniboxAttrs): void {\n    const {onClose = () => {}} = attrs;\n    raf.scheduleFullRedraw();\n    onClose();\n  }\n\n  private highlightPreviousOption(attrs: OmniboxAttrs) {\n    const {selectedOptionIndex = 0, onSelectedOptionChanged = () => {}} = attrs;\n\n    onSelectedOptionChanged(Math.max(0, selectedOptionIndex - 1));\n  }\n\n  private highlightNextOption(attrs: OmniboxAttrs) {\n    const {\n      selectedOptionIndex = 0,\n      onSelectedOptionChanged = () => {},\n      options = [],\n    } = attrs;\n\n    const max = options.length - 1;\n    onSelectedOptionChanged(Math.min(max, selectedOptionIndex + 1));\n  }\n}\n"]}