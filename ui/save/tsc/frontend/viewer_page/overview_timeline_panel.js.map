{"version":3,"file":"overview_timeline_panel.js","sourceRoot":"","sources":["../../../../src/frontend/viewer_page/overview_timeline_panel.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2018 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport m from 'mithril';\nimport {DragGestureHandler} from '../../base/drag_gesture_handler';\nimport {Size2D} from '../../base/geom';\nimport {HighPrecisionTimeSpan} from '../../base/high_precision_time_span';\nimport {assertUnreachable} from '../../base/logging';\nimport {Duration, duration, Time, time, TimeSpan} from '../../base/time';\nimport {TimeScale} from '../../base/time_scale';\nimport {getOrCreate} from '../../base/utils';\nimport {colorForCpu} from '../../components/colorizer';\nimport {raf} from '../../core/raf_scheduler';\nimport {timestampFormat} from '../../core/timestamp_format';\nimport {TraceImpl} from '../../core/trace_impl';\nimport {TimestampFormat} from '../../public/timeline';\nimport {LONG, NUM} from '../../trace_processor/query_result';\nimport {\n  OVERVIEW_TIMELINE_NON_VISIBLE_COLOR,\n  TRACK_SHELL_WIDTH,\n} from '../css_constants';\nimport {BorderDragStrategy} from '../drag/border_drag_strategy';\nimport {DragStrategy} from '../drag/drag_strategy';\nimport {InnerDragStrategy} from '../drag/inner_drag_strategy';\nimport {OuterDragStrategy} from '../drag/outer_drag_strategy';\nimport {\n  generateTicks,\n  getMaxMajorTicks,\n  MIN_PX_PER_STEP,\n  TickType,\n} from './gridline_helper';\nimport {Panel} from './panel_container';\n\nconst tracesData = new WeakMap<TraceImpl, OverviewDataLoader>();\n\nexport class OverviewTimelinePanel implements Panel {\n  private static HANDLE_SIZE_PX = 5;\n  readonly kind = 'panel';\n  readonly selectable = false;\n  private width = 0;\n  private gesture?: DragGestureHandler;\n  private timeScale?: TimeScale;\n  private dragStrategy?: DragStrategy;\n  private readonly boundOnMouseMove = this.onMouseMove.bind(this);\n  private readonly overviewData: OverviewDataLoader;\n\n  constructor(private trace: TraceImpl) {\n    this.overviewData = getOrCreate(\n      tracesData,\n      trace,\n      () => new OverviewDataLoader(trace),\n    );\n  }\n\n  // Must explicitly type now; arguments types are no longer auto-inferred.\n  // https://github.com/Microsoft/TypeScript/issues/1373\n  onupdate({dom}: m.CVnodeDOM) {\n    this.width = dom.getBoundingClientRect().width;\n    const traceTime = this.trace.traceInfo;\n    if (this.width > TRACK_SHELL_WIDTH) {\n      const pxBounds = {left: TRACK_SHELL_WIDTH, right: this.width};\n      const hpTraceTime = HighPrecisionTimeSpan.fromTime(\n        traceTime.start,\n        traceTime.end,\n      );\n      this.timeScale = new TimeScale(hpTraceTime, pxBounds);\n      if (this.gesture === undefined) {\n        this.gesture = new DragGestureHandler(\n          dom as HTMLElement,\n          this.onDrag.bind(this),\n          this.onDragStart.bind(this),\n          this.onDragEnd.bind(this),\n        );\n      }\n    } else {\n      this.timeScale = undefined;\n    }\n  }\n\n  oncreate(vnode: m.CVnodeDOM) {\n    this.onupdate(vnode);\n    (vnode.dom as HTMLElement).addEventListener(\n      'mousemove',\n      this.boundOnMouseMove,\n    );\n  }\n\n  onremove({dom}: m.CVnodeDOM) {\n    if (this.gesture) {\n      this.gesture[Symbol.dispose]();\n      this.gesture = undefined;\n    }\n    (dom as HTMLElement).removeEventListener(\n      'mousemove',\n      this.boundOnMouseMove,\n    );\n  }\n\n  render(): m.Children {\n    return m('.overview-timeline', {\n      oncreate: (vnode) => this.oncreate(vnode),\n      onupdate: (vnode) => this.onupdate(vnode),\n      onremove: (vnode) => this.onremove(vnode),\n    });\n  }\n\n  renderCanvas(ctx: CanvasRenderingContext2D, size: Size2D) {\n    if (this.width === undefined) return;\n    if (this.timeScale === undefined) return;\n\n    const headerHeight = 20;\n    const tracksHeight = size.height - headerHeight;\n    const traceContext = new TimeSpan(\n      this.trace.traceInfo.start,\n      this.trace.traceInfo.end,\n    );\n\n    if (size.width > TRACK_SHELL_WIDTH && traceContext.duration > 0n) {\n      const maxMajorTicks = getMaxMajorTicks(this.width - TRACK_SHELL_WIDTH);\n      const offset = this.trace.timeline.timestampOffset();\n      const tickGen = generateTicks(traceContext, maxMajorTicks, offset);\n\n      // Draw time labels\n      ctx.font = '10px Roboto Condensed';\n      ctx.fillStyle = '#999';\n      for (const {type, time} of tickGen) {\n        const xPos = Math.floor(this.timeScale.timeToPx(time));\n        if (xPos <= 0) continue;\n        if (xPos > this.width) break;\n        if (type === TickType.MAJOR) {\n          ctx.fillRect(xPos - 1, 0, 1, headerHeight - 5);\n          const domainTime = this.trace.timeline.toDomainTime(time);\n          renderTimestamp(ctx, domainTime, xPos + 5, 18, MIN_PX_PER_STEP);\n        } else if (type == TickType.MEDIUM) {\n          ctx.fillRect(xPos - 1, 0, 1, 8);\n        } else if (type == TickType.MINOR) {\n          ctx.fillRect(xPos - 1, 0, 1, 5);\n        }\n      }\n    }\n\n    // Draw mini-tracks with quanitzed density for each process.\n    const overviewData = this.overviewData.overviewData;\n    if (overviewData.size > 0) {\n      const numTracks = overviewData.size;\n      let y = 0;\n      const trackHeight = (tracksHeight - 1) / numTracks;\n      for (const key of overviewData.keys()) {\n        const loads = overviewData.get(key)!;\n        for (let i = 0; i < loads.length; i++) {\n          const xStart = Math.floor(this.timeScale.timeToPx(loads[i].start));\n          const xEnd = Math.ceil(this.timeScale.timeToPx(loads[i].end));\n          const yOff = Math.floor(headerHeight + y * trackHeight);\n          const lightness = Math.ceil((1 - loads[i].load * 0.7) * 100);\n          const color = colorForCpu(y).setHSL({s: 50, l: lightness});\n          ctx.fillStyle = color.cssString;\n          ctx.fillRect(xStart, yOff, xEnd - xStart, Math.ceil(trackHeight));\n        }\n        y++;\n      }\n    }\n\n    // Draw bottom border.\n    ctx.fillStyle = '#dadada';\n    ctx.fillRect(0, size.height - 1, this.width, 1);\n\n    // Draw semi-opaque rects that occlude the non-visible time range.\n    const [vizStartPx, vizEndPx] = this.extractBounds(this.timeScale);\n\n    ctx.fillStyle = OVERVIEW_TIMELINE_NON_VISIBLE_COLOR;\n    ctx.fillRect(\n      TRACK_SHELL_WIDTH - 1,\n      headerHeight,\n      vizStartPx - TRACK_SHELL_WIDTH,\n      tracksHeight,\n    );\n    ctx.fillRect(vizEndPx, headerHeight, this.width - vizEndPx, tracksHeight);\n\n    // Draw brushes.\n    ctx.fillStyle = '#999';\n    ctx.fillRect(vizStartPx - 1, headerHeight, 1, tracksHeight);\n    ctx.fillRect(vizEndPx, headerHeight, 1, tracksHeight);\n\n    const hbarWidth = OverviewTimelinePanel.HANDLE_SIZE_PX;\n    const hbarHeight = tracksHeight * 0.4;\n    // Draw handlebar\n    ctx.fillRect(\n      vizStartPx - Math.floor(hbarWidth / 2) - 1,\n      headerHeight,\n      hbarWidth,\n      hbarHeight,\n    );\n    ctx.fillRect(\n      vizEndPx - Math.floor(hbarWidth / 2),\n      headerHeight,\n      hbarWidth,\n      hbarHeight,\n    );\n  }\n\n  private onMouseMove(e: MouseEvent) {\n    if (this.gesture === undefined || this.gesture.isDragging) {\n      return;\n    }\n    (e.target as HTMLElement).style.cursor = this.chooseCursor(e.offsetX);\n  }\n\n  private chooseCursor(x: number) {\n    if (this.timeScale === undefined) return 'default';\n    const [startBound, endBound] = this.extractBounds(this.timeScale);\n    if (\n      OverviewTimelinePanel.inBorderRange(x, startBound) ||\n      OverviewTimelinePanel.inBorderRange(x, endBound)\n    ) {\n      return 'ew-resize';\n    } else if (x < TRACK_SHELL_WIDTH) {\n      return 'default';\n    } else if (x < startBound || endBound < x) {\n      return 'crosshair';\n    } else {\n      return 'all-scroll';\n    }\n  }\n\n  onDrag(x: number) {\n    if (this.dragStrategy === undefined) return;\n    this.dragStrategy.onDrag(x);\n  }\n\n  onDragStart(x: number) {\n    if (this.timeScale === undefined) return;\n\n    const cb = (vizTime: HighPrecisionTimeSpan) => {\n      this.trace.timeline.updateVisibleTimeHP(vizTime);\n      raf.scheduleCanvasRedraw();\n    };\n    const pixelBounds = this.extractBounds(this.timeScale);\n    const timeScale = this.timeScale;\n    if (\n      OverviewTimelinePanel.inBorderRange(x, pixelBounds[0]) ||\n      OverviewTimelinePanel.inBorderRange(x, pixelBounds[1])\n    ) {\n      this.dragStrategy = new BorderDragStrategy(timeScale, pixelBounds, cb);\n    } else if (x < pixelBounds[0] || pixelBounds[1] < x) {\n      this.dragStrategy = new OuterDragStrategy(timeScale, cb);\n    } else {\n      this.dragStrategy = new InnerDragStrategy(timeScale, pixelBounds, cb);\n    }\n    this.dragStrategy.onDragStart(x);\n  }\n\n  onDragEnd() {\n    this.dragStrategy = undefined;\n  }\n\n  private extractBounds(timeScale: TimeScale): [number, number] {\n    const vizTime = this.trace.timeline.visibleWindow;\n    return [\n      Math.floor(timeScale.hpTimeToPx(vizTime.start)),\n      Math.ceil(timeScale.hpTimeToPx(vizTime.end)),\n    ];\n  }\n\n  private static inBorderRange(a: number, b: number): boolean {\n    return Math.abs(a - b) < this.HANDLE_SIZE_PX / 2;\n  }\n}\n\n// Print a timestamp in the configured time format\nfunction renderTimestamp(\n  ctx: CanvasRenderingContext2D,\n  time: time,\n  x: number,\n  y: number,\n  minWidth: number,\n): void {\n  const fmt = timestampFormat();\n  switch (fmt) {\n    case TimestampFormat.UTC:\n    case TimestampFormat.TraceTz:\n    case TimestampFormat.Timecode:\n      renderTimecode(ctx, time, x, y, minWidth);\n      break;\n    case TimestampFormat.TraceNs:\n      ctx.fillText(time.toString(), x, y, minWidth);\n      break;\n    case TimestampFormat.TraceNsLocale:\n      ctx.fillText(time.toLocaleString(), x, y, minWidth);\n      break;\n    case TimestampFormat.Seconds:\n      ctx.fillText(Time.formatSeconds(time), x, y, minWidth);\n      break;\n    case TimestampFormat.Milliseconds:\n      ctx.fillText(Time.formatMilliseconds(time), x, y, minWidth);\n      break;\n    case TimestampFormat.Microseconds:\n      ctx.fillText(Time.formatMicroseconds(time), x, y, minWidth);\n      break;\n    default:\n      assertUnreachable(fmt);\n  }\n}\n\n// Print a timecode over 2 lines with this formatting:\n// DdHH:MM:SS\n// mmm uuu nnn\nfunction renderTimecode(\n  ctx: CanvasRenderingContext2D,\n  time: time,\n  x: number,\n  y: number,\n  minWidth: number,\n): void {\n  const timecode = Time.toTimecode(time);\n  const {dhhmmss} = timecode;\n  ctx.fillText(dhhmmss, x, y, minWidth);\n}\n\ninterface QuantizedLoad {\n  start: time;\n  end: time;\n  load: number;\n}\n\n// Kicks of a sequence of promises that load the overiew data in steps.\n// Each step schedules an animation frame.\nclass OverviewDataLoader {\n  overviewData = new Map<string, QuantizedLoad[]>();\n\n  constructor(private trace: TraceImpl) {\n    this.beginLoad();\n  }\n\n  async beginLoad() {\n    const traceSpan = new TimeSpan(\n      this.trace.traceInfo.start,\n      this.trace.traceInfo.end,\n    );\n    const engine = this.trace.engine;\n    const stepSize = Duration.max(1n, traceSpan.duration / 100n);\n    const hasSchedSql = 'select ts from sched limit 1';\n    const hasSchedOverview = (await engine.query(hasSchedSql)).numRows() > 0;\n    if (hasSchedOverview) {\n      await this.loadSchedOverview(traceSpan, stepSize);\n    } else {\n      await this.loadSliceOverview(traceSpan, stepSize);\n    }\n  }\n\n  async loadSchedOverview(traceSpan: TimeSpan, stepSize: duration) {\n    const stepPromises = [];\n    for (\n      let start = traceSpan.start;\n      start < traceSpan.end;\n      start = Time.add(start, stepSize)\n    ) {\n      const progress = start - traceSpan.start;\n      const ratio = Number(progress) / Number(traceSpan.duration);\n      this.trace.omnibox.showStatusMessage(\n        'Loading overview ' + `${Math.round(ratio * 100)}%`,\n      );\n      const end = Time.add(start, stepSize);\n      // The (async() => {})() queues all the 100 async promises in one batch.\n      // Without that, we would wait for each step to be rendered before\n      // kicking off the next one. That would interleave an animation frame\n      // between each step, slowing down significantly the overall process.\n      stepPromises.push(\n        (async () => {\n          const schedResult = await this.trace.engine.query(\n            `select cast(sum(dur) as float)/${stepSize} as load, cpu from sched ` +\n              `where ts >= ${start} and ts < ${end} and utid != 0 ` +\n              'group by cpu order by cpu',\n          );\n          const schedData: {[key: string]: QuantizedLoad} = {};\n          const it = schedResult.iter({load: NUM, cpu: NUM});\n          for (; it.valid(); it.next()) {\n            const load = it.load;\n            const cpu = it.cpu;\n            schedData[cpu] = {start, end, load};\n          }\n          this.appendData(schedData);\n        })(),\n      );\n    } // for(start = ...)\n    await Promise.all(stepPromises);\n  }\n\n  async loadSliceOverview(traceSpan: TimeSpan, stepSize: duration) {\n    // Slices overview.\n    const sliceResult = await this.trace.engine.query(`select\n            bucket,\n            upid,\n            ifnull(sum(utid_sum) / cast(${stepSize} as float), 0) as load\n          from thread\n          inner join (\n            select\n              ifnull(cast((ts - ${traceSpan.start})/${stepSize} as int), 0) as bucket,\n              sum(dur) as utid_sum,\n              utid\n            from slice\n            inner join thread_track on slice.track_id = thread_track.id\n            group by bucket, utid\n          ) using(utid)\n          where upid is not null\n          group by bucket, upid`);\n\n    const slicesData: {[key: string]: QuantizedLoad[]} = {};\n    const it = sliceResult.iter({bucket: LONG, upid: NUM, load: NUM});\n    for (; it.valid(); it.next()) {\n      const bucket = it.bucket;\n      const upid = it.upid;\n      const load = it.load;\n\n      const start = Time.add(traceSpan.start, stepSize * bucket);\n      const end = Time.add(start, stepSize);\n\n      const upidStr = upid.toString();\n      let loadArray = slicesData[upidStr];\n      if (loadArray === undefined) {\n        loadArray = slicesData[upidStr] = [];\n      }\n      loadArray.push({start, end, load});\n    }\n    this.appendData(slicesData);\n  }\n\n  appendData(data: {[key: string]: QuantizedLoad | QuantizedLoad[]}) {\n    for (const [key, value] of Object.entries(data)) {\n      if (!this.overviewData.has(key)) {\n        this.overviewData.set(key, []);\n      }\n      if (value instanceof Array) {\n        this.overviewData.get(key)!.push(...value);\n      } else {\n        this.overviewData.get(key)!.push(value);\n      }\n    }\n    raf.scheduleCanvasRedraw();\n  }\n}\n"]}