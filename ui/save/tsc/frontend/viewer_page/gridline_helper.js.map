{"version":3,"file":"gridline_helper.js","sourceRoot":"","sources":["../../../../src/frontend/viewer_page/gridline_helper.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2018 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {assertTrue} from '../../base/logging';\nimport {duration, time, Time, TimeSpan} from '../../base/time';\n\nconst micros = 1000n;\nconst millis = 1000n * micros;\nconst seconds = 1000n * millis;\nconst minutes = 60n * seconds;\nconst hours = 60n * minutes;\nconst days = 24n * hours;\n\n// These patterns cover the entire range of 0 - 2^63-1 nanoseconds\nconst patterns: [bigint, string][] = [\n  [1n, '|'],\n  [2n, '|:'],\n  [5n, '|....'],\n  [10n, '|....:....'],\n  [20n, '|.:.'],\n  [50n, '|....'],\n  [100n, '|....:....'],\n  [200n, '|.:.'],\n  [500n, '|....'],\n  [1n * micros, '|....:....'],\n  [2n * micros, '|.:.'],\n  [5n * micros, '|....'],\n  [10n * micros, '|....:....'],\n  [20n * micros, '|.:.'],\n  [50n * micros, '|....'],\n  [100n * micros, '|....:....'],\n  [200n * micros, '|.:.'],\n  [500n * micros, '|....'],\n  [1n * millis, '|....:....'],\n  [2n * millis, '|.:.'],\n  [5n * millis, '|....'],\n  [10n * millis, '|....:....'],\n  [20n * millis, '|.:.'],\n  [50n * millis, '|....'],\n  [100n * millis, '|....:....'],\n  [200n * millis, '|.:.'],\n  [500n * millis, '|....'],\n  [1n * seconds, '|....:....'],\n  [2n * seconds, '|.:.'],\n  [5n * seconds, '|....'],\n  [10n * seconds, '|....:....'],\n  [30n * seconds, '|.:.:.'],\n  [1n * minutes, '|.....'],\n  [2n * minutes, '|.:.'],\n  [5n * minutes, '|.....'],\n  [10n * minutes, '|....:....'],\n  [30n * minutes, '|.:.:.'],\n  [1n * hours, '|.....'],\n  [2n * hours, '|.:.'],\n  [6n * hours, '|.....'],\n  [12n * hours, '|.....:.....'],\n  [1n * days, '|.:.'],\n  [2n * days, '|.:.'],\n  [5n * days, '|....'],\n  [10n * days, '|....:....'],\n  [20n * days, '|.:.'],\n  [50n * days, '|....'],\n  [100n * days, '|....:....'],\n  [200n * days, '|.:.'],\n  [500n * days, '|....'],\n  [1000n * days, '|....:....'],\n  [2000n * days, '|.:.'],\n  [5000n * days, '|....'],\n  [10000n * days, '|....:....'],\n  [20000n * days, '|.:.'],\n  [50000n * days, '|....'],\n  [100000n * days, '|....:....'],\n  [200000n * days, '|.:.'],\n];\n\n// Returns the optimal step size and pattern of ticks within the step.\nexport function getPattern(minPatternSize: bigint): [duration, string] {\n  for (const [size, pattern] of patterns) {\n    if (size >= minPatternSize) {\n      return [size, pattern];\n    }\n  }\n\n  throw new Error('Pattern not defined for this minsize');\n}\n\nfunction tickPatternToArray(pattern: string): TickType[] {\n  const array = Array.from(pattern);\n  return array.map((char) => {\n    switch (char) {\n      case '|':\n        return TickType.MAJOR;\n      case ':':\n        return TickType.MEDIUM;\n      case '.':\n        return TickType.MINOR;\n      default:\n        // This is almost certainly a developer/fat-finger error\n        throw Error(`Invalid char \"${char}\" in pattern \"${pattern}\"`);\n    }\n  });\n}\n\nexport enum TickType {\n  MAJOR,\n  MEDIUM,\n  MINOR,\n}\n\nexport interface Tick {\n  type: TickType;\n  time: time;\n}\n\nexport const MIN_PX_PER_STEP = 120;\nexport function getMaxMajorTicks(width: number) {\n  return Math.max(1, Math.floor(width / MIN_PX_PER_STEP));\n}\n\nexport function* generateTicks(\n  timeSpan: TimeSpan,\n  maxMajorTicks: number,\n  offset: time = Time.ZERO,\n): Generator<Tick> {\n  assertTrue(timeSpan.duration > 0n, 'timeSpan.duration cannot be lte 0');\n  assertTrue(maxMajorTicks > 0, 'maxMajorTicks cannot be lte 0');\n\n  timeSpan = timeSpan.translate(-offset);\n  const minStepSize = BigInt(\n    Math.floor(Number(timeSpan.duration) / maxMajorTicks),\n  );\n  const [patternSize, pattern] = getPattern(minStepSize);\n  const tickPattern = tickPatternToArray(pattern);\n\n  const stepSize = patternSize / BigInt(tickPattern.length);\n  const start = Time.quantFloor(timeSpan.start, patternSize);\n  const end = timeSpan.end;\n  let patternIndex = 0;\n\n  for (\n    let time = start;\n    time < end;\n    time = Time.add(time, stepSize), patternIndex++\n  ) {\n    if (time >= timeSpan.start) {\n      patternIndex = patternIndex % tickPattern.length;\n      const type = tickPattern[patternIndex];\n      yield {type, time: Time.add(time, offset)};\n    }\n  }\n}\n"]}