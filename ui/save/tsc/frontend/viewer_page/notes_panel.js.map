{"version":3,"file":"notes_panel.js","sourceRoot":"","sources":["../../../../src/frontend/viewer_page/notes_panel.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2019 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use size file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport m from 'mithril';\nimport {canvasClip} from '../../base/canvas_utils';\nimport {currentTargetOffset} from '../../base/dom_utils';\nimport {Size2D} from '../../base/geom';\nimport {assertUnreachable} from '../../base/logging';\nimport {TimeScale} from '../../base/time_scale';\nimport {randomColor} from '../../components/colorizer';\nimport {raf} from '../../core/raf_scheduler';\nimport {TraceImpl} from '../../core/trace_impl';\nimport {Note, SpanNote} from '../../public/note';\nimport {Button, ButtonBar} from '../../widgets/button';\nimport {TRACK_SHELL_WIDTH} from '../css_constants';\nimport {generateTicks, getMaxMajorTicks, TickType} from './gridline_helper';\nimport {Panel} from './panel_container';\n\nconst FLAG_WIDTH = 16;\nconst AREA_TRIANGLE_WIDTH = 10;\nconst FLAG = `\\uE153`;\n\nfunction toSummary(s: string) {\n  const newlineIndex = s.indexOf('\\n') > 0 ? s.indexOf('\\n') : s.length;\n  return s.slice(0, Math.min(newlineIndex, s.length, 16));\n}\n\nfunction getStartTimestamp(note: Note | SpanNote) {\n  const noteType = note.noteType;\n  switch (noteType) {\n    case 'SPAN':\n      return note.start;\n    case 'DEFAULT':\n      return note.timestamp;\n    default:\n      assertUnreachable(noteType);\n  }\n}\n\nexport class NotesPanel implements Panel {\n  readonly kind = 'panel';\n  readonly selectable = false;\n  private readonly trace: TraceImpl;\n  private timescale?: TimeScale; // The timescale from the last render()\n  private hoveredX: null | number = null;\n  private mouseDragging = false;\n\n  constructor(trace: TraceImpl) {\n    this.trace = trace;\n  }\n\n  render(): m.Children {\n    const allCollapsed = this.trace.workspace.flatTracks.every(\n      (n) => n.collapsed,\n    );\n\n    return m(\n      '.notes-panel',\n      {\n        onmousedown: () => {\n          // If the user clicks & drags, very likely they just want to measure\n          // the time horizontally, not set a flag. This debouncing is done to\n          // avoid setting accidental flags like measuring the time on the brush\n          // timeline.\n          this.mouseDragging = false;\n        },\n        onclick: (e: MouseEvent) => {\n          if (!this.mouseDragging) {\n            const x = currentTargetOffset(e).x - TRACK_SHELL_WIDTH;\n            this.onClick(x);\n            e.stopPropagation();\n          }\n        },\n        onmousemove: (e: MouseEvent) => {\n          this.mouseDragging = true;\n          this.hoveredX = currentTargetOffset(e).x - TRACK_SHELL_WIDTH;\n          raf.scheduleCanvasRedraw();\n        },\n        onmouseenter: (e: MouseEvent) => {\n          this.hoveredX = currentTargetOffset(e).x - TRACK_SHELL_WIDTH;\n          raf.scheduleCanvasRedraw();\n        },\n        onmouseout: () => {\n          this.hoveredX = null;\n          this.trace.timeline.hoveredNoteTimestamp = undefined;\n        },\n      },\n      m(\n        ButtonBar,\n        {className: 'pf-toolbar'},\n        m(Button, {\n          onclick: (e: Event) => {\n            e.preventDefault();\n            if (allCollapsed) {\n              this.trace.commands.runCommand(\n                'perfetto.CoreCommands#ExpandAllGroups',\n              );\n            } else {\n              this.trace.commands.runCommand(\n                'perfetto.CoreCommands#CollapseAllGroups',\n              );\n            }\n          },\n          title: allCollapsed ? 'Expand all' : 'Collapse all',\n          icon: allCollapsed ? 'unfold_more' : 'unfold_less',\n          compact: true,\n        }),\n        m(Button, {\n          onclick: (e: Event) => {\n            e.preventDefault();\n            this.trace.workspace.pinnedTracks.forEach((t) =>\n              this.trace.workspace.unpinTrack(t),\n            );\n            raf.scheduleFullRedraw();\n          },\n          title: 'Clear all pinned tracks',\n          icon: 'clear_all',\n          compact: true,\n        }),\n        // TODO(stevegolton): Re-introduce this when we fix track filtering\n        // m(TextInput, {\n        //   placeholder: 'Filter tracks...',\n        //   title:\n        //     'Track filter - enter one or more comma-separated search terms',\n        //   value: this.trace.state.trackFilterTerm,\n        //   oninput: (e: Event) => {\n        //     const filterTerm = (e.target as HTMLInputElement).value;\n        //     this.trace.dispatch(Actions.setTrackFilterTerm({filterTerm}));\n        //   },\n        // }),\n        // m(Button, {\n        //   type: 'reset',\n        //   icon: 'backspace',\n        //   onclick: () => {\n        //     this.trace.dispatch(\n        //       Actions.setTrackFilterTerm({filterTerm: undefined}),\n        //     );\n        //   },\n        //   title: 'Clear track filter',\n        // }),\n      ),\n    );\n  }\n\n  renderCanvas(ctx: CanvasRenderingContext2D, size: Size2D) {\n    ctx.fillStyle = '#999';\n    ctx.fillRect(TRACK_SHELL_WIDTH - 2, 0, 2, size.height);\n\n    const trackSize = {...size, width: size.width - TRACK_SHELL_WIDTH};\n\n    ctx.save();\n    ctx.translate(TRACK_SHELL_WIDTH, 0);\n    canvasClip(ctx, 0, 0, trackSize.width, trackSize.height);\n    this.renderPanel(ctx, trackSize);\n    ctx.restore();\n  }\n\n  private renderPanel(ctx: CanvasRenderingContext2D, size: Size2D): void {\n    let aNoteIsHovered = false;\n\n    const visibleWindow = this.trace.timeline.visibleWindow;\n    const timescale = new TimeScale(visibleWindow, {\n      left: 0,\n      right: size.width,\n    });\n    const timespan = visibleWindow.toTimeSpan();\n\n    this.timescale = timescale;\n\n    if (size.width > 0 && timespan.duration > 0n) {\n      const maxMajorTicks = getMaxMajorTicks(size.width);\n      const offset = this.trace.timeline.timestampOffset();\n      const tickGen = generateTicks(timespan, maxMajorTicks, offset);\n      for (const {type, time} of tickGen) {\n        const px = Math.floor(timescale.timeToPx(time));\n        if (type === TickType.MAJOR) {\n          ctx.fillRect(px, 0, 1, size.height);\n        }\n      }\n    }\n\n    ctx.textBaseline = 'bottom';\n    ctx.font = '10px Helvetica';\n\n    for (const note of this.trace.notes.notes.values()) {\n      const timestamp = getStartTimestamp(note);\n      // TODO(hjd): We should still render area selection marks in viewport is\n      // *within* the area (e.g. both lhs and rhs are out of bounds).\n      if (\n        (note.noteType === 'DEFAULT' &&\n          !visibleWindow.contains(note.timestamp)) ||\n        (note.noteType === 'SPAN' &&\n          !visibleWindow.overlaps(note.start, note.end))\n      ) {\n        continue;\n      }\n      const currentIsHovered =\n        this.hoveredX !== null && this.hitTestNote(this.hoveredX, note);\n      if (currentIsHovered) aNoteIsHovered = true;\n\n      const selection = this.trace.selection.selection;\n      const isSelected = selection.kind === 'note' && selection.id === note.id;\n      const x = timescale.timeToPx(timestamp);\n      const left = Math.floor(x);\n\n      // Draw flag or marker.\n      if (note.noteType === 'SPAN') {\n        this.drawAreaMarker(\n          ctx,\n          left,\n          Math.floor(timescale.timeToPx(note.end)),\n          note.color,\n          isSelected,\n        );\n      } else {\n        this.drawFlag(ctx, left, size.height, note.color, isSelected);\n      }\n\n      if (note.text) {\n        const summary = toSummary(note.text);\n        const measured = ctx.measureText(summary);\n        // Add a white semi-transparent background for the text.\n        ctx.fillStyle = 'rgba(255, 255, 255, 0.8)';\n        ctx.fillRect(\n          left + FLAG_WIDTH + 2,\n          size.height + 2,\n          measured.width + 2,\n          -12,\n        );\n        ctx.fillStyle = '#3c4b5d';\n        ctx.fillText(summary, left + FLAG_WIDTH + 3, size.height + 1);\n      }\n    }\n\n    // A real note is hovered so we don't need to see the preview line.\n    // TODO(hjd): Change cursor to pointer here.\n    if (aNoteIsHovered) {\n      this.trace.timeline.hoveredNoteTimestamp = undefined;\n    }\n\n    // View preview note flag when hovering on notes panel.\n    if (!aNoteIsHovered && this.hoveredX !== null) {\n      const timestamp = timescale.pxToHpTime(this.hoveredX).toTime();\n      if (visibleWindow.contains(timestamp)) {\n        this.trace.timeline.hoveredNoteTimestamp = timestamp;\n        const x = timescale.timeToPx(timestamp);\n        const left = Math.floor(x);\n        this.drawFlag(ctx, left, size.height, '#aaa', /* fill */ true);\n      }\n    }\n\n    ctx.restore();\n  }\n\n  private drawAreaMarker(\n    ctx: CanvasRenderingContext2D,\n    x: number,\n    xEnd: number,\n    color: string,\n    fill: boolean,\n  ) {\n    ctx.fillStyle = color;\n    ctx.strokeStyle = color;\n    const topOffset = 10;\n    // Don't draw in the track shell section.\n    if (x >= 0) {\n      // Draw left triangle.\n      ctx.beginPath();\n      ctx.moveTo(x, topOffset);\n      ctx.lineTo(x, topOffset + AREA_TRIANGLE_WIDTH);\n      ctx.lineTo(x + AREA_TRIANGLE_WIDTH, topOffset);\n      ctx.lineTo(x, topOffset);\n      if (fill) ctx.fill();\n      ctx.stroke();\n    }\n    // Draw right triangle.\n    ctx.beginPath();\n    ctx.moveTo(xEnd, topOffset);\n    ctx.lineTo(xEnd, topOffset + AREA_TRIANGLE_WIDTH);\n    ctx.lineTo(xEnd - AREA_TRIANGLE_WIDTH, topOffset);\n    ctx.lineTo(xEnd, topOffset);\n    if (fill) ctx.fill();\n    ctx.stroke();\n\n    // Start line after track shell section, join triangles.\n    const startDraw = Math.max(x, 0);\n    ctx.beginPath();\n    ctx.moveTo(startDraw, topOffset);\n    ctx.lineTo(xEnd, topOffset);\n    ctx.stroke();\n  }\n\n  private drawFlag(\n    ctx: CanvasRenderingContext2D,\n    x: number,\n    height: number,\n    color: string,\n    fill?: boolean,\n  ) {\n    const prevFont = ctx.font;\n    const prevBaseline = ctx.textBaseline;\n    ctx.textBaseline = 'alphabetic';\n    // Adjust height for icon font.\n    ctx.font = '24px Material Symbols Sharp';\n    ctx.fillStyle = color;\n    ctx.strokeStyle = color;\n    // The ligatures have padding included that means the icon is not drawn\n    // exactly at the x value. This adjusts for that.\n    const iconPadding = 6;\n    if (fill) {\n      ctx.fillText(FLAG, x - iconPadding, height + 2);\n    } else {\n      ctx.strokeText(FLAG, x - iconPadding, height + 2.5);\n    }\n    ctx.font = prevFont;\n    ctx.textBaseline = prevBaseline;\n  }\n\n  private onClick(x: number) {\n    if (!this.timescale) {\n      return;\n    }\n\n    // Select the hovered note, or create a new single note & select it\n    if (x < 0) return;\n    for (const note of this.trace.notes.notes.values()) {\n      if (this.hoveredX !== null && this.hitTestNote(this.hoveredX, note)) {\n        this.trace.selection.selectNote({id: note.id});\n        return;\n      }\n    }\n    const timestamp = this.timescale.pxToHpTime(x).toTime();\n    const color = randomColor();\n    const noteId = this.trace.notes.addNote({timestamp, color});\n    this.trace.selection.selectNote({id: noteId});\n  }\n\n  private hitTestNote(x: number, note: SpanNote | Note): boolean {\n    if (!this.timescale) {\n      return false;\n    }\n\n    const timescale = this.timescale;\n    const noteX = timescale.timeToPx(getStartTimestamp(note));\n    if (note.noteType === 'SPAN') {\n      return (\n        (noteX <= x && x < noteX + AREA_TRIANGLE_WIDTH) ||\n        (timescale.timeToPx(note.end) > x &&\n          x > timescale.timeToPx(note.end) - AREA_TRIANGLE_WIDTH)\n      );\n    } else {\n      const width = FLAG_WIDTH;\n      return noteX <= x && x < noteX + width;\n    }\n  }\n}\n"]}