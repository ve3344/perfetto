{"version":3,"file":"gridline_helper_unittest.js","sourceRoot":"","sources":["../../../../src/frontend/viewer_page/gridline_helper_unittest.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2018 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Time, TimeSpan} from '../../base/time';\nimport {getPattern, generateTicks, TickType} from './gridline_helper';\n\ntest('gridline helper to have sensible step sizes', () => {\n  expect(getPattern(1n)).toEqual([1n, '|']);\n  expect(getPattern(2n)).toEqual([2n, '|:']);\n  expect(getPattern(3n)).toEqual([5n, '|....']);\n  expect(getPattern(4n)).toEqual([5n, '|....']);\n  expect(getPattern(5n)).toEqual([5n, '|....']);\n  expect(getPattern(7n)).toEqual([10n, '|....:....']);\n\n  expect(getPattern(10n)).toEqual([10n, '|....:....']);\n  expect(getPattern(20n)).toEqual([20n, '|.:.']);\n  expect(getPattern(50n)).toEqual([50n, '|....']);\n\n  expect(getPattern(100n)).toEqual([100n, '|....:....']);\n});\n\ndescribe('generateTicks', () => {\n  it('can generate ticks with span starting at origin', () => {\n    const tickGen = generateTicks(\n      new TimeSpan(Time.fromRaw(0n), Time.fromRaw(10n)),\n      1,\n    );\n    const expected = [\n      {type: TickType.MAJOR, time: 0n},\n      {type: TickType.MINOR, time: 1n},\n      {type: TickType.MINOR, time: 2n},\n      {type: TickType.MINOR, time: 3n},\n      {type: TickType.MINOR, time: 4n},\n      {type: TickType.MEDIUM, time: 5n},\n      {type: TickType.MINOR, time: 6n},\n      {type: TickType.MINOR, time: 7n},\n      {type: TickType.MINOR, time: 8n},\n      {type: TickType.MINOR, time: 9n},\n    ];\n    const actual = Array.from(tickGen!);\n    expect(actual).toStrictEqual(expected);\n  });\n\n  it('can generate ticks when span has an offset', () => {\n    const tickGen = generateTicks(\n      new TimeSpan(Time.fromRaw(10n), Time.fromRaw(20n)),\n      1,\n    );\n    const expected = [\n      {type: TickType.MAJOR, time: 10n},\n      {type: TickType.MINOR, time: 11n},\n      {type: TickType.MINOR, time: 12n},\n      {type: TickType.MINOR, time: 13n},\n      {type: TickType.MINOR, time: 14n},\n      {type: TickType.MEDIUM, time: 15n},\n      {type: TickType.MINOR, time: 16n},\n      {type: TickType.MINOR, time: 17n},\n      {type: TickType.MINOR, time: 18n},\n      {type: TickType.MINOR, time: 19n},\n    ];\n    const actual = Array.from(tickGen!);\n    expect(actual).toStrictEqual(expected);\n  });\n\n  it('can generate ticks when span is large', () => {\n    const tickGen = generateTicks(\n      new TimeSpan(Time.fromRaw(1000000000n), Time.fromRaw(2000000000n)),\n      1,\n    );\n    const expected = [\n      {type: TickType.MAJOR, time: 1000000000n},\n      {type: TickType.MINOR, time: 1100000000n},\n      {type: TickType.MINOR, time: 1200000000n},\n      {type: TickType.MINOR, time: 1300000000n},\n      {type: TickType.MINOR, time: 1400000000n},\n      {type: TickType.MEDIUM, time: 1500000000n},\n      {type: TickType.MINOR, time: 1600000000n},\n      {type: TickType.MINOR, time: 1700000000n},\n      {type: TickType.MINOR, time: 1800000000n},\n      {type: TickType.MINOR, time: 1900000000n},\n    ];\n    const actual = Array.from(tickGen!);\n    expect(actual).toStrictEqual(expected);\n  });\n\n  it('throws an error when timespan duration is 0', () => {\n    expect(() => {\n      Array.from(generateTicks(TimeSpan.ZERO, 1));\n    }).toThrow(Error);\n  });\n\n  it('throws an error when max ticks is 0', () => {\n    const nonZeroTimeSpan = new TimeSpan(Time.fromRaw(0n), Time.fromRaw(1n));\n    expect(() => {\n      Array.from(generateTicks(nonZeroTimeSpan, 0));\n    }).toThrow(Error);\n  });\n});\n"]}