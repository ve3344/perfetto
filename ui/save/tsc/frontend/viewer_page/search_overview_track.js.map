{"version":3,"file":"search_overview_track.js","sourceRoot":"","sources":["../../../../src/frontend/viewer_page/search_overview_track.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2024 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use size file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AsyncLimiter} from '../../base/async_limiter';\nimport {AsyncDisposableStack} from '../../base/disposable_stack';\nimport {Size2D} from '../../base/geom';\nimport {Duration, Time, TimeSpan, duration, time} from '../../base/time';\nimport {TimeScale} from '../../base/time_scale';\nimport {TraceImpl} from '../../core/trace_impl';\nimport {LONG, NUM} from '../../trace_processor/query_result';\nimport {escapeSearchQuery} from '../../trace_processor/query_utils';\nimport {createVirtualTable} from '../../trace_processor/sql_utils';\nimport {calculateResolution} from './resolution';\n\ninterface SearchSummary {\n  tsStarts: BigInt64Array;\n  tsEnds: BigInt64Array;\n  count: Uint8Array;\n}\n\n/**\n * This component is drawn on top of the timeline and creates small yellow\n * rectangles that highlight the time span of search results (similarly to what\n * Chrome does on the scrollbar when you Ctrl+F and type a search term).\n * It reacts to changes in SearchManager and queries the quantized ranges of the\n * search results.\n */\nexport class SearchOverviewTrack implements AsyncDisposable {\n  private readonly trash = new AsyncDisposableStack();\n  private readonly trace: TraceImpl;\n  private readonly limiter = new AsyncLimiter();\n  private initialized = false;\n  private previousResolution: duration | undefined;\n  private previousSpan: TimeSpan | undefined;\n  private previousSearchGeneration = 0;\n  private searchSummary: SearchSummary | undefined;\n\n  constructor(trace: TraceImpl) {\n    this.trace = trace;\n  }\n\n  render(ctx: CanvasRenderingContext2D, size: Size2D) {\n    this.maybeUpdate(size);\n    this.renderSearchOverview(ctx, size);\n  }\n\n  private async initialize() {\n    const engine = this.trace.engine;\n    this.trash.use(\n      await createVirtualTable(engine, 'search_summary_window', 'window'),\n    );\n    this.trash.use(\n      await createVirtualTable(\n        engine,\n        'search_summary_sched_span',\n        'span_join(sched PARTITIONED cpu, search_summary_window)',\n      ),\n    );\n    this.trash.use(\n      await createVirtualTable(\n        engine,\n        'search_summary_slice_span',\n        'span_join(slice PARTITIONED track_id, search_summary_window)',\n      ),\n    );\n  }\n\n  private async update(\n    search: string,\n    start: time,\n    end: time,\n    resolution: duration,\n  ): Promise<SearchSummary> {\n    if (!this.initialized) {\n      this.initialized = true;\n      await this.initialize();\n    }\n    const searchLiteral = escapeSearchQuery(search);\n\n    const resolutionScalingFactor = 10n;\n    const quantum = resolution * resolutionScalingFactor;\n    start = Time.quantFloor(start, quantum);\n\n    const windowDur = Duration.max(Time.diff(end, start), 1n);\n    const engine = this.trace.engine;\n    await engine.query(`update search_summary_window set\n      window_start=${start},\n      window_dur=${windowDur},\n      quantum=${quantum}\n      where rowid = 0;`);\n\n    const utidRes = await engine.query(`select utid from thread join process\n      using(upid) where thread.name glob ${searchLiteral}\n      or process.name glob ${searchLiteral}`);\n\n    const utids = [];\n    for (const it = utidRes.iter({utid: NUM}); it.valid(); it.next()) {\n      utids.push(it.utid);\n    }\n\n    const res = await engine.query(`\n        select\n          (quantum_ts * ${quantum} + ${start}) as tsStart,\n          ((quantum_ts+1) * ${quantum} + ${start}) as tsEnd,\n          min(count(*), 255) as count\n          from (\n              select\n              quantum_ts\n              from search_summary_sched_span\n              where utid in (${utids.join(',')})\n            union all\n              select\n              quantum_ts\n              from search_summary_slice_span\n              where name glob ${searchLiteral}\n          )\n          group by quantum_ts\n          order by quantum_ts;`);\n\n    const numRows = res.numRows();\n    const summary: SearchSummary = {\n      tsStarts: new BigInt64Array(numRows),\n      tsEnds: new BigInt64Array(numRows),\n      count: new Uint8Array(numRows),\n    };\n\n    const it = res.iter({tsStart: LONG, tsEnd: LONG, count: NUM});\n    for (let row = 0; it.valid(); it.next(), ++row) {\n      summary.tsStarts[row] = it.tsStart;\n      summary.tsEnds[row] = it.tsEnd;\n      summary.count[row] = it.count;\n    }\n    return summary;\n  }\n\n  private maybeUpdate(size: Size2D) {\n    const searchManager = this.trace.search;\n    const timeline = this.trace.timeline;\n    if (!searchManager.hasResults) {\n      return;\n    }\n    const newSpan = timeline.visibleWindow;\n    const newSearchGeneration = searchManager.searchGeneration;\n    const newResolution = calculateResolution(newSpan, size.width);\n    const newTimeSpan = newSpan.toTimeSpan();\n    if (\n      this.previousSpan?.containsSpan(newTimeSpan.start, newTimeSpan.end) &&\n      this.previousResolution === newResolution &&\n      this.previousSearchGeneration === newSearchGeneration\n    ) {\n      return;\n    }\n\n    // TODO(hjd): We should restrict this to the start of the trace but\n    // that is not easily available here.\n    // N.B. Timestamps can be negative.\n    const {start, end} = newTimeSpan.pad(newTimeSpan.duration);\n    this.previousSpan = new TimeSpan(start, end);\n    this.previousResolution = newResolution;\n    this.previousSearchGeneration = newSearchGeneration;\n    const search = searchManager.searchText;\n    if (search === '') {\n      this.searchSummary = {\n        tsStarts: new BigInt64Array(0),\n        tsEnds: new BigInt64Array(0),\n        count: new Uint8Array(0),\n      };\n      return;\n    }\n\n    this.limiter.schedule(async () => {\n      const summary = await this.update(\n        searchManager.searchText,\n        start,\n        end,\n        newResolution,\n      );\n      this.searchSummary = summary;\n    });\n  }\n\n  private renderSearchOverview(\n    ctx: CanvasRenderingContext2D,\n    size: Size2D,\n  ): void {\n    const visibleWindow = this.trace.timeline.visibleWindow;\n    const timescale = new TimeScale(visibleWindow, {\n      left: 0,\n      right: size.width,\n    });\n\n    if (!this.searchSummary) return;\n\n    for (let i = 0; i < this.searchSummary.tsStarts.length; i++) {\n      const tStart = Time.fromRaw(this.searchSummary.tsStarts[i]);\n      const tEnd = Time.fromRaw(this.searchSummary.tsEnds[i]);\n      if (!visibleWindow.overlaps(tStart, tEnd)) {\n        continue;\n      }\n      const rectStart = Math.max(timescale.timeToPx(tStart), 0);\n      const rectEnd = timescale.timeToPx(tEnd);\n      ctx.fillStyle = '#ffe263';\n      ctx.fillRect(\n        Math.floor(rectStart),\n        0,\n        Math.ceil(rectEnd - rectStart),\n        size.height,\n      );\n    }\n    const results = this.trace.search.searchResults;\n    if (results === undefined) {\n      return;\n    }\n    const index = this.trace.search.resultIndex;\n    if (index !== -1 && index < results.tses.length) {\n      const start = results.tses[index];\n      if (start !== -1n) {\n        const triangleStart = Math.max(\n          timescale.timeToPx(Time.fromRaw(start)),\n          0,\n        );\n        ctx.fillStyle = '#000';\n        ctx.beginPath();\n        ctx.moveTo(triangleStart, size.height);\n        ctx.lineTo(triangleStart - 3, 0);\n        ctx.lineTo(triangleStart + 3, 0);\n        ctx.lineTo(triangleStart, size.height);\n        ctx.fill();\n        ctx.closePath();\n      }\n    }\n\n    ctx.restore();\n  }\n\n  async [Symbol.asyncDispose](): Promise<void> {\n    return await this.trash.asyncDispose();\n  }\n}\n"]}