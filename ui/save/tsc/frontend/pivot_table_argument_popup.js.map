{"version":3,"file":"pivot_table_argument_popup.js","sourceRoot":"","sources":["../../../src/frontend/pivot_table_argument_popup.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;;;AAEjC,8DAAwB;AACxB,yDAA0C;AAM1C,6EAA6E;AAC7E,MAAa,aAAa;IACxB,QAAQ,GAAG,EAAE,CAAC;IAEd,WAAW,CAAC,KAAwB,EAAE,GAAW;QAC/C,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;QACpB,KAAK,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;QAC5B,mBAAG,CAAC,kBAAkB,EAAE,CAAC;IAC3B,CAAC;IAED,IAAI,CAAC,EAAC,KAAK,EAA6B;QACtC,OAAO,IAAA,iBAAC,EACN,kBAAkB,EAClB,IAAA,iBAAC,EAAC,OAAO,EAAE;YACT,QAAQ,EAAE,CAAC,KAAiB,EAAE,EAAE,CAC7B,KAAK,CAAC,GAAwB,CAAC,KAAK,EAAE;YACzC,OAAO,EAAE,CAAC,CAAQ,EAAE,EAAE;gBACpB,MAAM,KAAK,GAAG,CAAC,CAAC,MAA0B,CAAC;gBAC3C,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;YACvC,CAAC;YACD,KAAK,EAAE,IAAI,CAAC,QAAQ;SACrB,CAAC,CACH,CAAC;IACJ,CAAC;CACF;AAvBD,sCAuBC","sourcesContent":["// Copyright (C) 2022 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport m from 'mithril';\nimport {raf} from '../core/raf_scheduler';\n\ninterface ArgumentPopupArgs {\n  onArgumentChange: (arg: string) => void;\n}\n\n// Component rendering popup for entering an argument name to use as a pivot.\nexport class ArgumentPopup implements m.ClassComponent<ArgumentPopupArgs> {\n  argument = '';\n\n  setArgument(attrs: ArgumentPopupArgs, arg: string) {\n    this.argument = arg;\n    attrs.onArgumentChange(arg);\n    raf.scheduleFullRedraw();\n  }\n\n  view({attrs}: m.Vnode<ArgumentPopupArgs>): m.Child {\n    return m(\n      '.name-completion',\n      m('input', {\n        oncreate: (vnode: m.VnodeDOM) =>\n          (vnode.dom as HTMLInputElement).focus(),\n        oninput: (e: Event) => {\n          const input = e.target as HTMLInputElement;\n          this.setArgument(attrs, input.value);\n        },\n        value: this.argument,\n      }),\n    );\n  }\n}\n"]}