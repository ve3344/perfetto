{"version":3,"file":"ui_main.js","sourceRoot":"","sources":["../../../src/frontend/ui_main.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;;;AAEjC,8DAAwB;AACxB,iDAAkD;AAClD,iDAA0C;AAC1C,yCAA0C;AAC1C,6CAAgE;AAChE,uDAAmE;AACnE,+DAGkC;AAClC,yDAA0C;AAE1C,8DAAsE;AACtE,4DAAsD;AACtD,4CAA6E;AAC7E,2DAAqD;AACrD,6CAAwC;AACxC,uCAAiD;AACjD,iFAA8E;AAC9E,uCAAkC;AAClC,qCAAgC;AAChC,2DAA+C;AAC/C,uDAAmD;AACnD,6DAAoD;AACpD,+DAAyD;AACzD,gDAA2C;AAE3C,+CAAyC;AACzC,yDAAkD;AAClD,2DAAoD;AACpD,2CAAsE;AACtE,iDAAsE;AAEtE,MAAM,iBAAiB,GAAG,SAAS,CAAC;AAEpC,2EAA2E;AAC3E,4DAA4D;AAC5D,MAAa,MAAM;IACjB,IAAI;QACF,MAAM,cAAc,GAAG,kBAAO,CAAC,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC,QAAQ,IAAI,EAAE,CAAC;QACrE,OAAO,CAAC,IAAA,iBAAC,EAAC,cAAc,EAAE,EAAC,GAAG,EAAE,cAAc,EAAC,CAAC,CAAC,CAAC;IACpD,CAAC;CACF;AALD,wBAKC;AAED,4EAA4E;AAC5E,sEAAsE;AACtE,MAAa,cAAc;IACzB,4EAA4E;IAC5E,2EAA2E;IAC3E,gDAAgD;IACxC,KAAK,GAAG,IAAI,kCAAe,EAAE,CAAC;IAC9B,cAAc,CAAoB;IAClC,cAAc,GAAa,EAAE,CAAC;IAC9B,KAAK,CAAa;IAE1B,2CAA2C;IAC3C;QACE,MAAM,GAAG,GAAG,kBAAO,CAAC,QAAQ,CAAC;QAC7B,MAAM,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAEnB,0EAA0E;QAC1E,WAAW;QACX,MAAM,UAAU,GAAc;YAC5B;gBACE,EAAE,EAAE,6BAA6B;gBACjC,IAAI,EAAE,sBAAsB;gBAC5B,QAAQ,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,6BAAW,CAAC,OAAO,CAAC;gBACxD,aAAa,EAAE,cAAc;aAC9B;YAED;gBACE,EAAE,EAAE,mBAAmB;gBACvB,IAAI,EAAE,WAAW;gBACjB,QAAQ,EAAE,GAAG,EAAE,CAAC,IAAA,uBAAU,GAAE;gBAC5B,aAAa,EAAE,GAAG;aACnB;SACF,CAAC;QACF,UAAU,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;YACzB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;QAEH,qEAAqE;QACrE,8DAA8D;QAC9D,IAAI,KAAK,KAAK,SAAS;YAAE,OAAO;QAChC,QAAQ,CAAC,KAAK,GAAG,GAAG,KAAK,CAAC,SAAS,CAAC,UAAU,IAAI,OAAO,gBAAgB,CAAC;QAC1E,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAE5B,iCAAiC;QACjC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,kCAAgB,CAAC,KAAK,CAAC,CAAC,CAAC;QAE5C,qCAAqC;QACrC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,oBAAoB,CAAC,IAAI,iCAAc,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAE3E,IAAI,CAAC,KAAK,CAAC,GAAG,CACZ,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC;YACrB,GAAG,EAAE,eAAe;YACpB,WAAW,EAAE,KAAK;YAClB,OAAO,EAAE;gBACP,QAAQ,EAAE,GAAG,EAAE,CAAC,iBAAiB;gBACjC,MAAM,EAAE,GAAG,EAAE,CAAC,IAAA,iBAAC,EAAC,mCAAe,EAAE,EAAC,KAAK,EAAC,CAAC;aAC1C;SACF,CAAC,CACH,CAAC;QAEF,MAAM,IAAI,GAAc;YACtB;gBACE,EAAE,EAAE,6BAA6B;gBACjC,IAAI,EAAE,mCAAmC;gBACzC,QAAQ,EAAE,KAAK,IAAI,EAAE;oBACnB,MAAM,EAAE,GAAG,0BAAe,CAAC;oBAC3B,MAAM,MAAM,GAAG,MAAM,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,kBAAkB,EAAE;wBAC1D,MAAM,EAAE;4BACN,EAAC,MAAM,EAAE,EAAE,CAAC,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAC;4BACvC,EAAC,MAAM,EAAE,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,gBAAgB,EAAC;4BACxC,EAAC,MAAM,EAAE,EAAE,CAAC,OAAO,EAAE,IAAI,EAAE,qBAAqB,EAAC;4BACjD,EAAC,MAAM,EAAE,EAAE,CAAC,OAAO,EAAE,IAAI,EAAE,SAAS,EAAC;4BACrC,EAAC,MAAM,EAAE,EAAE,CAAC,YAAY,EAAE,IAAI,EAAE,cAAc,EAAC;4BAC/C,EAAC,MAAM,EAAE,EAAE,CAAC,YAAY,EAAE,IAAI,EAAE,cAAc,EAAC;4BAC/C,EAAC,MAAM,EAAE,EAAE,CAAC,OAAO,EAAE,IAAI,EAAE,mBAAmB,EAAC;4BAC/C;gCACE,MAAM,EAAE,EAAE,CAAC,aAAa;gCACxB,IAAI,EAAE,qDAAqD;6BAC5D;yBACF;wBACD,OAAO,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI;qBACvB,CAAC,CAAC;oBACH,MAAM,IAAI,IAAA,qCAAkB,EAAC,MAAM,CAAC,MAAM,CAAC,CAAC;oBAC5C,mBAAG,CAAC,kBAAkB,EAAE,CAAC;gBAC3B,CAAC;aACF;YACD;gBACE,EAAE,EAAE,+BAA+B;gBACnC,IAAI,EAAE,wBAAwB;gBAC9B,QAAQ,EAAE,KAAK,IAAI,EAAE;oBACnB,MAAM,EAAE,GAAG,4BAAiB,CAAC;oBAC7B,MAAM,MAAM,GAAG,MAAM,GAAG,CAAC,OAAO,CAAC,MAAM,CACrC,mCAAmC,EACnC;wBACE,MAAM,EAAE;4BACN,EAAC,MAAM,EAAE,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,EAAC;4BAC/B,EAAC,MAAM,EAAE,EAAE,CAAC,aAAa,EAAE,IAAI,EAAE,gBAAgB,EAAC;yBACnD;wBACD,OAAO,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI;qBACvB,CACF,CAAC;oBACF,MAAM,IAAI,IAAA,uCAAoB,EAAC,MAAM,CAAC,MAAM,CAAC,CAAC;oBAC9C,mBAAG,CAAC,kBAAkB,EAAE,CAAC;gBAC3B,CAAC;aACF;YACD;gBACE,EAAE,EAAE,mCAAmC;gBACvC,IAAI,EAAE,4BAA4B;gBAClC,QAAQ,EAAE,GAAG,EAAE,CACb,CAAC,GAAG,CAAC,aAAa,CAAC,OAAO,GAAG,CAAC,GAAG,CAAC,aAAa,CAAC,OAAO,CAAC;aAC3D;YACD;gBACE,EAAE,EAAE,qBAAqB;gBACzB,IAAI,EAAE,aAAa;gBACnB,QAAQ,EAAE,8BAAU;aACrB;YACD;gBACE,EAAE,EAAE,qBAAqB;gBACzB,IAAI,EAAE,0BAA0B;gBAChC,QAAQ,EAAE,GAAG,EAAE;oBACb,KAAK,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;gBAC7B,CAAC;gBACD,aAAa,EAAE,OAAO;aACvB;YACD;gBACE,EAAE,EAAE,qBAAqB;gBACzB,IAAI,EAAE,8BAA8B;gBACpC,QAAQ,EAAE,GAAG,EAAE;oBACb,KAAK,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC;gBAC/B,CAAC;gBACD,aAAa,EAAE,aAAa;aAC7B;YACD;gBACE,EAAE,EAAE,mBAAmB;gBACvB,IAAI,EAAE,WAAW;gBACjB,QAAQ,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,6BAAW,CAAC,KAAK,CAAC;aACzD;YACD;gBACE,EAAE,EAAE,iBAAiB;gBACrB,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,6BAAW,CAAC,MAAM,CAAC;gBACzD,aAAa,EAAE,GAAG;aACnB;YACD;gBACE,EAAE,EAAE,yBAAyB;gBAC7B,IAAI,EAAE,wCAAwC;gBAC9C,QAAQ,EAAE,KAAK,IAAI,EAAE;oBACnB,MAAM,MAAM,GAAG,MAAM,IAAA,6CAAqC,EAAC,KAAK,CAAC,CAAC;oBAClE,MAAM,KAAK,GAAG,SAAS,MAAM,CAAC,KAAK,aAAa,MAAM,CAAC,GAAG,EAAE,CAAC;oBAC7D,IAAA,2BAAe,EAAC,KAAK,CAAC,CAAC;gBACzB,CAAC;aACF;YACD;gBACE,EAAE,EAAE,yBAAyB;gBAC7B,IAAI,EAAE,yBAAyB;gBAC/B,QAAQ,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,wBAAwB,EAAE;gBAC1D,aAAa,EAAE,GAAG;aACnB;YACD;gBACE,EAAE,EAAE,mBAAmB;gBACvB,IAAI,EAAE,UAAU;gBAChB,QAAQ,EAAE,GAAG,EAAE;oBACb,KAAK,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;gBAC1B,CAAC;gBACD,aAAa,EAAE,QAAQ;aACxB;YACD;gBACE,EAAE,EAAE,+BAA+B;gBACnC,IAAI,EAAE,4DAA4D;gBAClE,QAAQ,EAAE,GAAG,EAAE;oBACb,MAAM,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,wBAAwB,EAAE,CAAC;oBACzD,IAAI,KAAK,EAAE,CAAC;wBACV,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC;4BACtB,KAAK,EAAE,KAAK,CAAC,KAAK;4BAClB,GAAG,EAAE,KAAK,CAAC,GAAG;4BACd,EAAE,EAAE,UAAU;yBACf,CAAC,CAAC;wBAEH,oCAAoC;wBACpC,MAAM,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC,SAAS,CAAC;wBAC5C,IAAI,SAAS,CAAC,IAAI,KAAK,aAAa,EAAE,CAAC;4BACrC,KAAK,CAAC,SAAS,CAAC,UAAU,CAAC;gCACzB,KAAK,EAAE,KAAK,CAAC,KAAK;gCAClB,GAAG,EAAE,KAAK,CAAC,GAAG;gCACd,SAAS,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC;6BAChC,CAAC,CAAC;wBACL,CAAC;oBACH,CAAC;gBACH,CAAC;gBACD,aAAa,EAAE,GAAG;aACnB;YACD;gBACE,EAAE,EAAE,sBAAsB;gBAC1B,IAAI,EAAE,oDAAoD;gBAC1D,QAAQ,EAAE,GAAG,EAAE;oBACb,MAAM,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,wBAAwB,EAAE,CAAC;oBACzD,IAAI,KAAK,EAAE,CAAC;wBACV,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC;4BACtB,KAAK,EAAE,KAAK,CAAC,KAAK;4BAClB,GAAG,EAAE,KAAK,CAAC,GAAG;yBACf,CAAC,CAAC;oBACL,CAAC;gBACH,CAAC;gBACD,aAAa,EAAE,SAAS;aACzB;YACD;gBACE,EAAE,EAAE,6BAA6B;gBACjC,IAAI,EAAE,sBAAsB;gBAC5B,QAAQ,EAAE,GAAG,EAAE;oBACb,MAAM,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC,SAAS,CAAC;oBAC5C,IAAI,SAAS,CAAC,IAAI,KAAK,MAAM,EAAE,CAAC;wBAC9B,KAAK,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;oBACvC,CAAC;gBACH,CAAC;gBACD,aAAa,EAAE,QAAQ;aACxB;YACD;gBACE,EAAE,EAAE,mBAAmB;gBACvB,IAAI,EAAE,WAAW;gBACjB,QAAQ,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,cAAc,CAAC,SAAS,CAAC;gBACrD,aAAa,EAAE,OAAO;aACvB;YACD;gBACE,EAAE,EAAE,mBAAmB;gBACvB,IAAI,EAAE,WAAW;gBACjB,QAAQ,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,cAAc,CAAC,UAAU,CAAC;gBACtD,aAAa,EAAE,OAAO;aACvB;YACD;gBACE,EAAE,EAAE,uBAAuB;gBAC3B,IAAI,EAAE,gBAAgB;gBACtB,QAAQ,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,iBAAiB,CAAC,SAAS,CAAC;gBACxD,aAAa,EAAE,GAAG;aACnB;YACD;gBACE,EAAE,EAAE,uBAAuB;gBAC3B,IAAI,EAAE,gBAAgB;gBACtB,QAAQ,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,iBAAiB,CAAC,UAAU,CAAC;gBACzD,aAAa,EAAE,GAAG;aACnB;YACD;gBACE,EAAE,EAAE,oBAAoB;gBACxB,IAAI,EAAE,YAAY;gBAClB,QAAQ,EAAE,GAAG,EAAE;oBACb,gCAAgC;oBAChC,sEAAsE;oBACtE,sEAAsE;oBACtE,kBAAkB;oBAClB,gEAAgE;oBAChE,uEAAuE;oBACvE,qEAAqE;oBACrE,IAAI,cAAwB,CAAC;oBAC7B,MAAM,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC,SAAS,CAAC;oBAC5C,IAAI,SAAS,CAAC,IAAI,KAAK,MAAM,EAAE,CAAC;wBAC9B,mEAAmE;wBACnE,2BAA2B;wBAC3B,MAAM,qBAAqB,GACzB,KAAK,CAAC,SAAS,CAAC,KAAK,KAAK,SAAS,CAAC,KAAK;4BACzC,KAAK,CAAC,SAAS,CAAC,GAAG,KAAK,SAAS,CAAC,GAAG,CAAC;wBACxC,IAAI,CAAC,qBAAqB,EAAE,CAAC;4BAC3B,+DAA+D;4BAC/D,8DAA8D;4BAC9D,yBAAyB;4BACzB,cAAc,GAAG,SAAS,CAAC,SAAS,CAAC;wBACvC,CAAC;6BAAM,CAAC;4BACN,oEAAoE;4BACpE,uBAAuB;4BACvB,cAAc,GAAG,KAAK,CAAC,SAAS,CAAC,UAAU;iCACxC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;iCACjB,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,KAAK,SAAS,CAAC,CAAC;wBACxC,CAAC;oBACH,CAAC;yBAAM,CAAC;wBACN,uDAAuD;wBACvD,cAAc,GAAG,KAAK,CAAC,SAAS,CAAC,UAAU;6BACxC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;6BACjB,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,KAAK,SAAS,CAAC,CAAC;oBACxC,CAAC;oBACD,MAAM,EAAC,KAAK,EAAE,GAAG,EAAC,GAAG,KAAK,CAAC,SAAS,CAAC;oBACrC,KAAK,CAAC,SAAS,CAAC,UAAU,CAAC;wBACzB,KAAK;wBACL,GAAG;wBACH,SAAS,EAAE,cAAc;qBAC1B,CAAC,CAAC;gBACL,CAAC;gBACD,aAAa,EAAE,OAAO;aACvB;YACD;gBACE,EAAE,EAAE,iCAAiC;gBACrC,IAAI,EAAE,oDAAoD;gBAC1D,QAAQ,EAAE,GAAG,EAAE;oBACb,MAAM,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC,SAAS,CAAC;oBAC5C,MAAM,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,wBAAwB,EAAE,CAAC;oBACzD,IAAI,SAAS,CAAC,IAAI,KAAK,aAAa,IAAI,KAAK,EAAE,CAAC;wBAC9C,KAAK,CAAC,SAAS,CAAC,UAAU,CAAC;4BACzB,KAAK,EAAE,KAAK,CAAC,KAAK;4BAClB,GAAG,EAAE,KAAK,CAAC,GAAG;4BACd,SAAS,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC;yBAChC,CAAC,CAAC;oBACL,CAAC;gBACH,CAAC;gBACD,kDAAkD;gBAClD,sBAAsB;aACvB;YACD;gBACE,EAAE,EAAE,uBAAuB;gBAC3B,IAAI,EAAE,eAAe;gBACrB,aAAa,EAAE,GAAG;gBAClB,QAAQ,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,wBAAwB,EAAE;aACtD;SACF,CAAC;QAEF,iDAAiD;QACjD,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;YACnB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC;QACtD,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,aAAa;QACnB,MAAM,OAAO,GAAG,kBAAO,CAAC,QAAQ,CAAC,OAAO,CAAC;QACzC,MAAM,WAAW,GAAG,OAAO,CAAC,IAAI,CAAC;QACjC,MAAM,aAAa,GAAG,OAAO,CAAC,aAAa,CAAC;QAC5C,IAAI,aAAa,KAAK,SAAS,EAAE,CAAC;YAChC,OAAO,IAAA,iBAAC,EACN,uBAAuB,EACvB,IAAA,iBAAC,EAAC,wCAAwC,EAAE;gBAC1C,KAAK,EAAE,EAAE;gBACT,WAAW,EAAE,aAAa;aAC3B,CAAC,CACH,CAAC;QACJ,CAAC;aAAM,IAAI,WAAW,KAAK,6BAAW,CAAC,OAAO,EAAE,CAAC;YAC/C,OAAO,IAAI,CAAC,oBAAoB,EAAE,CAAC;QACrC,CAAC;aAAM,IAAI,WAAW,KAAK,6BAAW,CAAC,MAAM,EAAE,CAAC;YAC9C,OAAO,IAAI,CAAC,mBAAmB,EAAE,CAAC;QACpC,CAAC;aAAM,IAAI,WAAW,KAAK,6BAAW,CAAC,KAAK,EAAE,CAAC;YAC7C,OAAO,IAAI,CAAC,kBAAkB,EAAE,CAAC;QACnC,CAAC;aAAM,IAAI,WAAW,KAAK,6BAAW,CAAC,MAAM,EAAE,CAAC;YAC9C,OAAO,IAAI,CAAC,mBAAmB,EAAE,CAAC;QACpC,CAAC;aAAM,CAAC;YACN,IAAA,2BAAiB,EAAC,WAAW,CAAC,CAAC;QACjC,CAAC;IACH,CAAC;IAED,mBAAmB;QACjB,MAAM,OAAO,GAAG,kBAAO,CAAC,QAAQ,CAAC,OAAO,CAAC;QACzC,MAAM,MAAM,GAAG,IAAA,sBAAY,EAAC,OAAO,CAAC,aAAa,CAAC,CAAC;QAEnD,IAAI,OAAO,GAAgC,SAAS,CAAC;QAErD,IAAI,MAAM,CAAC,OAAO,EAAE,CAAC;YACnB,MAAM,KAAK,GAAG,IAAI,mBAAW,CAC3B,MAAM,CAAC,OAAO,EACd,CAAC,EAAC,WAAW,EAAC,EAAE,EAAE,CAAC,WAAW,CAC/B,CAAC;YACF,MAAM,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACxC,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE;gBAC9B,OAAO;oBACL,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,GAAG;oBACpB,WAAW,EAAE,MAAM,CAAC,QAAQ;iBAC7B,CAAC;YACJ,CAAC,CAAC,CAAC;QACL,CAAC;QAED,OAAO,IAAA,iBAAC,EAAC,iBAAO,EAAE;YAChB,KAAK,EAAE,OAAO,CAAC,IAAI;YACnB,WAAW,EAAE,MAAM,CAAC,IAAI;YACxB,QAAQ,EAAE,iBAAiB;YAC3B,YAAY,EAAE,aAAa;YAC3B,mBAAmB,EAAE,IAAI;YACzB,OAAO;YACP,mBAAmB,EAAE,OAAO,CAAC,cAAc;YAC3C,uBAAuB,EAAE,CAAC,KAAK,EAAE,EAAE;gBACjC,OAAO,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;gBACjC,mBAAG,CAAC,kBAAkB,EAAE,CAAC;YAC3B,CAAC;YACD,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE;gBACjB,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;gBACvB,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;gBAC7B,mBAAG,CAAC,kBAAkB,EAAE,CAAC;YAC3B,CAAC;YACD,QAAQ,EAAE,CAAC,KAAK,EAAE,IAAI,EAAE,EAAE;gBACxB,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAC/B,CAAC;YACD,OAAO,EAAE,GAAG,EAAE;gBACZ,OAAO,CAAC,YAAY,EAAE,CAAC;YACzB,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,oBAAoB;QAClB,8CAA8C;QAC9C,MAAM,EAAC,QAAQ,EAAE,OAAO,EAAC,GAAG,kBAAO,CAAC,QAAQ,CAAC;QAC7C,MAAM,YAAY,GAAG,QAAQ,CAAC,mBAAmB,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAEhE,uEAAuE;QACvE,oBAAoB;QACpB,MAAM,sBAAsB,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE;YACtD,OAAO;gBACL,YAAY,EAAE,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,CAAC;gBAClE,GAAG;aACJ,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,0BAA0B;QAC1B,MAAM,MAAM,GAAG,sBAAsB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;YAClD,IAAI,CAAC,CAAC,YAAY,KAAK,CAAC,CAAC,YAAY,EAAE,CAAC;gBACtC,0DAA0D;gBAC1D,OAAO,CAAC,CAAC;YACX,CAAC;iBAAM,CAAC;gBACN,OAAO,CAAC,CAAC,YAAY,GAAG,CAAC,CAAC,YAAY,CAAC;YACzC,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,MAAM,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,EAAC,YAAY,EAAE,GAAG,EAAC,EAAiB,EAAE;YAChE,MAAM,EAAC,QAAQ,EAAE,EAAE,EAAE,aAAa,EAAC,GAAG,GAAG,CAAC;YAC1C,OAAO;gBACL,GAAG,EAAE,EAAE;gBACP,WAAW,EAAE,QAAQ;gBACrB,GAAG,EAAE,YAAY,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,SAAS;gBACtD,YAAY,EAAE,aAAa,IAAI,IAAA,iBAAC,EAAC,4BAAY,EAAE,EAAC,MAAM,EAAE,aAAa,EAAC,CAAC;aACxE,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,OAAO,IAAA,iBAAC,EAAC,iBAAO,EAAE;YAChB,KAAK,EAAE,OAAO,CAAC,IAAI;YACnB,WAAW,EAAE,oBAAoB;YACjC,QAAQ,EAAE,iBAAiB;YAC3B,YAAY,EAAE,cAAc;YAC5B,OAAO;YACP,aAAa,EAAE,IAAI;YACnB,mBAAmB,EAAE,IAAI;YACzB,mBAAmB,EAAE,OAAO,CAAC,cAAc;YAC3C,uBAAuB,EAAE,CAAC,KAAK,EAAE,EAAE;gBACjC,OAAO,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;gBACjC,mBAAG,CAAC,kBAAkB,EAAE,CAAC;YAC3B,CAAC;YACD,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE;gBACjB,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;gBACvB,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;gBAC7B,mBAAG,CAAC,kBAAkB,EAAE,CAAC;YAC3B,CAAC;YACD,OAAO,EAAE,GAAG,EAAE;gBACZ,IAAI,IAAI,CAAC,cAAc,EAAE,CAAC;oBACxB,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;gBAC7B,CAAC;gBACD,OAAO,CAAC,KAAK,EAAE,CAAC;YAClB,CAAC;YACD,QAAQ,EAAE,CAAC,GAAW,EAAE,EAAE;gBACxB,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;gBAC3B,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;YAC3B,CAAC;YACD,QAAQ,EAAE,GAAG,EAAE;gBACb,OAAO,CAAC,KAAK,EAAE,CAAC;YAClB,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAEO,gBAAgB,CAAC,EAAU;QACjC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;QAClE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC7B,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YACtC,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;QAC9B,CAAC;IACH,CAAC;IAED,kBAAkB;QAChB,MAAM,EAAE,GAAG,gEAAgE,CAAC;QAC5E,OAAO,IAAA,iBAAC,EAAC,iBAAO,EAAE;YAChB,KAAK,EAAE,kBAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI;YACpC,WAAW,EAAE,EAAE;YACf,QAAQ,EAAE,iBAAiB;YAC3B,YAAY,EAAE,YAAY;YAE1B,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE;gBACjB,kBAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;gBACxC,mBAAG,CAAC,kBAAkB,EAAE,CAAC;YAC3B,CAAC;YACD,QAAQ,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE,EAAE;gBACvB,MAAM,MAAM,GAAG;oBACb,KAAK,EAAE,IAAA,4CAA6B,EAAC,KAAK,CAAC;oBAC3C,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,eAAe;iBAC9C,CAAC;gBACF,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,eAAe,CAAC;gBAC9C,MAAM,KAAK,GAAG,kBAAO,CAAC,QAAQ,CAAC,KAAK,CAAC;gBACrC,IAAI,KAAK,KAAK,SAAS;oBAAE,OAAO,CAAC,kBAAkB;gBACnD,IAAA,qCAAkB,EAAC,KAAK,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC;YACzC,CAAC;YACD,OAAO,EAAE,GAAG,EAAE;gBACZ,kBAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;gBACrC,IAAI,IAAI,CAAC,cAAc,EAAE,CAAC;oBACxB,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;gBAC7B,CAAC;gBACD,kBAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;gBACjC,mBAAG,CAAC,kBAAkB,EAAE,CAAC;YAC3B,CAAC;YACD,QAAQ,EAAE,GAAG,EAAE;gBACb,kBAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;YACnC,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,mBAAmB;QACjB,OAAO,IAAA,iBAAC,EAAC,iBAAO,EAAE;YAChB,KAAK,EAAE,kBAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI;YACpC,WAAW,EAAE,qDAAqD;YAClE,QAAQ,EAAE,iBAAiB;YAC3B,OAAO,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;gBACxB,IAAI,KAAK,KAAK,GAAG,EAAE,CAAC;oBAClB,kBAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,6BAAW,CAAC,OAAO,CAAC,CAAC;oBACtD,OAAO;gBACT,CAAC;qBAAM,IAAI,KAAK,KAAK,GAAG,EAAE,CAAC;oBACzB,kBAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,6BAAW,CAAC,KAAK,CAAC,CAAC;oBACpD,OAAO;gBACT,CAAC;gBACD,kBAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;gBACxC,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS;oBAAE,OAAO,CAAC,mBAAmB;gBACzD,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE,CAAC;oBACtB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;gBAClC,CAAC;qBAAM,CAAC;oBACN,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;gBAC5B,CAAC;YACH,CAAC;YACD,OAAO,EAAE,GAAG,EAAE;gBACZ,IAAI,IAAI,CAAC,cAAc,EAAE,CAAC;oBACxB,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;gBAC7B,CAAC;YACH,CAAC;YACD,QAAQ,EAAE,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;gBAC/B,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS;oBAAE,OAAO,CAAC,mBAAmB;gBACzD,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;gBAChC,IAAI,KAAK,EAAE,CAAC;oBACV,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC;gBACpC,CAAC;qBAAM,CAAC;oBACN,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;gBAClC,CAAC;gBACD,IAAI,IAAI,CAAC,cAAc,EAAE,CAAC;oBACxB,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;gBAC7B,CAAC;YACH,CAAC;YACD,YAAY,EAAE,IAAI,CAAC,iBAAiB,EAAE;SACvC,CAAC,CAAC;IACL,CAAC;IAEO,iBAAiB;QACvB,MAAM,QAAQ,GAAG,EAAE,CAAC;QACpB,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,aAAa,CAAC;QACjD,IAAI,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,gBAAgB,EAAE,CAAC;YACxC,QAAQ,CAAC,IAAI,CAAC,IAAA,iBAAC,EAAC,UAAU,EAAE,IAAA,iBAAC,EAAC,iBAAO,CAAC,CAAC,CAAC,CAAC;QAC3C,CAAC;aAAM,IAAI,OAAO,KAAK,SAAS,EAAE,CAAC;YACjC,MAAM,SAAS,GAAG,IAAA,sBAAY,EAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC;YAClD,MAAM,KAAK,GAAG,SAAS,CAAC,WAAW,CAAC;YACpC,MAAM,KAAK,GAAG,OAAO,CAAC,YAAY,IAAI,CAAC,CAAC;YACxC,QAAQ,CAAC,IAAI,CACX,IAAA,iBAAC,EAAC,UAAU,EAAE,GAAG,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,MAAM,KAAK,EAAE,EAAE,CAAC,EACrE,IAAA,iBAAC,EACC,QAAQ,EACR;gBACE,OAAO,EAAE,GAAG,EAAE,CAAC,SAAS,CAAC,aAAa,EAAE;aACzC,EACD,IAAA,iBAAC,EAAC,uBAAuB,EAAE,qBAAqB,CAAC,CAClD,EACD,IAAA,iBAAC,EACC,QAAQ,EACR;gBACE,OAAO,EAAE,GAAG,EAAE,CAAC,SAAS,CAAC,WAAW,EAAE;aACvC,EACD,IAAA,iBAAC,EAAC,wBAAwB,EAAE,sBAAsB,CAAC,CACpD,CACF,CAAC;QACJ,CAAC;QACD,OAAO,IAAA,iBAAC,EAAC,cAAc,EAAE,QAAQ,CAAC,CAAC;IACrC,CAAC;IAED,QAAQ,CAAC,KAAiB;QACxB,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACtC,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,IAAI;QACF,MAAM,GAAG,GAAG,kBAAO,CAAC,QAAQ,CAAC;QAC7B,MAAM,OAAO,GAAmB,EAAE,CAAC;QACnC,KAAK,MAAM,EAAC,EAAE,EAAE,aAAa,EAAC,IAAI,GAAG,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;YACxD,IAAI,aAAa,EAAE,CAAC;gBAClB,OAAO,CAAC,IAAI,CAAC;oBACX,QAAQ,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC;oBAC3C,MAAM,EAAE,aAAa;iBACtB,CAAC,CAAC;YACL,CAAC;QACH,CAAC;QAED,OAAO,IAAA,iBAAC,EACN,8BAAa,EACb,EAAC,OAAO,EAAC,EACT,IAAA,iBAAC,EACC,MAAM,EACN,IAAA,iBAAC,EAAC,iBAAO,EAAE,EAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAC,CAAC,EAC/B,IAAA,iBAAC,EAAC,eAAM,EAAE;YACR,OAAO,EAAE,IAAI,CAAC,aAAa,EAAE;YAC7B,KAAK,EAAE,IAAI,CAAC,KAAK;SAClB,CAAC,EACF,GAAG,CAAC,KAAK,CAAC,yBAAyB,CAAC,GAAG,CAAC,KAAK,CAAC,EAC9C,IAAA,iBAAC,EAAC,8BAAa,CAAC,EAChB,IAAA,wCAAgC,GAAE,EAClC,GAAG,CAAC,aAAa,CAAC,eAAe,EAAE,CACpC,CACF,CAAC;IACJ,CAAC;IAED,QAAQ,CAAC,EAAC,GAAG,EAAa;QACxB,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,CAAC;QAChC,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,QAAQ,CAAC,CAAa;QACpB,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;QAEhC,0EAA0E;QAC1E,qEAAqE;QACrE,wEAAwE;QACxE,wEAAwE;QACxE,6CAA6C;QAC7C,2EAA2E;QAC3E,0EAA0E;QAC1E,uEAAuE;QACvE,sEAAsE;QACtE,4EAA4E;QAC5E,mEAAmE;QACnE,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;IACvB,CAAC;IAEO,qBAAqB,CAAC,GAAY;QACxC,MAAM,EAAE,GAAG,IAAA,mBAAO,EAAC,GAAG,EAAE,iBAAiB,CAAC,CAAC;QAC3C,IAAI,EAAE,IAAI,EAAE,YAAY,gBAAgB,EAAE,CAAC;YACzC,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QAC3B,CAAC;IACH,CAAC;IAEO,iBAAiB;QACvB,IAAI,kBAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,sBAAsB,EAAE,CAAC;YACpD,MAAM,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC;YACtC,IAAI,SAAS,EAAE,CAAC;gBACd,SAAS,CAAC,KAAK,EAAE,CAAC;gBAClB,IAAI,kBAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,sBAAsB,KAAK,SAAS,EAAE,CAAC;oBAClE,SAAS,CAAC,MAAM,EAAE,CAAC;gBACrB,CAAC;qBAAM,CAAC;oBACN,SAAS,CAAC,iBAAiB,CACzB,kBAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,sBAAsB,EAC/C,kBAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,sBAAsB,CAChD,CAAC;gBACJ,CAAC;YACH,CAAC;YACD,kBAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC;QAC5C,CAAC;IACH,CAAC;IAEO,KAAK,CAAC,oBAAoB;QAChC,+CAA+C;QAC/C,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,EAAE,SAAS,CAAC,SAAS,KAAK,MAAM,CAAC;QAC/D,MAAM,sBAAsB,GAAG,kBAAkB,CAAC;QAElD,IACE,CAAC,WAAW;YACZ,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,sBAAsB,CAAC,KAAK,MAAM;YAC9D,kBAAO,CAAC,QAAQ,CAAC,YAAY,EAC7B,CAAC;YACD,sEAAsE;YACtE,gEAAgE;YAChE,OAAO;QACT,CAAC;QAED,uEAAuE;QACvE,8CAA8C;QAC9C,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,sBAAsB,EAAE,MAAM,CAAC,CAAC;QAE5D,IAAA,iBAAS,EAAC;YACR,KAAK,EAAE,SAAS;YAChB,OAAO,EAAE,IAAA,iBAAC,EACR,KAAK,EACL,IAAA,iBAAC,EACC,MAAM,EACN,oDAAoD,EACpD,yBAAyB,EACzB,IAAA,iBAAC,EACC,GAAG,EACH,EAAC,IAAI,EAAE,qDAAqD,EAAC,EAC7D,qBAAqB,CACtB,EACD,eAAe,CAChB,EACD,IAAA,iBAAC,EAAC,IAAI,CAAC,CACR;YACD,OAAO,EAAE,EAAE;SACZ,CAAC,CAAC;IACL,CAAC;CACF;AAprBD,wCAorBC","sourcesContent":["// Copyright (C) 2023 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport m from 'mithril';\nimport {copyToClipboard} from '../base/clipboard';\nimport {findRef} from '../base/dom_utils';\nimport {FuzzyFinder} from '../base/fuzzy';\nimport {assertExists, assertUnreachable} from '../base/logging';\nimport {undoCommonChatAppReplacements} from '../base/string_utils';\nimport {\n  setDurationPrecision,\n  setTimestampFormat,\n} from '../core/timestamp_format';\nimport {raf} from '../core/raf_scheduler';\nimport {Command} from '../public/command';\nimport {HotkeyConfig, HotkeyContext} from '../widgets/hotkey_context';\nimport {HotkeyGlyphs} from '../widgets/hotkey_glyphs';\nimport {maybeRenderFullscreenModalDialog, showModal} from '../widgets/modal';\nimport {CookieConsent} from '../core/cookie_consent';\nimport {toggleHelp} from './help_modal';\nimport {Omnibox, OmniboxOption} from './omnibox';\nimport {addQueryResultsTab} from '../components/query_table/query_result_tab';\nimport {Sidebar} from './sidebar';\nimport {Topbar} from './topbar';\nimport {shareTrace} from './trace_share_utils';\nimport {AggregationsTabs} from './aggregation_tab';\nimport {OmniboxMode} from '../core/omnibox_manager';\nimport {DisposableStack} from '../base/disposable_stack';\nimport {Spinner} from '../widgets/spinner';\nimport {TraceImpl} from '../core/trace_impl';\nimport {AppImpl} from '../core/app_impl';\nimport {NotesEditorTab} from './notes_editor_tab';\nimport {NotesListEditor} from './notes_list_editor';\nimport {getTimeSpanOfSelectionOrVisibleWindow} from '../public/utils';\nimport {DurationPrecision, TimestampFormat} from '../public/timeline';\n\nconst OMNIBOX_INPUT_REF = 'omnibox';\n\n// This wrapper creates a new instance of UiMainPerTrace for each new trace\n// loaded (including the case of no trace at the beginning).\nexport class UiMain implements m.ClassComponent {\n  view() {\n    const currentTraceId = AppImpl.instance.trace?.engine.engineId ?? '';\n    return [m(UiMainPerTrace, {key: currentTraceId})];\n  }\n}\n\n// This components gets destroyed and recreated every time the current trace\n// changes. Note that in the beginning the current trace is undefined.\nexport class UiMainPerTrace implements m.ClassComponent {\n  // NOTE: this should NOT need to be an AsyncDisposableStack. If you feel the\n  // need of making it async because you want to clean up SQL resources, that\n  // will cause bugs (see comments in oncreate()).\n  private trash = new DisposableStack();\n  private omniboxInputEl?: HTMLInputElement;\n  private recentCommands: string[] = [];\n  private trace?: TraceImpl;\n\n  // This function is invoked once per trace.\n  constructor() {\n    const app = AppImpl.instance;\n    const trace = app.trace;\n    this.trace = trace;\n\n    // Register global commands (commands that are useful even without a trace\n    // loaded).\n    const globalCmds: Command[] = [\n      {\n        id: 'perfetto.OpenCommandPalette',\n        name: 'Open command palette',\n        callback: () => app.omnibox.setMode(OmniboxMode.Command),\n        defaultHotkey: '!Mod+Shift+P',\n      },\n\n      {\n        id: 'perfetto.ShowHelp',\n        name: 'Show help',\n        callback: () => toggleHelp(),\n        defaultHotkey: '?',\n      },\n    ];\n    globalCmds.forEach((cmd) => {\n      this.trash.use(app.commands.registerCommand(cmd));\n    });\n\n    // When the UI loads there is no trace. There is no point registering\n    // commands or anything in this state as they will be useless.\n    if (trace === undefined) return;\n    document.title = `${trace.traceInfo.traceTitle || 'Trace'} - Perfetto UI`;\n    this.maybeShowJsonWarning();\n\n    // Register the aggregation tabs.\n    this.trash.use(new AggregationsTabs(trace));\n\n    // Register the notes manager+editor.\n    this.trash.use(trace.tabs.registerDetailsPanel(new NotesEditorTab(trace)));\n\n    this.trash.use(\n      trace.tabs.registerTab({\n        uri: 'notes.manager',\n        isEphemeral: false,\n        content: {\n          getTitle: () => 'Notes & markers',\n          render: () => m(NotesListEditor, {trace}),\n        },\n      }),\n    );\n\n    const cmds: Command[] = [\n      {\n        id: 'perfetto.SetTimestampFormat',\n        name: 'Set timestamp and duration format',\n        callback: async () => {\n          const TF = TimestampFormat;\n          const result = await app.omnibox.prompt('Select format...', {\n            values: [\n              {format: TF.Timecode, name: 'Timecode'},\n              {format: TF.UTC, name: 'Realtime (UTC)'},\n              {format: TF.TraceTz, name: 'Realtime (Trace TZ)'},\n              {format: TF.Seconds, name: 'Seconds'},\n              {format: TF.Milliseconds, name: 'Milliseconds'},\n              {format: TF.Microseconds, name: 'Microseconds'},\n              {format: TF.TraceNs, name: 'Trace nanoseconds'},\n              {\n                format: TF.TraceNsLocale,\n                name: 'Trace nanoseconds (with locale-specific formatting)',\n              },\n            ],\n            getName: (x) => x.name,\n          });\n          result && setTimestampFormat(result.format);\n          raf.scheduleFullRedraw();\n        },\n      },\n      {\n        id: 'perfetto.SetDurationPrecision',\n        name: 'Set duration precision',\n        callback: async () => {\n          const DF = DurationPrecision;\n          const result = await app.omnibox.prompt(\n            'Select duration precision mode...',\n            {\n              values: [\n                {format: DF.Full, name: 'Full'},\n                {format: DF.HumanReadable, name: 'Human readable'},\n              ],\n              getName: (x) => x.name,\n            },\n          );\n          result && setDurationPrecision(result.format);\n          raf.scheduleFullRedraw();\n        },\n      },\n      {\n        id: 'perfetto.TogglePerformanceMetrics',\n        name: 'Toggle performance metrics',\n        callback: () =>\n          (app.perfDebugging.enabled = !app.perfDebugging.enabled),\n      },\n      {\n        id: 'perfetto.ShareTrace',\n        name: 'Share trace',\n        callback: shareTrace,\n      },\n      {\n        id: 'perfetto.SearchNext',\n        name: 'Go to next search result',\n        callback: () => {\n          trace.search.stepForward();\n        },\n        defaultHotkey: 'Enter',\n      },\n      {\n        id: 'perfetto.SearchPrev',\n        name: 'Go to previous search result',\n        callback: () => {\n          trace.search.stepBackwards();\n        },\n        defaultHotkey: 'Shift+Enter',\n      },\n      {\n        id: 'perfetto.RunQuery',\n        name: 'Run query',\n        callback: () => trace.omnibox.setMode(OmniboxMode.Query),\n      },\n      {\n        id: 'perfetto.Search',\n        name: 'Search',\n        callback: () => trace.omnibox.setMode(OmniboxMode.Search),\n        defaultHotkey: '/',\n      },\n      {\n        id: 'perfetto.CopyTimeWindow',\n        name: `Copy selected time window to clipboard`,\n        callback: async () => {\n          const window = await getTimeSpanOfSelectionOrVisibleWindow(trace);\n          const query = `ts >= ${window.start} and ts < ${window.end}`;\n          copyToClipboard(query);\n        },\n      },\n      {\n        id: 'perfetto.FocusSelection',\n        name: 'Focus current selection',\n        callback: () => trace.selection.scrollToCurrentSelection(),\n        defaultHotkey: 'F',\n      },\n      {\n        id: 'perfetto.Deselect',\n        name: 'Deselect',\n        callback: () => {\n          trace.selection.clear();\n        },\n        defaultHotkey: 'Escape',\n      },\n      {\n        id: 'perfetto.SetTemporarySpanNote',\n        name: 'Set the temporary span note based on the current selection',\n        callback: () => {\n          const range = trace.selection.findTimeRangeOfSelection();\n          if (range) {\n            trace.notes.addSpanNote({\n              start: range.start,\n              end: range.end,\n              id: '__temp__',\n            });\n\n            // Also select an area for this span\n            const selection = trace.selection.selection;\n            if (selection.kind === 'track_event') {\n              trace.selection.selectArea({\n                start: range.start,\n                end: range.end,\n                trackUris: [selection.trackUri],\n              });\n            }\n          }\n        },\n        defaultHotkey: 'M',\n      },\n      {\n        id: 'perfetto.AddSpanNote',\n        name: 'Add a new span note based on the current selection',\n        callback: () => {\n          const range = trace.selection.findTimeRangeOfSelection();\n          if (range) {\n            trace.notes.addSpanNote({\n              start: range.start,\n              end: range.end,\n            });\n          }\n        },\n        defaultHotkey: 'Shift+M',\n      },\n      {\n        id: 'perfetto.RemoveSelectedNote',\n        name: 'Remove selected note',\n        callback: () => {\n          const selection = trace.selection.selection;\n          if (selection.kind === 'note') {\n            trace.notes.removeNote(selection.id);\n          }\n        },\n        defaultHotkey: 'Delete',\n      },\n      {\n        id: 'perfetto.NextFlow',\n        name: 'Next flow',\n        callback: () => trace.flows.focusOtherFlow('Forward'),\n        defaultHotkey: 'Mod+]',\n      },\n      {\n        id: 'perfetto.PrevFlow',\n        name: 'Prev flow',\n        callback: () => trace.flows.focusOtherFlow('Backward'),\n        defaultHotkey: 'Mod+[',\n      },\n      {\n        id: 'perfetto.MoveNextFlow',\n        name: 'Move next flow',\n        callback: () => trace.flows.moveByFocusedFlow('Forward'),\n        defaultHotkey: ']',\n      },\n      {\n        id: 'perfetto.MovePrevFlow',\n        name: 'Move prev flow',\n        callback: () => trace.flows.moveByFocusedFlow('Backward'),\n        defaultHotkey: '[',\n      },\n      {\n        id: 'perfetto.SelectAll',\n        name: 'Select all',\n        callback: () => {\n          // This is a dual state command:\n          // - If one ore more tracks are already area selected, expand the time\n          //   range to include the entire trace, but keep the selection on just\n          //   these tracks.\n          // - If nothing is selected, or all selected tracks are entirely\n          //   selected, then select the entire trace. This allows double tapping\n          //   Ctrl+A to select the entire track, then select the entire trace.\n          let tracksToSelect: string[];\n          const selection = trace.selection.selection;\n          if (selection.kind === 'area') {\n            // Something is already selected, let's see if it covers the entire\n            // span of the trace or not\n            const coversEntireTimeRange =\n              trace.traceInfo.start === selection.start &&\n              trace.traceInfo.end === selection.end;\n            if (!coversEntireTimeRange) {\n              // If the current selection is an area which does not cover the\n              // entire time range, preserve the list of selected tracks and\n              // expand the time range.\n              tracksToSelect = selection.trackUris;\n            } else {\n              // If the entire time range is already covered, update the selection\n              // to cover all tracks.\n              tracksToSelect = trace.workspace.flatTracks\n                .map((t) => t.uri)\n                .filter((uri) => uri !== undefined);\n            }\n          } else {\n            // If the current selection is not an area, select all.\n            tracksToSelect = trace.workspace.flatTracks\n              .map((t) => t.uri)\n              .filter((uri) => uri !== undefined);\n          }\n          const {start, end} = trace.traceInfo;\n          trace.selection.selectArea({\n            start,\n            end,\n            trackUris: tracksToSelect,\n          });\n        },\n        defaultHotkey: 'Mod+A',\n      },\n      {\n        id: 'perfetto.ConvertSelectionToArea',\n        name: 'Convert the current selection to an area selection',\n        callback: () => {\n          const selection = trace.selection.selection;\n          const range = trace.selection.findTimeRangeOfSelection();\n          if (selection.kind === 'track_event' && range) {\n            trace.selection.selectArea({\n              start: range.start,\n              end: range.end,\n              trackUris: [selection.trackUri],\n            });\n          }\n        },\n        // TODO(stevegolton): Decide on a sensible hotkey.\n        // defaultHotkey: 'L',\n      },\n      {\n        id: 'perfetto.ToggleDrawer',\n        name: 'Toggle drawer',\n        defaultHotkey: 'Q',\n        callback: () => trace.tabs.toggleTabPanelVisibility(),\n      },\n    ];\n\n    // Register each command with the command manager\n    cmds.forEach((cmd) => {\n      this.trash.use(trace.commands.registerCommand(cmd));\n    });\n  }\n\n  private renderOmnibox(): m.Children {\n    const omnibox = AppImpl.instance.omnibox;\n    const omniboxMode = omnibox.mode;\n    const statusMessage = omnibox.statusMessage;\n    if (statusMessage !== undefined) {\n      return m(\n        `.omnibox.message-mode`,\n        m(`input[readonly][disabled][ref=omnibox]`, {\n          value: '',\n          placeholder: statusMessage,\n        }),\n      );\n    } else if (omniboxMode === OmniboxMode.Command) {\n      return this.renderCommandOmnibox();\n    } else if (omniboxMode === OmniboxMode.Prompt) {\n      return this.renderPromptOmnibox();\n    } else if (omniboxMode === OmniboxMode.Query) {\n      return this.renderQueryOmnibox();\n    } else if (omniboxMode === OmniboxMode.Search) {\n      return this.renderSearchOmnibox();\n    } else {\n      assertUnreachable(omniboxMode);\n    }\n  }\n\n  renderPromptOmnibox(): m.Children {\n    const omnibox = AppImpl.instance.omnibox;\n    const prompt = assertExists(omnibox.pendingPrompt);\n\n    let options: OmniboxOption[] | undefined = undefined;\n\n    if (prompt.options) {\n      const fuzzy = new FuzzyFinder(\n        prompt.options,\n        ({displayName}) => displayName,\n      );\n      const result = fuzzy.find(omnibox.text);\n      options = result.map((result) => {\n        return {\n          key: result.item.key,\n          displayName: result.segments,\n        };\n      });\n    }\n\n    return m(Omnibox, {\n      value: omnibox.text,\n      placeholder: prompt.text,\n      inputRef: OMNIBOX_INPUT_REF,\n      extraClasses: 'prompt-mode',\n      closeOnOutsideClick: true,\n      options,\n      selectedOptionIndex: omnibox.selectionIndex,\n      onSelectedOptionChanged: (index) => {\n        omnibox.setSelectionIndex(index);\n        raf.scheduleFullRedraw();\n      },\n      onInput: (value) => {\n        omnibox.setText(value);\n        omnibox.setSelectionIndex(0);\n        raf.scheduleFullRedraw();\n      },\n      onSubmit: (value, _alt) => {\n        omnibox.resolvePrompt(value);\n      },\n      onClose: () => {\n        omnibox.rejectPrompt();\n      },\n    });\n  }\n\n  renderCommandOmnibox(): m.Children {\n    // Fuzzy-filter commands by the filter string.\n    const {commands, omnibox} = AppImpl.instance;\n    const filteredCmds = commands.fuzzyFilterCommands(omnibox.text);\n\n    // Create an array of commands with attached heuristics from the recent\n    // command register.\n    const commandsWithHeuristics = filteredCmds.map((cmd) => {\n      return {\n        recentsIndex: this.recentCommands.findIndex((id) => id === cmd.id),\n        cmd,\n      };\n    });\n\n    // Sort recentsIndex first\n    const sorted = commandsWithHeuristics.sort((a, b) => {\n      if (b.recentsIndex === a.recentsIndex) {\n        // If recentsIndex is the same, retain original sort order\n        return 0;\n      } else {\n        return b.recentsIndex - a.recentsIndex;\n      }\n    });\n\n    const options = sorted.map(({recentsIndex, cmd}): OmniboxOption => {\n      const {segments, id, defaultHotkey} = cmd;\n      return {\n        key: id,\n        displayName: segments,\n        tag: recentsIndex !== -1 ? 'recently used' : undefined,\n        rightContent: defaultHotkey && m(HotkeyGlyphs, {hotkey: defaultHotkey}),\n      };\n    });\n\n    return m(Omnibox, {\n      value: omnibox.text,\n      placeholder: 'Filter commands...',\n      inputRef: OMNIBOX_INPUT_REF,\n      extraClasses: 'command-mode',\n      options,\n      closeOnSubmit: true,\n      closeOnOutsideClick: true,\n      selectedOptionIndex: omnibox.selectionIndex,\n      onSelectedOptionChanged: (index) => {\n        omnibox.setSelectionIndex(index);\n        raf.scheduleFullRedraw();\n      },\n      onInput: (value) => {\n        omnibox.setText(value);\n        omnibox.setSelectionIndex(0);\n        raf.scheduleFullRedraw();\n      },\n      onClose: () => {\n        if (this.omniboxInputEl) {\n          this.omniboxInputEl.blur();\n        }\n        omnibox.reset();\n      },\n      onSubmit: (key: string) => {\n        this.addRecentCommand(key);\n        commands.runCommand(key);\n      },\n      onGoBack: () => {\n        omnibox.reset();\n      },\n    });\n  }\n\n  private addRecentCommand(id: string): void {\n    this.recentCommands = this.recentCommands.filter((x) => x !== id);\n    this.recentCommands.push(id);\n    while (this.recentCommands.length > 6) {\n      this.recentCommands.shift();\n    }\n  }\n\n  renderQueryOmnibox(): m.Children {\n    const ph = 'e.g. select * from sched left join thread using(utid) limit 10';\n    return m(Omnibox, {\n      value: AppImpl.instance.omnibox.text,\n      placeholder: ph,\n      inputRef: OMNIBOX_INPUT_REF,\n      extraClasses: 'query-mode',\n\n      onInput: (value) => {\n        AppImpl.instance.omnibox.setText(value);\n        raf.scheduleFullRedraw();\n      },\n      onSubmit: (query, alt) => {\n        const config = {\n          query: undoCommonChatAppReplacements(query),\n          title: alt ? 'Pinned query' : 'Omnibox query',\n        };\n        const tag = alt ? undefined : 'omnibox_query';\n        const trace = AppImpl.instance.trace;\n        if (trace === undefined) return; // No trace loaded\n        addQueryResultsTab(trace, config, tag);\n      },\n      onClose: () => {\n        AppImpl.instance.omnibox.setText('');\n        if (this.omniboxInputEl) {\n          this.omniboxInputEl.blur();\n        }\n        AppImpl.instance.omnibox.reset();\n        raf.scheduleFullRedraw();\n      },\n      onGoBack: () => {\n        AppImpl.instance.omnibox.reset();\n      },\n    });\n  }\n\n  renderSearchOmnibox(): m.Children {\n    return m(Omnibox, {\n      value: AppImpl.instance.omnibox.text,\n      placeholder: \"Search or type '>' for commands or ':' for SQL mode\",\n      inputRef: OMNIBOX_INPUT_REF,\n      onInput: (value, _prev) => {\n        if (value === '>') {\n          AppImpl.instance.omnibox.setMode(OmniboxMode.Command);\n          return;\n        } else if (value === ':') {\n          AppImpl.instance.omnibox.setMode(OmniboxMode.Query);\n          return;\n        }\n        AppImpl.instance.omnibox.setText(value);\n        if (this.trace === undefined) return; // No trace loaded.\n        if (value.length >= 4) {\n          this.trace.search.search(value);\n        } else {\n          this.trace.search.reset();\n        }\n      },\n      onClose: () => {\n        if (this.omniboxInputEl) {\n          this.omniboxInputEl.blur();\n        }\n      },\n      onSubmit: (value, _mod, shift) => {\n        if (this.trace === undefined) return; // No trace loaded.\n        this.trace.search.search(value);\n        if (shift) {\n          this.trace.search.stepBackwards();\n        } else {\n          this.trace.search.stepForward();\n        }\n        if (this.omniboxInputEl) {\n          this.omniboxInputEl.blur();\n        }\n      },\n      rightContent: this.renderStepThrough(),\n    });\n  }\n\n  private renderStepThrough() {\n    const children = [];\n    const results = this.trace?.search.searchResults;\n    if (this.trace?.search.searchInProgress) {\n      children.push(m('.current', m(Spinner)));\n    } else if (results !== undefined) {\n      const searchMgr = assertExists(this.trace).search;\n      const index = searchMgr.resultIndex;\n      const total = results.totalResults ?? 0;\n      children.push(\n        m('.current', `${total === 0 ? '0 / 0' : `${index + 1} / ${total}`}`),\n        m(\n          'button',\n          {\n            onclick: () => searchMgr.stepBackwards(),\n          },\n          m('i.material-icons.left', 'keyboard_arrow_left'),\n        ),\n        m(\n          'button',\n          {\n            onclick: () => searchMgr.stepForward(),\n          },\n          m('i.material-icons.right', 'keyboard_arrow_right'),\n        ),\n      );\n    }\n    return m('.stepthrough', children);\n  }\n\n  oncreate(vnode: m.VnodeDOM) {\n    this.updateOmniboxInputRef(vnode.dom);\n    this.maybeFocusOmnibar();\n  }\n\n  view(): m.Children {\n    const app = AppImpl.instance;\n    const hotkeys: HotkeyConfig[] = [];\n    for (const {id, defaultHotkey} of app.commands.commands) {\n      if (defaultHotkey) {\n        hotkeys.push({\n          callback: () => app.commands.runCommand(id),\n          hotkey: defaultHotkey,\n        });\n      }\n    }\n\n    return m(\n      HotkeyContext,\n      {hotkeys},\n      m(\n        'main',\n        m(Sidebar, {trace: this.trace}),\n        m(Topbar, {\n          omnibox: this.renderOmnibox(),\n          trace: this.trace,\n        }),\n        app.pages.renderPageForCurrentRoute(app.trace),\n        m(CookieConsent),\n        maybeRenderFullscreenModalDialog(),\n        app.perfDebugging.renderPerfStats(),\n      ),\n    );\n  }\n\n  onupdate({dom}: m.VnodeDOM) {\n    this.updateOmniboxInputRef(dom);\n    this.maybeFocusOmnibar();\n  }\n\n  onremove(_: m.VnodeDOM) {\n    this.omniboxInputEl = undefined;\n\n    // NOTE: if this becomes ever an asyncDispose(), then the promise needs to\n    // be returned to onbeforeremove, so mithril delays the removal until\n    // the promise is resolved, but then also the UiMain wrapper needs to be\n    // more complex to linearize the destruction of the old instane with the\n    // creation of the new one, without overlaps.\n    // However, we should not add disposables that issue cleanup queries on the\n    // Engine. Doing so is: (1) useless: we throw away the whole wasm instance\n    // on each trace load, so what's the point of deleting tables from a TP\n    // instance that is going to be destroyed?; (2) harmful: we don't have\n    // precise linearization with the wasm teardown, so we might end up awaiting\n    // forever for the asyncDispose() because the query will never run.\n    this.trash.dispose();\n  }\n\n  private updateOmniboxInputRef(dom: Element): void {\n    const el = findRef(dom, OMNIBOX_INPUT_REF);\n    if (el && el instanceof HTMLInputElement) {\n      this.omniboxInputEl = el;\n    }\n  }\n\n  private maybeFocusOmnibar() {\n    if (AppImpl.instance.omnibox.focusOmniboxNextRender) {\n      const omniboxEl = this.omniboxInputEl;\n      if (omniboxEl) {\n        omniboxEl.focus();\n        if (AppImpl.instance.omnibox.pendingCursorPlacement === undefined) {\n          omniboxEl.select();\n        } else {\n          omniboxEl.setSelectionRange(\n            AppImpl.instance.omnibox.pendingCursorPlacement,\n            AppImpl.instance.omnibox.pendingCursorPlacement,\n          );\n        }\n      }\n      AppImpl.instance.omnibox.clearFocusFlag();\n    }\n  }\n\n  private async maybeShowJsonWarning() {\n    // Show warning if the trace is in JSON format.\n    const isJsonTrace = this.trace?.traceInfo.traceType === 'json';\n    const SHOWN_JSON_WARNING_KEY = 'shownJsonWarning';\n\n    if (\n      !isJsonTrace ||\n      window.localStorage.getItem(SHOWN_JSON_WARNING_KEY) === 'true' ||\n      AppImpl.instance.embeddedMode\n    ) {\n      // When in embedded mode, the host app will control which trace format\n      // it passes to Perfetto, so we don't need to show this warning.\n      return;\n    }\n\n    // Save that the warning has been shown. Value is irrelevant since only\n    // the presence of key is going to be checked.\n    window.localStorage.setItem(SHOWN_JSON_WARNING_KEY, 'true');\n\n    showModal({\n      title: 'Warning',\n      content: m(\n        'div',\n        m(\n          'span',\n          'Perfetto UI features are limited for JSON traces. ',\n          'We recommend recording ',\n          m(\n            'a',\n            {href: 'https://perfetto.dev/docs/quickstart/chrome-tracing'},\n            'proto-format traces',\n          ),\n          ' from Chrome.',\n        ),\n        m('br'),\n      ),\n      buttons: [],\n    });\n  }\n}\n"]}