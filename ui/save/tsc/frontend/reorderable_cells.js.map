{"version":3,"file":"reorderable_cells.js","sourceRoot":"","sources":["../../../src/frontend/reorderable_cells.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2022 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport m from 'mithril';\nimport {DropDirection} from '../core/pivot_table_manager';\nimport {raf} from '../core/raf_scheduler';\n\nexport interface ReorderableCell {\n  content: m.Children;\n  extraClass?: string;\n}\n\nexport interface ReorderableCellGroupAttrs {\n  cells: ReorderableCell[];\n  onReorder: (from: number, to: number, side: DropDirection) => void;\n}\n\nconst placeholderElement = document.createElement('span');\n\n// A component that renders a group of cells on the same row that can be\n// reordered between each other by using drag'n'drop.\n//\n// On completed reorder, a callback is fired.\nexport class ReorderableCellGroup\n  implements m.ClassComponent<ReorderableCellGroupAttrs>\n{\n  // Index of a cell being dragged.\n  draggingFrom: number = -1;\n\n  // Index of a cell cursor is hovering over.\n  draggingTo: number = -1;\n\n  // Whether the cursor hovering on the left or right side of the element: used\n  // to add the dragged element either before or after the drop target.\n  dropDirection: DropDirection = 'left';\n\n  // Auxillary array used to count entrances into `dragenter` event: these are\n  // incremented not only when hovering over a cell, but also for any child of\n  // the tree.\n  enterCounters: number[] = [];\n\n  getClassForIndex(index: number): string {\n    if (this.draggingFrom === index) {\n      return 'dragged';\n    }\n    if (this.draggingTo === index) {\n      return this.dropDirection === 'left'\n        ? 'highlight-left'\n        : 'highlight-right';\n    }\n    return '';\n  }\n\n  view(vnode: m.Vnode<ReorderableCellGroupAttrs>): m.Children {\n    return vnode.attrs.cells.map((cell, index) =>\n      m(\n        `td.reorderable-cell${cell.extraClass ?? ''}`,\n        {\n          draggable: 'draggable',\n          class: this.getClassForIndex(index),\n          ondragstart: (e: DragEvent) => {\n            this.draggingFrom = index;\n            if (e.dataTransfer !== null) {\n              e.dataTransfer.setDragImage(placeholderElement, 0, 0);\n            }\n\n            raf.scheduleFullRedraw();\n          },\n          ondragover: (e: DragEvent) => {\n            let target = e.target as HTMLElement;\n            if (this.draggingFrom === index || this.draggingFrom === -1) {\n              // Don't do anything when hovering on the same cell that's\n              // been dragged, or when dragging something other than the\n              // cell from the same group\n              return;\n            }\n\n            while (\n              target.tagName.toLowerCase() !== 'td' &&\n              target.parentElement !== null\n            ) {\n              target = target.parentElement;\n            }\n\n            // When hovering over cell on the right half, the cell will be\n            // moved to the right of it, vice versa for the left side. This\n            // is done such that it's possible to put dragged cell to every\n            // possible position.\n            const offset = e.clientX - target.getBoundingClientRect().x;\n            const newDropDirection =\n              offset > target.clientWidth / 2 ? 'right' : 'left';\n            const redraw =\n              newDropDirection !== this.dropDirection ||\n              index !== this.draggingTo;\n            this.dropDirection = newDropDirection;\n            this.draggingTo = index;\n\n            if (redraw) {\n              raf.scheduleFullRedraw();\n            }\n          },\n          ondragenter: (e: DragEvent) => {\n            this.enterCounters[index]++;\n\n            if (this.enterCounters[index] === 1 && e.dataTransfer !== null) {\n              e.dataTransfer.dropEffect = 'move';\n            }\n          },\n          ondragleave: (e: DragEvent) => {\n            this.enterCounters[index]--;\n            if (this.draggingFrom === -1 || this.enterCounters[index] > 0) {\n              return;\n            }\n\n            if (e.dataTransfer !== null) {\n              e.dataTransfer.dropEffect = 'none';\n            }\n\n            this.draggingTo = -1;\n            raf.scheduleFullRedraw();\n          },\n          ondragend: () => {\n            if (\n              this.draggingTo !== this.draggingFrom &&\n              this.draggingTo !== -1\n            ) {\n              vnode.attrs.onReorder(\n                this.draggingFrom,\n                this.draggingTo,\n                this.dropDirection,\n              );\n            }\n\n            this.draggingFrom = -1;\n            this.draggingTo = -1;\n            raf.scheduleFullRedraw();\n          },\n        },\n        cell.content,\n      ),\n    );\n  }\n\n  oncreate(vnode: m.VnodeDOM<ReorderableCellGroupAttrs, this>) {\n    this.enterCounters = Array(vnode.attrs.cells.length).fill(0);\n  }\n\n  onupdate(vnode: m.VnodeDOM<ReorderableCellGroupAttrs, this>) {\n    if (this.enterCounters.length !== vnode.attrs.cells.length) {\n      this.enterCounters = Array(vnode.attrs.cells.length).fill(0);\n    }\n  }\n}\n"]}