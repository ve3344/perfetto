{"version":3,"file":"topbar.js","sourceRoot":"","sources":["../../../src/frontend/topbar.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2018 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport m from 'mithril';\nimport {classNames} from '../base/classnames';\nimport {taskTracker} from './task_tracker';\nimport {Popup, PopupPosition} from '../widgets/popup';\nimport {assertFalse} from '../base/logging';\nimport {OmniboxMode} from '../core/omnibox_manager';\nimport {AppImpl} from '../core/app_impl';\nimport {TraceImpl, TraceImplAttrs} from '../core/trace_impl';\n\nclass Progress implements m.ClassComponent<TraceImplAttrs> {\n  view({attrs}: m.CVnode<TraceImplAttrs>): m.Children {\n    const engine = attrs.trace.engine;\n    const isLoading =\n      AppImpl.instance.isLoadingTrace ||\n      engine.numRequestsPending > 0 ||\n      taskTracker.hasPendingTasks();\n    const classes = classNames(isLoading && 'progress-anim');\n    return m('.progress', {class: classes});\n  }\n}\n\nclass TraceErrorIcon implements m.ClassComponent<TraceImplAttrs> {\n  private tracePopupErrorDismissed = false;\n\n  view({attrs}: m.CVnode<TraceImplAttrs>) {\n    const trace = attrs.trace;\n    if (AppImpl.instance.embeddedMode) return;\n\n    const mode = AppImpl.instance.omnibox.mode;\n    const totErrors = trace.traceInfo.importErrors + trace.loadingErrors.length;\n    if (totErrors === 0 || mode === OmniboxMode.Command) {\n      return;\n    }\n    const message = Boolean(totErrors)\n      ? `${totErrors} import or data loss errors detected.`\n      : `Metric error detected.`;\n    return m(\n      '.error-box',\n      m(\n        Popup,\n        {\n          trigger: m('.popup-trigger'),\n          isOpen: !this.tracePopupErrorDismissed,\n          position: PopupPosition.Left,\n          onChange: (shouldOpen: boolean) => {\n            assertFalse(shouldOpen);\n            this.tracePopupErrorDismissed = true;\n          },\n        },\n        m('.error-popup', 'Data-loss/import error. Click for more info.'),\n      ),\n      m(\n        'a.error',\n        {href: '#!/info'},\n        m(\n          'i.material-icons',\n          {\n            title: message + ` Click for more info.`,\n          },\n          'announcement',\n        ),\n      ),\n    );\n  }\n}\n\nexport interface TopbarAttrs {\n  omnibox: m.Children;\n  trace?: TraceImpl;\n}\n\nexport class Topbar implements m.ClassComponent<TopbarAttrs> {\n  view({attrs}: m.Vnode<TopbarAttrs>) {\n    const {omnibox} = attrs;\n    return m(\n      '.topbar',\n      {\n        class: AppImpl.instance.sidebar.visible ? '' : 'hide-sidebar',\n      },\n      omnibox,\n      attrs.trace && m(Progress, {trace: attrs.trace}),\n      attrs.trace && m(TraceErrorIcon, {trace: attrs.trace}),\n    );\n  }\n}\n"]}