{"version":3,"file":"aggregation_panel.js","sourceRoot":"","sources":["../../../src/frontend/aggregation_panel.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2019 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use size file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport m from 'mithril';\nimport {\n  AggregateData,\n  Column,\n  ThreadStateExtra,\n  isEmptyData,\n} from '../public/aggregation';\nimport {colorForState} from '../components/colorizer';\nimport {DurationWidget} from '../components/widgets/duration';\nimport {EmptyState} from '../widgets/empty_state';\nimport {Anchor} from '../widgets/anchor';\nimport {Icons} from '../base/semantic_icons';\nimport {translateState} from '../components/sql_utils/thread_state';\nimport {TraceImpl} from '../core/trace_impl';\n\nexport interface AggregationPanelAttrs {\n  data?: AggregateData;\n  aggregatorId: string;\n  trace: TraceImpl;\n}\n\nexport class AggregationPanel\n  implements m.ClassComponent<AggregationPanelAttrs>\n{\n  private trace: TraceImpl;\n\n  constructor({attrs}: m.CVnode<AggregationPanelAttrs>) {\n    this.trace = attrs.trace;\n  }\n\n  view({attrs}: m.CVnode<AggregationPanelAttrs>) {\n    if (!attrs.data || isEmptyData(attrs.data)) {\n      return m(\n        EmptyState,\n        {\n          className: 'pf-noselection',\n          title: 'No relevant tracks in selection',\n        },\n        m(\n          Anchor,\n          {\n            icon: Icons.ChangeTab,\n            onclick: () => {\n              this.trace.tabs.showCurrentSelectionTab();\n            },\n          },\n          'Go to current selection tab',\n        ),\n      );\n    }\n\n    return m(\n      '.details-panel',\n      m(\n        '.details-panel-heading.aggregation',\n        attrs.data.extra !== undefined &&\n          attrs.data.extra.kind === 'THREAD_STATE'\n          ? this.showStateSummary(attrs.data.extra)\n          : null,\n        this.showTimeRange(),\n        m(\n          'table',\n          m(\n            'tr',\n            attrs.data.columns.map((col) =>\n              this.formatColumnHeading(attrs.trace, col, attrs.aggregatorId),\n            ),\n          ),\n          m(\n            'tr.sum',\n            attrs.data.columnSums.map((sum) => {\n              const sumClass = sum === '' ? 'td' : 'td.sum-data';\n              return m(sumClass, sum);\n            }),\n          ),\n        ),\n      ),\n      m('.details-table.aggregation', m('table', this.getRows(attrs.data))),\n    );\n  }\n\n  formatColumnHeading(trace: TraceImpl, col: Column, aggregatorId: string) {\n    const pref = trace.selection.aggregation.getSortingPrefs(aggregatorId);\n    let sortIcon = '';\n    if (pref && pref.column === col.columnId) {\n      sortIcon =\n        pref.direction === 'DESC' ? 'arrow_drop_down' : 'arrow_drop_up';\n    }\n    return m(\n      'th',\n      {\n        onclick: () => {\n          trace.selection.aggregation.toggleSortingColumn(\n            aggregatorId,\n            col.columnId,\n          );\n        },\n      },\n      col.title,\n      m('i.material-icons', sortIcon),\n    );\n  }\n\n  getRows(data: AggregateData) {\n    if (data.columns.length === 0) return;\n    const rows = [];\n    for (let i = 0; i < data.columns[0].data.length; i++) {\n      const row = [];\n      for (let j = 0; j < data.columns.length; j++) {\n        row.push(m('td', this.getFormattedData(data, i, j)));\n      }\n      rows.push(m('tr', row));\n    }\n    return rows;\n  }\n\n  getFormattedData(data: AggregateData, rowIndex: number, columnIndex: number) {\n    switch (data.columns[columnIndex].kind) {\n      case 'STRING':\n        return data.strings[data.columns[columnIndex].data[rowIndex]];\n      case 'TIMESTAMP_NS':\n        return `${data.columns[columnIndex].data[rowIndex] / 1000000}`;\n      case 'STATE': {\n        const concatState =\n          data.strings[data.columns[columnIndex].data[rowIndex]];\n        const split = concatState.split(',');\n        const ioWait =\n          split[1] === 'NULL' ? undefined : !!Number.parseInt(split[1], 10);\n        return translateState(split[0], ioWait);\n      }\n      case 'NUMBER':\n      default:\n        return data.columns[columnIndex].data[rowIndex];\n    }\n  }\n\n  showTimeRange() {\n    const selection = this.trace.selection.selection;\n    if (selection.kind !== 'area') return undefined;\n    const duration = selection.end - selection.start;\n    return m(\n      '.time-range',\n      'Selected range: ',\n      m(DurationWidget, {dur: duration}),\n    );\n  }\n\n  // Thread state aggregation panel only\n  showStateSummary(data: ThreadStateExtra) {\n    if (data === undefined) return undefined;\n    const states = [];\n    for (let i = 0; i < data.states.length; i++) {\n      const colorScheme = colorForState(data.states[i]);\n      const width = (data.values[i] / data.totalMs) * 100;\n      states.push(\n        m(\n          '.state',\n          {\n            style: {\n              background: colorScheme.base.cssString,\n              color: colorScheme.textBase.cssString,\n              width: `${width}%`,\n            },\n          },\n          `${data.states[i]}: ${data.values[i]} ms`,\n        ),\n      );\n    }\n    return m('.states', states);\n  }\n}\n"]}