{"version":3,"file":"pivot_table.js","sourceRoot":"","sources":["../../../src/frontend/pivot_table.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2022 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport m from 'mithril';\nimport {SortDirection} from '../base/comparison_utils';\nimport {sqliteString} from '../base/string_utils';\nimport {DropDirection} from '../core/pivot_table_manager';\nimport {\n  PivotTableResult,\n  Aggregation,\n  AggregationFunction,\n  columnKey,\n  PivotTree,\n  TableColumn,\n  COUNT_AGGREGATION,\n} from '../core/pivot_table_types';\nimport {AreaSelection} from '../public/selection';\nimport {raf} from '../core/raf_scheduler';\nimport {ColumnType} from '../trace_processor/query_result';\nimport {\n  aggregationIndex,\n  areaFilters,\n  sliceAggregationColumns,\n  tables,\n} from '../core/pivot_table_query_generator';\nimport {ReorderableCell, ReorderableCellGroup} from './reorderable_cells';\nimport {AttributeModalHolder} from './tables/attribute_modal_holder';\nimport {DurationWidget} from '../components/widgets/duration';\nimport {getSqlTableDescription} from '../components/widgets/sql/legacy_table/sql_table_registry';\nimport {assertExists, assertFalse} from '../base/logging';\nimport {Filter, SqlColumn} from '../components/widgets/sql/legacy_table/column';\nimport {TraceImpl} from '../core/trace_impl';\nimport {PivotTableManager} from '../core/pivot_table_manager';\nimport {extensions} from '../components/extensions';\nimport {MenuItem, PopupMenu2} from '../widgets/menu';\nimport {Button} from '../widgets/button';\nimport {popupMenuIcon} from '../widgets/table';\n\ninterface PathItem {\n  tree: PivotTree;\n  nextKey: ColumnType;\n}\n\ninterface PivotTableAttrs {\n  trace: TraceImpl;\n  selectionArea: AreaSelection;\n}\n\ninterface DrillFilter {\n  column: TableColumn;\n  value: ColumnType;\n}\n\nfunction drillFilterColumnName(column: TableColumn): SqlColumn {\n  switch (column.kind) {\n    case 'argument':\n      return {\n        column: 'display_value',\n        source: {\n          table: 'args',\n          joinOn: {\n            arg_set_id: 'arg_set_id',\n            key: sqliteString(column.argument),\n          },\n        },\n      };\n    case 'regular':\n      return `${column.column}`;\n  }\n}\n\n// Convert DrillFilter to SQL condition to be used in WHERE clause.\nfunction renderDrillFilter(filter: DrillFilter): Filter {\n  const column = drillFilterColumnName(filter.column);\n  const value = filter.value;\n  if (value === null) {\n    return {op: (cols) => `${cols[0]} IS NULL`, columns: [column]};\n  } else if (typeof value === 'number' || typeof value === 'bigint') {\n    return {op: (cols) => `${cols[0]} = ${filter.value}`, columns: [column]};\n  } else if (value instanceof Uint8Array) {\n    throw new Error(`BLOB as DrillFilter not implemented`);\n  }\n  return {\n    op: (cols) => `${cols[0]} = ${sqliteString(value)}`,\n    columns: [column],\n  };\n}\n\nfunction readableColumnName(column: TableColumn) {\n  switch (column.kind) {\n    case 'argument':\n      return `Argument ${column.argument}`;\n    case 'regular':\n      return `${column.column}`;\n  }\n}\n\nexport function markFirst(index: number) {\n  if (index === 0) {\n    return '.first';\n  }\n  return '';\n}\n\nexport class PivotTable implements m.ClassComponent<PivotTableAttrs> {\n  private pivotMgr: PivotTableManager;\n\n  constructor({attrs}: m.CVnode<PivotTableAttrs>) {\n    this.pivotMgr = attrs.trace.pivotTable;\n    this.attributeModalHolder = new AttributeModalHolder((arg) =>\n      this.pivotMgr.setPivotSelected({\n        column: {kind: 'argument', argument: arg},\n        selected: true,\n      }),\n    );\n  }\n\n  get pivotState() {\n    return this.pivotMgr.state;\n  }\n\n  renderDrillDownCell(attrs: PivotTableAttrs, filters: DrillFilter[]) {\n    return m(\n      'td',\n      m(\n        'button',\n        {\n          title: 'All corresponding slices',\n          onclick: () => {\n            const queryFilters = filters.map(renderDrillFilter);\n            if (this.pivotState.constrainToArea) {\n              queryFilters.push(...areaFilters(attrs.selectionArea));\n            }\n            extensions.addLegacySqlTableTab(attrs.trace, {\n              table: assertExists(getSqlTableDescription('slice')),\n              // TODO(altimin): this should properly reference the required columns, but it works for now (until the pivot table is going to be rewritten to be more flexible).\n              filters: queryFilters,\n            });\n          },\n        },\n        m('i.material-icons', 'arrow_right'),\n      ),\n    );\n  }\n\n  renderSectionRow(\n    attrs: PivotTableAttrs,\n    path: PathItem[],\n    tree: PivotTree,\n    result: PivotTableResult,\n  ): m.Vnode {\n    const renderedCells = [];\n    for (let j = 0; j + 1 < path.length; j++) {\n      renderedCells.push(m('td', m('span.indent', ' '), `${path[j].nextKey}`));\n    }\n\n    const treeDepth = result.metadata.pivotColumns.length;\n    const colspan = treeDepth - path.length + 1;\n    const button = m(\n      'button',\n      {\n        onclick: () => {\n          tree.isCollapsed = !tree.isCollapsed;\n          raf.scheduleFullRedraw();\n        },\n      },\n      m('i.material-icons', tree.isCollapsed ? 'expand_more' : 'expand_less'),\n    );\n\n    renderedCells.push(\n      m('td', {colspan}, button, `${path[path.length - 1].nextKey}`),\n    );\n\n    for (let i = 0; i < result.metadata.aggregationColumns.length; i++) {\n      const renderedValue = this.renderCell(\n        result.metadata.aggregationColumns[i].column,\n        tree.aggregates[i],\n      );\n      renderedCells.push(m('td' + markFirst(i), renderedValue));\n    }\n\n    const drillFilters: DrillFilter[] = [];\n    for (let i = 0; i < path.length; i++) {\n      drillFilters.push({\n        value: `${path[i].nextKey}`,\n        column: result.metadata.pivotColumns[i],\n      });\n    }\n\n    renderedCells.push(this.renderDrillDownCell(attrs, drillFilters));\n    return m('tr', renderedCells);\n  }\n\n  renderCell(column: TableColumn, value: ColumnType): m.Children {\n    if (\n      column.kind === 'regular' &&\n      (column.column === 'dur' || column.column === 'thread_dur')\n    ) {\n      if (typeof value === 'bigint') {\n        return m(DurationWidget, {dur: value});\n      } else if (typeof value === 'number') {\n        return m(DurationWidget, {dur: BigInt(Math.round(value))});\n      }\n    }\n    return `${value}`;\n  }\n\n  renderTree(\n    attrs: PivotTableAttrs,\n    path: PathItem[],\n    tree: PivotTree,\n    result: PivotTableResult,\n    sink: m.Vnode[],\n  ) {\n    if (tree.isCollapsed) {\n      sink.push(this.renderSectionRow(attrs, path, tree, result));\n      return;\n    }\n    if (tree.children.size > 0) {\n      // Avoid rendering the intermediate results row for the root of tree\n      // and in case there's only one child subtree.\n      if (!tree.isCollapsed && path.length > 0 && tree.children.size !== 1) {\n        sink.push(this.renderSectionRow(attrs, path, tree, result));\n      }\n      for (const [key, childTree] of tree.children.entries()) {\n        path.push({tree: childTree, nextKey: key});\n        this.renderTree(attrs, path, childTree, result, sink);\n        path.pop();\n      }\n      return;\n    }\n\n    // Avoid rendering the intermediate results row if it has only one leaf\n    // row.\n    if (!tree.isCollapsed && path.length > 0 && tree.rows.length > 1) {\n      sink.push(this.renderSectionRow(attrs, path, tree, result));\n    }\n    for (const row of tree.rows) {\n      const renderedCells = [];\n      const drillFilters: DrillFilter[] = [];\n      const treeDepth = result.metadata.pivotColumns.length;\n      for (let j = 0; j < treeDepth; j++) {\n        const value = this.renderCell(result.metadata.pivotColumns[j], row[j]);\n        if (j < path.length) {\n          renderedCells.push(m('td', m('span.indent', ' '), value));\n        } else {\n          renderedCells.push(m(`td`, value));\n        }\n        drillFilters.push({\n          column: result.metadata.pivotColumns[j],\n          value: row[j],\n        });\n      }\n      for (let j = 0; j < result.metadata.aggregationColumns.length; j++) {\n        const value = row[aggregationIndex(treeDepth, j)];\n        const renderedValue = this.renderCell(\n          result.metadata.aggregationColumns[j].column,\n          value,\n        );\n        renderedCells.push(m('td.aggregation' + markFirst(j), renderedValue));\n      }\n\n      renderedCells.push(this.renderDrillDownCell(attrs, drillFilters));\n      sink.push(m('tr', renderedCells));\n    }\n  }\n\n  renderTotalsRow(queryResult: PivotTableResult) {\n    const overallValuesRow = [\n      m(\n        'td.total-values',\n        {colspan: queryResult.metadata.pivotColumns.length},\n        m('strong', 'Total values:'),\n      ),\n    ];\n    for (let i = 0; i < queryResult.metadata.aggregationColumns.length; i++) {\n      overallValuesRow.push(\n        m(\n          'td' + markFirst(i),\n          this.renderCell(\n            queryResult.metadata.aggregationColumns[i].column,\n            queryResult.tree.aggregates[i],\n          ),\n        ),\n      );\n    }\n    overallValuesRow.push(m('td'));\n    return m('tr', overallValuesRow);\n  }\n\n  sortingItem(aggregationIndex: number, order: SortDirection): m.Child {\n    const pivotMgr = this.pivotMgr;\n    return m(MenuItem, {\n      label: order === 'DESC' ? 'Highest first' : 'Lowest first',\n      onclick: () => {\n        pivotMgr.setSortColumn(aggregationIndex, order);\n      },\n    });\n  }\n\n  readableAggregationName(aggregation: Aggregation) {\n    if (aggregation.aggregationFunction === 'COUNT') {\n      return 'Count';\n    }\n    return `${aggregation.aggregationFunction}(${readableColumnName(\n      aggregation.column,\n    )})`;\n  }\n\n  aggregationPopupItem(\n    aggregation: Aggregation,\n    index: number,\n    nameOverride?: string,\n  ): m.Child {\n    return m(MenuItem, {\n      label: nameOverride ?? readableColumnName(aggregation.column),\n      onclick: () => {\n        this.pivotMgr.addAggregation(aggregation, index);\n      },\n    });\n  }\n\n  aggregationPopupTableGroup(\n    table: string,\n    columns: string[],\n    index: number,\n  ): m.Child | undefined {\n    const items: m.Child[] = [];\n    for (const column of columns) {\n      const tableColumn: TableColumn = {kind: 'regular', table, column};\n      items.push(\n        this.aggregationPopupItem(\n          {aggregationFunction: 'SUM', column: tableColumn},\n          index,\n        ),\n      );\n    }\n\n    if (items.length === 0) {\n      return undefined;\n    }\n\n    return m(MenuItem, {label: `Add ${table} aggregation`}, items);\n  }\n\n  renderAggregationHeaderCell(\n    aggregation: Aggregation,\n    index: number,\n    removeItem: boolean,\n  ): ReorderableCell {\n    const popupItems: m.Child[] = [];\n    if (aggregation.sortDirection === undefined) {\n      popupItems.push(\n        this.sortingItem(index, 'DESC'),\n        this.sortingItem(index, 'ASC'),\n      );\n    } else {\n      // Table is already sorted by the same column, return one item with\n      // opposite direction.\n      popupItems.push(\n        this.sortingItem(\n          index,\n          aggregation.sortDirection === 'DESC' ? 'ASC' : 'DESC',\n        ),\n      );\n    }\n    const otherAggs: AggregationFunction[] = ['SUM', 'MAX', 'MIN', 'AVG'];\n    if (aggregation.aggregationFunction !== 'COUNT') {\n      for (const otherAgg of otherAggs) {\n        if (aggregation.aggregationFunction === otherAgg) {\n          continue;\n        }\n        const pivotMgr = this.pivotMgr;\n        popupItems.push(\n          m(MenuItem, {\n            label: otherAgg,\n            onclick: () => {\n              pivotMgr.setAggregationFunction(index, otherAgg);\n            },\n          }),\n        );\n      }\n    }\n\n    if (removeItem) {\n      popupItems.push(\n        m(MenuItem, {\n          label: 'Remove',\n          onclick: () => {\n            this.pivotMgr.removeAggregation(index);\n          },\n        }),\n      );\n    }\n\n    let hasCount = false;\n    for (const agg of this.pivotState.selectedAggregations.values()) {\n      if (agg.aggregationFunction === 'COUNT') {\n        hasCount = true;\n      }\n    }\n\n    if (!hasCount) {\n      popupItems.push(\n        this.aggregationPopupItem(\n          COUNT_AGGREGATION,\n          index,\n          'Add count aggregation',\n        ),\n      );\n    }\n\n    const sliceAggregationsItem = this.aggregationPopupTableGroup(\n      assertExists(getSqlTableDescription('slice')).name,\n      sliceAggregationColumns,\n      index,\n    );\n    if (sliceAggregationsItem !== undefined) {\n      popupItems.push(sliceAggregationsItem);\n    }\n\n    return {\n      extraClass: '.aggregation' + markFirst(index),\n      content: [\n        this.readableAggregationName(aggregation),\n        m(\n          PopupMenu2,\n          {\n            trigger: m(Button, {\n              icon: popupMenuIcon(aggregation.sortDirection),\n            }),\n          },\n          popupItems,\n        ),\n      ],\n    };\n  }\n\n  attributeModalHolder: AttributeModalHolder;\n\n  renderPivotColumnHeader(\n    queryResult: PivotTableResult,\n    pivot: TableColumn,\n    selectedPivots: Set<string>,\n  ): ReorderableCell {\n    const pivotMgr = this.pivotMgr;\n    const items: m.Child[] = [\n      m(MenuItem, {\n        label: 'Add argument pivot',\n        onclick: () => {\n          this.attributeModalHolder.start();\n        },\n      }),\n    ];\n    if (queryResult.metadata.pivotColumns.length > 1) {\n      items.push(\n        m(MenuItem, {\n          label: 'Remove',\n          onclick: () => {\n            pivotMgr.setPivotSelected({column: pivot, selected: false});\n          },\n        }),\n      );\n    }\n\n    for (const table of tables) {\n      const group: m.Child[] = [];\n      for (const columnName of table.columns) {\n        const column: TableColumn = {\n          kind: 'regular',\n          table: table.name,\n          column: columnName,\n        };\n        if (selectedPivots.has(columnKey(column))) {\n          continue;\n        }\n        group.push(\n          m(MenuItem, {\n            label: columnName,\n            onclick: () => {\n              pivotMgr.setPivotSelected({column, selected: true});\n            },\n          }),\n        );\n      }\n      items.push(\n        m(\n          MenuItem,\n          {\n            label: `Add ${table.displayName} pivot`,\n          },\n          group,\n        ),\n      );\n    }\n\n    return {\n      content: [\n        readableColumnName(pivot),\n        m(PopupMenu2, {trigger: m(Button, {icon: 'more_horiz'})}, items),\n      ],\n    };\n  }\n\n  renderResultsTable(attrs: PivotTableAttrs) {\n    const state = this.pivotState;\n    const queryResult = state.queryResult;\n    if (queryResult === undefined) {\n      return m('div', 'Loading...');\n    }\n\n    const renderedRows: m.Vnode[] = [];\n\n    // We should not even be showing the tab if there's no results.\n    const tree = queryResult.tree;\n    assertFalse(tree.children.size === 0 && tree.rows.length === 0);\n\n    this.renderTree(attrs, [], tree, queryResult, renderedRows);\n\n    const selectedPivots = new Set(\n      this.pivotState.selectedPivots.map(columnKey),\n    );\n    const pivotTableHeaders = state.selectedPivots.map((pivot) =>\n      this.renderPivotColumnHeader(queryResult, pivot, selectedPivots),\n    );\n\n    const removeItem = queryResult.metadata.aggregationColumns.length > 1;\n    const aggregationTableHeaders = queryResult.metadata.aggregationColumns.map(\n      (aggregation, index) =>\n        this.renderAggregationHeaderCell(aggregation, index, removeItem),\n    );\n\n    return m(\n      'table.pivot-table',\n      m(\n        'thead',\n        // First row of the table, containing names of pivot and aggregation\n        // columns, as well as popup menus to modify the columns. Last cell\n        // is empty because of an extra column with \"drill down\" button for\n        // each pivot table row.\n        m(\n          'tr.header',\n          m(ReorderableCellGroup, {\n            cells: pivotTableHeaders,\n            onReorder: (from: number, to: number, direction: DropDirection) => {\n              this.pivotMgr.setOrder(from, to, direction);\n            },\n          }),\n          m(ReorderableCellGroup, {\n            cells: aggregationTableHeaders,\n            onReorder: (from: number, to: number, direction: DropDirection) => {\n              this.pivotMgr.setAggregationOrder(from, to, direction);\n            },\n          }),\n          m(\n            'td.menu',\n            m(\n              PopupMenu2,\n              {\n                trigger: m(Button, {icon: 'menu'}),\n              },\n              m(MenuItem, {\n                label: state.constrainToArea\n                  ? 'Query data for the whole timeline'\n                  : 'Constrain to selected area',\n                onclick: () => {\n                  this.pivotMgr.setConstrainedToArea(!state.constrainToArea);\n                },\n              }),\n            ),\n          ),\n        ),\n      ),\n      m('tbody', this.renderTotalsRow(queryResult), renderedRows),\n    );\n  }\n\n  view({attrs}: m.Vnode<PivotTableAttrs>): m.Children {\n    return m('.pivot-table', this.renderResultsTable(attrs));\n  }\n}\n"]}