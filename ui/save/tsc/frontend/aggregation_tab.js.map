{"version":3,"file":"aggregation_tab.js","sourceRoot":"","sources":["../../../src/frontend/aggregation_tab.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2024 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use size file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport m from 'mithril';\nimport {AggregationPanel} from './aggregation_panel';\nimport {isEmptyData} from '../public/aggregation';\nimport {DetailsShell} from '../widgets/details_shell';\nimport {Button, ButtonBar} from '../widgets/button';\nimport {raf} from '../core/raf_scheduler';\nimport {EmptyState} from '../widgets/empty_state';\nimport {FlowEventsAreaSelectedPanel} from './flow_events_panel';\nimport {PivotTable} from './pivot_table';\nimport {AreaSelection} from '../public/selection';\nimport {Monitor} from '../base/monitor';\nimport {\n  CPU_PROFILE_TRACK_KIND,\n  PERF_SAMPLES_PROFILE_TRACK_KIND,\n  SLICE_TRACK_KIND,\n} from '../public/track_kinds';\nimport {\n  QueryFlamegraph,\n  metricsFromTableOrSubquery,\n} from '../components/query_flamegraph';\nimport {DisposableStack} from '../base/disposable_stack';\nimport {assertExists} from '../base/logging';\nimport {TraceImpl} from '../core/trace_impl';\nimport {Trace} from '../public/trace';\nimport {Flamegraph} from '../widgets/flamegraph';\n\ninterface View {\n  key: string;\n  name: string;\n  content: m.Children;\n}\n\nexport type AreaDetailsPanelAttrs = {trace: TraceImpl};\n\nclass AreaDetailsPanel implements m.ClassComponent<AreaDetailsPanelAttrs> {\n  private trace: TraceImpl;\n  private monitor: Monitor;\n  private currentTab: string | undefined = undefined;\n  private cpuProfileFlamegraph?: QueryFlamegraph;\n  private perfSampleFlamegraph?: QueryFlamegraph;\n  private sliceFlamegraph?: QueryFlamegraph;\n\n  constructor({attrs}: m.CVnode<AreaDetailsPanelAttrs>) {\n    this.trace = attrs.trace;\n    this.monitor = new Monitor([() => this.trace.selection.selection]);\n  }\n\n  private getCurrentView(): string | undefined {\n    const types = this.getViews().map(({key}) => key);\n\n    if (types.length === 0) {\n      return undefined;\n    }\n\n    if (this.currentTab === undefined) {\n      return types[0];\n    }\n\n    if (!types.includes(this.currentTab)) {\n      return types[0];\n    }\n\n    return this.currentTab;\n  }\n\n  private getViews(): View[] {\n    const views: View[] = [];\n\n    for (const aggregator of this.trace.selection.aggregation.aggregators) {\n      const aggregatorId = aggregator.id;\n      const value =\n        this.trace.selection.aggregation.getAggregatedData(aggregatorId);\n      if (value !== undefined && !isEmptyData(value)) {\n        views.push({\n          key: value.tabName,\n          name: value.tabName,\n          content: m(AggregationPanel, {\n            aggregatorId,\n            data: value,\n            trace: this.trace,\n          }),\n        });\n      }\n    }\n\n    const pivotTableState = this.trace.pivotTable.state;\n    const tree = pivotTableState.queryResult?.tree;\n    if (\n      pivotTableState.selectionArea != undefined &&\n      (tree === undefined || tree.children.size > 0 || tree?.rows.length > 0)\n    ) {\n      views.push({\n        key: 'pivot_table',\n        name: 'Pivot Table',\n        content: m(PivotTable, {\n          trace: this.trace,\n          selectionArea: pivotTableState.selectionArea,\n        }),\n      });\n    }\n\n    this.addFlamegraphView(this.trace, this.monitor.ifStateChanged(), views);\n\n    // Add this after all aggregation panels, to make it appear after 'Slices'\n    if (this.trace.flows.selectedFlows.length > 0) {\n      views.push({\n        key: 'selected_flows',\n        name: 'Flow Events',\n        content: m(FlowEventsAreaSelectedPanel, {trace: this.trace}),\n      });\n    }\n\n    return views;\n  }\n\n  view(): m.Children {\n    const views = this.getViews();\n    const currentViewKey = this.getCurrentView();\n\n    const aggregationButtons = views.map(({key, name}) => {\n      return m(Button, {\n        onclick: () => {\n          this.currentTab = key;\n          raf.scheduleFullRedraw();\n        },\n        key,\n        label: name,\n        active: currentViewKey === key,\n      });\n    });\n\n    if (currentViewKey === undefined) {\n      return this.renderEmptyState();\n    }\n\n    const content = views.find(({key}) => key === currentViewKey)?.content;\n    if (content === undefined) {\n      return this.renderEmptyState();\n    }\n\n    return m(\n      DetailsShell,\n      {\n        title: 'Area Selection',\n        description: m(ButtonBar, aggregationButtons),\n      },\n      content,\n    );\n  }\n\n  private renderEmptyState(): m.Children {\n    return m(\n      EmptyState,\n      {\n        className: 'pf-noselection',\n        title: 'Unsupported area selection',\n      },\n      'No details available for this area selection',\n    );\n  }\n\n  private addFlamegraphView(trace: Trace, isChanged: boolean, views: View[]) {\n    this.cpuProfileFlamegraph = this.computeCpuProfileFlamegraph(\n      trace,\n      isChanged,\n    );\n    if (this.cpuProfileFlamegraph !== undefined) {\n      views.push({\n        key: 'cpu_profile_flamegraph_selection',\n        name: 'CPU Profile Sample Flamegraph',\n        content: this.cpuProfileFlamegraph.render(),\n      });\n    }\n    this.perfSampleFlamegraph = this.computePerfSampleFlamegraph(\n      trace,\n      isChanged,\n    );\n    if (this.perfSampleFlamegraph !== undefined) {\n      views.push({\n        key: 'perf_sample_flamegraph_selection',\n        name: 'Perf Sample Flamegraph',\n        content: this.perfSampleFlamegraph.render(),\n      });\n    }\n    this.sliceFlamegraph = this.computeSliceFlamegraph(trace, isChanged);\n    if (this.sliceFlamegraph !== undefined) {\n      views.push({\n        key: 'slice_flamegraph_selection',\n        name: 'Slice Flamegraph',\n        content: this.sliceFlamegraph.render(),\n      });\n    }\n  }\n\n  private computeCpuProfileFlamegraph(trace: Trace, isChanged: boolean) {\n    const currentSelection = trace.selection.selection;\n    if (currentSelection.kind !== 'area') {\n      return undefined;\n    }\n    if (!isChanged) {\n      // If the selection has not changed, just return a copy of the last seen\n      // attrs.\n      return this.cpuProfileFlamegraph;\n    }\n    const utids = [];\n    for (const trackInfo of currentSelection.tracks) {\n      if (trackInfo?.tags?.kind === CPU_PROFILE_TRACK_KIND) {\n        utids.push(trackInfo.tags?.utid);\n      }\n    }\n    if (utids.length === 0) {\n      return undefined;\n    }\n    const metrics = metricsFromTableOrSubquery(\n      `\n        (\n          select\n            id,\n            parent_id as parentId,\n            name,\n            mapping_name,\n            source_file,\n            cast(line_number AS text) as line_number,\n            self_count\n          from _callstacks_for_callsites!((\n            select p.callsite_id\n            from cpu_profile_stack_sample p\n            where p.ts >= ${currentSelection.start}\n              and p.ts <= ${currentSelection.end}\n              and p.utid in (${utids.join(',')})\n          ))\n        )\n      `,\n      [\n        {\n          name: 'CPU Profile Samples',\n          unit: '',\n          columnName: 'self_count',\n        },\n      ],\n      'include perfetto module callstacks.stack_profile',\n      [{name: 'mapping_name', displayName: 'Mapping'}],\n      [\n        {\n          name: 'source_file',\n          displayName: 'Source File',\n          mergeAggregation: 'ONE_OR_NULL',\n        },\n        {\n          name: 'line_number',\n          displayName: 'Line Number',\n          mergeAggregation: 'ONE_OR_NULL',\n        },\n      ],\n    );\n    return new QueryFlamegraph(trace, metrics, {\n      state: Flamegraph.createDefaultState(metrics),\n    });\n  }\n\n  private computePerfSampleFlamegraph(trace: Trace, isChanged: boolean) {\n    const currentSelection = trace.selection.selection;\n    if (currentSelection.kind !== 'area') {\n      return undefined;\n    }\n    if (!isChanged) {\n      // If the selection has not changed, just return a copy of the last seen\n      // attrs.\n      return this.perfSampleFlamegraph;\n    }\n    const upids = getUpidsFromPerfSampleAreaSelection(currentSelection);\n    const utids = getUtidsFromPerfSampleAreaSelection(currentSelection);\n    if (utids.length === 0 && upids.length === 0) {\n      return undefined;\n    }\n    const metrics = metricsFromTableOrSubquery(\n      `\n        (\n          select id, parent_id as parentId, name, self_count\n          from _callstacks_for_callsites!((\n            select p.callsite_id\n            from perf_sample p\n            join thread t using (utid)\n            where p.ts >= ${currentSelection.start}\n              and p.ts <= ${currentSelection.end}\n              and (\n                p.utid in (${utids.join(',')})\n                or t.upid in (${upids.join(',')})\n              )\n          ))\n        )\n      `,\n      [\n        {\n          name: 'Perf Samples',\n          unit: '',\n          columnName: 'self_count',\n        },\n      ],\n      'include perfetto module linux.perf.samples',\n    );\n    return new QueryFlamegraph(trace, metrics, {\n      state: Flamegraph.createDefaultState(metrics),\n    });\n  }\n\n  private computeSliceFlamegraph(trace: Trace, isChanged: boolean) {\n    const currentSelection = trace.selection.selection;\n    if (currentSelection.kind !== 'area') {\n      return undefined;\n    }\n    if (!isChanged) {\n      // If the selection has not changed, just return a copy of the last seen\n      // attrs.\n      return this.sliceFlamegraph;\n    }\n    const trackIds = [];\n    for (const trackInfo of currentSelection.tracks) {\n      if (trackInfo?.tags?.kind !== SLICE_TRACK_KIND) {\n        continue;\n      }\n      if (trackInfo.tags?.trackIds === undefined) {\n        continue;\n      }\n      trackIds.push(...trackInfo.tags.trackIds);\n    }\n    if (trackIds.length === 0) {\n      return undefined;\n    }\n    const metrics = metricsFromTableOrSubquery(\n      `\n        (\n          select *\n          from _viz_slice_ancestor_agg!((\n            select s.id, s.dur\n            from slice s\n            left join slice t on t.parent_id = s.id\n            where s.ts >= ${currentSelection.start}\n              and s.ts <= ${currentSelection.end}\n              and s.track_id in (${trackIds.join(',')})\n              and t.id is null\n          ))\n        )\n      `,\n      [\n        {\n          name: 'Duration',\n          unit: 'ns',\n          columnName: 'self_dur',\n        },\n        {\n          name: 'Samples',\n          unit: '',\n          columnName: 'self_count',\n        },\n      ],\n      'include perfetto module viz.slices;',\n    );\n    return new QueryFlamegraph(trace, metrics, {\n      state: Flamegraph.createDefaultState(metrics),\n    });\n  }\n}\n\nexport class AggregationsTabs implements Disposable {\n  private trash = new DisposableStack();\n\n  constructor(trace: TraceImpl) {\n    const unregister = trace.tabs.registerDetailsPanel({\n      render(selection) {\n        if (selection.kind === 'area') {\n          return m(AreaDetailsPanel, {trace});\n        } else {\n          return undefined;\n        }\n      },\n    });\n\n    this.trash.use(unregister);\n  }\n\n  [Symbol.dispose]() {\n    this.trash.dispose();\n  }\n}\n\nfunction getUpidsFromPerfSampleAreaSelection(currentSelection: AreaSelection) {\n  const upids = [];\n  for (const trackInfo of currentSelection.tracks) {\n    if (\n      trackInfo?.tags?.kind === PERF_SAMPLES_PROFILE_TRACK_KIND &&\n      trackInfo.tags?.utid === undefined\n    ) {\n      upids.push(assertExists(trackInfo.tags?.upid));\n    }\n  }\n  return upids;\n}\n\nfunction getUtidsFromPerfSampleAreaSelection(currentSelection: AreaSelection) {\n  const utids = [];\n  for (const trackInfo of currentSelection.tracks) {\n    if (\n      trackInfo?.tags?.kind === PERF_SAMPLES_PROFILE_TRACK_KIND &&\n      trackInfo.tags?.utid !== undefined\n    ) {\n      utids.push(trackInfo.tags?.utid);\n    }\n  }\n  return utids;\n}\n"]}