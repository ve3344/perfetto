{"version":3,"file":"query_result_tab.js","sourceRoot":"","sources":["../../../../src/components/query_table/query_result_tab.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2023 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport m from 'mithril';\nimport {v4 as uuidv4} from 'uuid';\nimport {assertExists} from '../../base/logging';\nimport {QueryResponse, runQuery} from './queries';\nimport {QueryError} from '../../trace_processor/query_result';\nimport {AddDebugTrackMenu} from '../tracks/add_debug_track_menu';\nimport {Button} from '../../widgets/button';\nimport {PopupMenu2} from '../../widgets/menu';\nimport {PopupPosition} from '../../widgets/popup';\nimport {QueryTable} from './query_table';\nimport {Trace} from '../../public/trace';\nimport {Tab} from '../../public/tab';\n\ninterface QueryResultTabConfig {\n  readonly query: string;\n  readonly title: string;\n  // Optional data to display in this tab instead of fetching it again\n  // (e.g. when duplicating an existing tab which already has the data).\n  readonly prefetchedResponse?: QueryResponse;\n}\n\n// External interface for adding a new query results tab\n// Automatically decided whether to add v1 or v2 tab\nexport function addQueryResultsTab(\n  trace: Trace,\n  config: QueryResultTabConfig,\n  tag?: string,\n): void {\n  const queryResultsTab = new QueryResultTab(trace, config);\n\n  const uri = 'queryResults#' + (tag ?? uuidv4());\n\n  trace.tabs.registerTab({\n    uri,\n    content: queryResultsTab,\n    isEphemeral: true,\n  });\n  trace.tabs.showTab(uri);\n}\n\nexport class QueryResultTab implements Tab {\n  private queryResponse?: QueryResponse;\n  private sqlViewName?: string;\n\n  constructor(\n    private readonly trace: Trace,\n    private readonly args: QueryResultTabConfig,\n  ) {\n    this.initTrack();\n  }\n\n  private async initTrack() {\n    if (this.args.prefetchedResponse !== undefined) {\n      this.queryResponse = this.args.prefetchedResponse;\n    } else {\n      const result = await runQuery(this.args.query, this.trace.engine);\n      this.queryResponse = result;\n      if (result.error !== undefined) {\n        return;\n      }\n    }\n\n    // TODO(stevegolton): Do we really need to create this view upfront?\n    this.sqlViewName = await this.createViewForDebugTrack(uuidv4());\n    if (this.sqlViewName) {\n      this.trace.scheduleFullRedraw();\n    }\n  }\n\n  getTitle(): string {\n    const suffix = this.queryResponse\n      ? ` (${this.queryResponse.rows.length})`\n      : '';\n    return `${this.args.title}${suffix}`;\n  }\n\n  render(): m.Children {\n    return m(QueryTable, {\n      trace: this.trace,\n      query: this.args.query,\n      resp: this.queryResponse,\n      fillParent: true,\n      contextButtons: [\n        this.sqlViewName === undefined\n          ? null\n          : m(\n              PopupMenu2,\n              {\n                trigger: m(Button, {label: 'Show debug track'}),\n                popupPosition: PopupPosition.Top,\n              },\n              m(AddDebugTrackMenu, {\n                trace: this.trace,\n                dataSource: {\n                  sqlSource: `select * from ${this.sqlViewName}`,\n                  columns: assertExists(this.queryResponse).columns,\n                },\n              }),\n            ),\n      ],\n    });\n  }\n\n  isLoading() {\n    return this.queryResponse === undefined;\n  }\n\n  async createViewForDebugTrack(uuid: string): Promise<string> {\n    const viewId = uuidToViewName(uuid);\n    // Assuming that the query results come from a SELECT query, try creating a\n    // view to allow us to reuse it for further queries.\n    const hasValidQueryResponse =\n      this.queryResponse && this.queryResponse.error === undefined;\n    const sqlQuery = hasValidQueryResponse\n      ? this.queryResponse!.lastStatementSql\n      : this.args.query;\n    try {\n      const createViewResult = await this.trace.engine.query(\n        `create view ${viewId} as ${sqlQuery}`,\n      );\n      if (createViewResult.error()) {\n        // If it failed, do nothing.\n        return '';\n      }\n    } catch (e) {\n      if (e instanceof QueryError) {\n        // If it failed, do nothing.\n        return '';\n      }\n      throw e;\n    }\n    return viewId;\n  }\n}\n\nexport function uuidToViewName(uuid: string): string {\n  return `view_${uuid.split('-').join('_')}`;\n}\n"]}