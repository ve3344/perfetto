{"version":3,"file":"histogram.js","sourceRoot":"","sources":["../../../../../../src/components/widgets/charts/histogram/histogram.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;;;AAEjC,8DAAwB;AACxB,4DAAqE;AACrE,+CAAyC;AACzC,mCAAuC;AACvC,yDAAoD;AAGpD,MAAa,SAAS;IACH,KAAK,CAAiB;IAEvC,YAAY,EAAC,KAAK,EAAuB;QACvC,IAAI,CAAC,KAAK,GAAG,IAAI,sBAAc,CAC7B,KAAK,CAAC,MAAM,EACZ,KAAK,CAAC,KAAK,EACX,KAAK,CAAC,SAAS,EACf,KAAK,CAAC,eAAe,CACtB,CAAC;IACJ,CAAC;IAED,IAAI;QACF,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,EAAE,CAAC;YAC3B,OAAO,IAAA,iBAAC,EAAC,iBAAO,CAAC,CAAC;QACpB,CAAC;QAED,OAAO,IAAA,iBAAC,EACN,QAAQ,EACR;YACE,SAAS,EAAE,OAAO;SACnB,EACD,IAAA,iBAAC,EAAC,oBAAQ,EAAE;YACV,IAAI,EAAE,IAAA,qCAAwB,EAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;YAC/C,IAAI,EAAE,EAAE;SACT,CAAC,CACH,CAAC;IACJ,CAAC;IAED,SAAS;QACP,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC;IAChC,CAAC;CACF;AAhCD,8BAgCC","sourcesContent":["// Copyright (C) 2024 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport m from 'mithril';\nimport {stringifyJsonWithBigints} from '../../../../base/json_utils';\nimport {VegaView} from '../../vega_view';\nimport {HistogramState} from './state';\nimport {Spinner} from '../../../../widgets/spinner';\nimport {ChartConfig} from '../chart';\n\nexport class Histogram implements m.ClassComponent<ChartConfig> {\n  private readonly state: HistogramState;\n\n  constructor({attrs}: m.Vnode<ChartConfig>) {\n    this.state = new HistogramState(\n      attrs.engine,\n      attrs.query,\n      attrs.sqlColumn,\n      attrs.aggregationType,\n    );\n  }\n\n  view() {\n    if (this.state.isLoading()) {\n      return m(Spinner);\n    }\n\n    return m(\n      'figure',\n      {\n        className: 'chart',\n      },\n      m(VegaView, {\n        spec: stringifyJsonWithBigints(this.state.spec),\n        data: {},\n      }),\n    );\n  }\n\n  isLoading(): boolean {\n    return this.state.isLoading();\n  }\n}\n"]}