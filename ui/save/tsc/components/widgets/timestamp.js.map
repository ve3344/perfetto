{"version":3,"file":"timestamp.js","sourceRoot":"","sources":["../../../../src/components/widgets/timestamp.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2023 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport m from 'mithril';\nimport {copyToClipboard} from '../../base/clipboard';\nimport {assertExists} from '../../base/logging';\nimport {Icons} from '../../base/semantic_icons';\nimport {time, Time} from '../../base/time';\nimport {AppImpl} from '../../core/app_impl';\nimport {Anchor} from '../../widgets/anchor';\nimport {MenuDivider, MenuItem, PopupMenu2} from '../../widgets/menu';\nimport {Trace} from '../../public/trace';\nimport {TimestampFormatMenuItem} from './timestamp_format_menu';\nimport {renderTimecode} from '../time_utils';\nimport {TimestampFormat} from '../../public/timeline';\n\n// import {MenuItem, PopupMenu2} from './menu';\n\ninterface TimestampAttrs {\n  // The timestamp to print, this should be the absolute, raw timestamp as\n  // found in trace processor.\n  ts: time;\n  // Custom text value to show instead of the default HH:MM:SS.mmm uuu nnn\n  // formatting.\n  display?: m.Children;\n  extraMenuItems?: m.Child[];\n}\n\nexport class Timestamp implements m.ClassComponent<TimestampAttrs> {\n  private readonly trace: Trace;\n\n  constructor() {\n    // TODO(primiano): the Trace object should be injected into the attrs, but\n    // there are too many users of this class and doing so requires a larger\n    // refactoring CL. Either that or we should find a different way to plumb\n    // the hoverCursorTimestamp.\n    this.trace = assertExists(AppImpl.instance.trace);\n  }\n\n  view({attrs}: m.Vnode<TimestampAttrs>) {\n    const {ts} = attrs;\n    const timeline = this.trace.timeline;\n    return m(\n      PopupMenu2,\n      {\n        trigger: m(\n          Anchor,\n          {\n            onmouseover: () => (timeline.hoverCursorTimestamp = ts),\n            onmouseout: () => (timeline.hoverCursorTimestamp = undefined),\n          },\n          attrs.display ?? this.formatTimestamp(timeline.toDomainTime(ts)),\n        ),\n      },\n      m(MenuItem, {\n        icon: Icons.Copy,\n        label: `Copy raw value`,\n        onclick: () => {\n          copyToClipboard(ts.toString());\n        },\n      }),\n      m(TimestampFormatMenuItem, {trace: this.trace}),\n      attrs.extraMenuItems ? [m(MenuDivider), attrs.extraMenuItems] : null,\n    );\n  }\n\n  private formatTimestamp(time: time): m.Children {\n    const fmt = this.trace.timeline.timestampFormat;\n    switch (fmt) {\n      case TimestampFormat.UTC:\n      case TimestampFormat.TraceTz:\n      case TimestampFormat.Timecode:\n        return renderTimecode(time);\n      case TimestampFormat.TraceNs:\n        return time.toString();\n      case TimestampFormat.TraceNsLocale:\n        return time.toLocaleString();\n      case TimestampFormat.Seconds:\n        return Time.formatSeconds(time);\n      case TimestampFormat.Milliseconds:\n        return Time.formatMilliseconds(time);\n      case TimestampFormat.Microseconds:\n        return Time.formatMicroseconds(time);\n      default:\n        const x: never = fmt;\n        throw new Error(`Invalid timestamp ${x}`);\n    }\n  }\n}\n"]}