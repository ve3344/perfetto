{"version":3,"file":"duration.js","sourceRoot":"","sources":["../../../../src/components/widgets/duration.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;;;AAEjC,8DAAwB;AACxB,oDAAqD;AACrD,gDAAgD;AAChD,8DAAgD;AAEhD,kDAA4C;AAC5C,iDAA4C;AAC5C,6CAAqE;AAErE,8CAA6C;AAC7C,mFAA0E;AAC1E,mEAAgE;AAOhE,MAAa,cAAc;IACR,KAAK,CAAQ;IAE9B;QACE,0EAA0E;QAC1E,wEAAwE;QACxE,yEAAyE;QACzE,4BAA4B;QAC5B,IAAI,CAAC,KAAK,GAAG,IAAA,sBAAY,EAAC,kBAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IACpD,CAAC;IAED,IAAI,CAAC,EAAC,KAAK,EAA+B;QACxC,MAAM,EAAC,GAAG,EAAC,GAAG,KAAK,CAAC;QAEpB,IAAI,GAAG,KAAK,CAAC,EAAE,EAAE,CAAC;YAChB,OAAO,eAAe,CAAC;QACzB,CAAC;QAED,OAAO,IAAA,iBAAC,EACN,iBAAU,EACV;YACE,OAAO,EAAE,IAAA,iBAAC,EAAC,eAAM,EAAE,IAAA,2BAAc,EAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;SACpD,EACD,IAAA,iBAAC,EAAC,eAAQ,EAAE;YACV,IAAI,EAAE,sBAAK,CAAC,IAAI;YAChB,KAAK,EAAE,gBAAgB;YACvB,OAAO,EAAE,GAAG,EAAE;gBACZ,IAAA,2BAAe,EAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;YAClC,CAAC;SACF,CAAC,EACF,IAAA,iBAAC,EAAC,+CAAuB,EAAE,EAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAC,CAAC,EAC/C,IAAA,iBAAC,EAAC,yDAAyB,EAAE,EAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAC,CAAC,EACjD,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,IAAA,iBAAC,EAAC,kBAAW,CAAC,EAAE,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,CACrE,CAAC;IACJ,CAAC;CACF;AAnCD,wCAmCC","sourcesContent":["// Copyright (C) 2023 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport m from 'mithril';\nimport {copyToClipboard} from '../../base/clipboard';\nimport {assertExists} from '../../base/logging';\nimport {Icons} from '../../base/semantic_icons';\nimport {duration} from '../../base/time';\nimport {AppImpl} from '../../core/app_impl';\nimport {Anchor} from '../../widgets/anchor';\nimport {MenuDivider, MenuItem, PopupMenu2} from '../../widgets/menu';\nimport {Trace} from '../../public/trace';\nimport {formatDuration} from '../time_utils';\nimport {DurationPrecisionMenuItem} from './duration_precision_menu_items';\nimport {TimestampFormatMenuItem} from './timestamp_format_menu';\n\ninterface DurationWidgetAttrs {\n  dur: duration;\n  extraMenuItems?: m.Child[];\n}\n\nexport class DurationWidget implements m.ClassComponent<DurationWidgetAttrs> {\n  private readonly trace: Trace;\n\n  constructor() {\n    // TODO(primiano): the Trace object should be injected into the attrs, but\n    // there are too many users of this class and doing so requires a larger\n    // refactoring CL. Either that or we should find a different way to plumb\n    // the hoverCursorTimestamp.\n    this.trace = assertExists(AppImpl.instance.trace);\n  }\n\n  view({attrs}: m.Vnode<DurationWidgetAttrs>) {\n    const {dur} = attrs;\n\n    if (dur === -1n) {\n      return '(Did not end)';\n    }\n\n    return m(\n      PopupMenu2,\n      {\n        trigger: m(Anchor, formatDuration(this.trace, dur)),\n      },\n      m(MenuItem, {\n        icon: Icons.Copy,\n        label: `Copy raw value`,\n        onclick: () => {\n          copyToClipboard(dur.toString());\n        },\n      }),\n      m(TimestampFormatMenuItem, {trace: this.trace}),\n      m(DurationPrecisionMenuItem, {trace: this.trace}),\n      attrs.extraMenuItems ? [m(MenuDivider), attrs.extraMenuItems] : null,\n    );\n  }\n}\n"]}