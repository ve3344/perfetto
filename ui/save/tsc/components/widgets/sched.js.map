{"version":3,"file":"sched.js","sourceRoot":"","sources":["../../../../src/components/widgets/sched.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;;AAqBjC,wCAKC;;AAxBD,8DAAwB;AAExB,iDAA4C;AAC5C,8DAAgD;AAChD,kDAA4C;AAe5C,SAAgB,cAAc,CAAC,EAAc;IAC3C,qEAAqE;IACrE,kBAAO,CAAC,QAAQ,CAAC,KAAK,EAAE,SAAS,CAAC,cAAc,CAAC,aAAa,EAAE,EAAE,EAAE;QAClE,iBAAiB,EAAE,IAAI;KACxB,CAAC,CAAC;AACL,CAAC;AAED,MAAa,QAAQ;IACnB,IAAI,CAAC,KAA6B;QAChC,OAAO,IAAA,iBAAC,EACN,eAAM,EACN;YACE,IAAI,EAAE,sBAAK,CAAC,eAAe;YAC3B,OAAO,EAAE,GAAG,EAAE;gBACZ,qEAAqE;gBACrE,kBAAO,CAAC,QAAQ,CAAC,KAAK,EAAE,SAAS,CAAC,cAAc,CAC9C,aAAa,EACb,KAAK,CAAC,KAAK,CAAC,EAAE,EACd;oBACE,2BAA2B,EACzB,KAAK,CAAC,KAAK,CAAC,2BAA2B,IAAI,IAAI;oBACjD,iBAAiB,EAAE,IAAI;iBACxB,CACF,CAAC;YACJ,CAAC;SACF,EACD,KAAK,CAAC,KAAK,CAAC,IAAI,IAAI,SAAS,KAAK,CAAC,KAAK,CAAC,EAAE,EAAE,CAC9C,CAAC;IACJ,CAAC;CACF;AAtBD,4BAsBC","sourcesContent":["// Copyright (C) 2024 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport m from 'mithril';\nimport {SchedSqlId} from '../sql_utils/core_types';\nimport {Anchor} from '../../widgets/anchor';\nimport {Icons} from '../../base/semantic_icons';\nimport {AppImpl} from '../../core/app_impl';\n\ninterface SchedRefAttrs {\n  // The id of the referenced sched slice in the sched_slice table.\n  readonly id: SchedSqlId;\n\n  // If not present, a placeholder name will be used.\n  readonly name?: string;\n\n  // Whether clicking on the reference should change the current tab\n  // to \"current selection\" tab in addition to updating the selection\n  // and changing the viewport. True by default.\n  readonly switchToCurrentSelectionTab?: boolean;\n}\n\nexport function goToSchedSlice(id: SchedSqlId) {\n  // TODO(primiano): the Trace object should be properly injected here.\n  AppImpl.instance.trace?.selection.selectSqlEvent('sched_slice', id, {\n    scrollToSelection: true,\n  });\n}\n\nexport class SchedRef implements m.ClassComponent<SchedRefAttrs> {\n  view(vnode: m.Vnode<SchedRefAttrs>) {\n    return m(\n      Anchor,\n      {\n        icon: Icons.UpdateSelection,\n        onclick: () => {\n          // TODO(primiano): the Trace object should be properly injected here.\n          AppImpl.instance.trace?.selection.selectSqlEvent(\n            'sched_slice',\n            vnode.attrs.id,\n            {\n              switchToCurrentSelectionTab:\n                vnode.attrs.switchToCurrentSelectionTab ?? true,\n              scrollToSelection: true,\n            },\n          );\n        },\n      },\n      vnode.attrs.name ?? `Sched ${vnode.attrs.id}`,\n    );\n  }\n}\n"]}