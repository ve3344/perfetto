{"version":3,"file":"sql_table_tab.js","sourceRoot":"","sources":["../../../../src/components/details/sql_table_tab.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2023 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport m from 'mithril';\nimport {copyToClipboard} from '../../base/clipboard';\nimport {Icons} from '../../base/semantic_icons';\nimport {exists} from '../../base/utils';\nimport {Button} from '../../widgets/button';\nimport {DetailsShell} from '../../widgets/details_shell';\nimport {Popup, PopupPosition} from '../../widgets/popup';\nimport {AddDebugTrackMenu} from '../tracks/add_debug_track_menu';\nimport {Filter} from '../widgets/sql/legacy_table/column';\nimport {SqlTableState} from '../widgets/sql/legacy_table/state';\nimport {SqlTable} from '../widgets/sql/legacy_table/table';\nimport {SqlTableDescription} from '../widgets/sql/legacy_table/table_description';\nimport {Trace} from '../../public/trace';\nimport {MenuItem, PopupMenu2} from '../../widgets/menu';\nimport {addEphemeralTab} from './add_ephemeral_tab';\nimport {Tab} from '../../public/tab';\nimport {addChartTab} from '../widgets/charts/chart_tab';\nimport {\n  ChartOption,\n  createChartConfigFromSqlTableState,\n} from '../widgets/charts/chart';\nimport {AddChartMenuItem} from '../widgets/charts/add_chart_menu';\n\nexport interface AddSqlTableTabParams {\n  table: SqlTableDescription;\n  filters?: Filter[];\n  imports?: string[];\n}\n\nexport function addLegacyTableTab(\n  trace: Trace,\n  config: AddSqlTableTabParams,\n): void {\n  addSqlTableTabWithState(\n    new SqlTableState(trace, config.table, {\n      filters: config.filters,\n      imports: config.imports,\n    }),\n  );\n}\n\nfunction addSqlTableTabWithState(state: SqlTableState) {\n  addEphemeralTab('sqlTable', new LegacySqlTableTab(state));\n}\n\nclass LegacySqlTableTab implements Tab {\n  constructor(private readonly state: SqlTableState) {}\n\n  render() {\n    const range = this.state.getDisplayedRange();\n    const rowCount = this.state.getTotalRowCount();\n    const navigation = [\n      exists(range) &&\n        exists(rowCount) &&\n        `Showing rows ${range.from}-${range.to} of ${rowCount}`,\n      m(Button, {\n        icon: Icons.GoBack,\n        disabled: !this.state.canGoBack(),\n        onclick: () => this.state.goBack(),\n      }),\n      m(Button, {\n        icon: Icons.GoForward,\n        disabled: !this.state.canGoForward(),\n        onclick: () => this.state.goForward(),\n      }),\n    ];\n    const {selectStatement, columns} = this.state.getCurrentRequest();\n    const debugTrackColumns = Object.values(columns).filter(\n      (c) => !c.startsWith('__'),\n    );\n    const addDebugTrack = m(\n      Popup,\n      {\n        trigger: m(Button, {label: 'Show debug track'}),\n        position: PopupPosition.Top,\n      },\n      m(AddDebugTrackMenu, {\n        trace: this.state.trace,\n        dataSource: {\n          sqlSource: `SELECT ${debugTrackColumns.join(', ')} FROM (${selectStatement})`,\n          columns: debugTrackColumns,\n        },\n      }),\n    );\n\n    return m(\n      DetailsShell,\n      {\n        title: 'Table',\n        description: this.getDisplayName(),\n        buttons: [\n          ...navigation,\n          addDebugTrack,\n          m(\n            PopupMenu2,\n            {\n              trigger: m(Button, {\n                icon: Icons.Menu,\n              }),\n            },\n            m(MenuItem, {\n              label: 'Duplicate',\n              icon: 'tab_duplicate',\n              onclick: () => addSqlTableTabWithState(this.state.clone()),\n            }),\n            m(MenuItem, {\n              label: 'Copy SQL query',\n              icon: Icons.Copy,\n              onclick: () =>\n                copyToClipboard(this.state.getNonPaginatedSQLQuery()),\n            }),\n          ),\n        ],\n      },\n      m(SqlTable, {\n        state: this.state,\n        addColumnMenuItems: (column, columnAlias) =>\n          m(AddChartMenuItem, {\n            chartConfig: createChartConfigFromSqlTableState(\n              column,\n              columnAlias,\n              this.state,\n            ),\n            chartOptions: [ChartOption.HISTOGRAM],\n            addChart: (chart) => addChartTab(chart),\n          }),\n      }),\n    );\n  }\n\n  getTitle(): string {\n    const rowCount = this.state.getTotalRowCount();\n    const rows = rowCount === undefined ? '' : ` (${rowCount})`;\n    return `Table ${this.getDisplayName()}${rows}`;\n  }\n\n  private getDisplayName(): string {\n    return this.state.config.displayName ?? this.state.config.name;\n  }\n\n  isLoading(): boolean {\n    return this.state.isLoading();\n  }\n}\n"]}