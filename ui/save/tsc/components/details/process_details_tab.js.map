{"version":3,"file":"process_details_tab.js","sourceRoot":"","sources":["../../../../src/components/details/process_details_tab.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;;;AAEjC,8DAAwB;AAGxB,+DAAyD;AACzD,2DAAuE;AACvE,mDAA8C;AAC9C,4DAAsE;AACtE,IAAO,CAAC,GAAG,uBAAa,CAAC;AAGzB,MAAa,iBAAiB;IASR;IARZ,IAAI,CAAU;IAEtB,4EAA4E;IAC5E,6CAA6C;IAC7C,EAAE;IACF,6FAA6F;IAC7F,+FAA+F;IAC/F,yEAAyE;IACzE,YAAoB,IAA8C;QAA9C,SAAI,GAAJ,IAAI,CAA0C;QAChE,IAAI,CAAC,IAAI,GAAG,IAAI,iBAAO,CAAC,IAAI,CAAC,KAAK,EAAE,SAAS,EAAE,IAAI,CAAC,IAAI,EAAE;YACxD,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC;YACrB,MAAM,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC;YACvB,YAAY,EAAE,CAAC,CAAC,SAAS,CAAC,UAAU,EAAE,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC;YACzD,UAAU,EAAE,CAAC,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC;YACrD,gBAAgB,EAAE,CAAC,CAAC,QAAQ,CAAC,SAAS,EAAE,aAAa,EAAE;gBACrD,UAAU,EAAE,IAAI;aACjB,CAAC;YACF,SAAS,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,EAAE,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC;YAC7C,gBAAgB,EAAE,CAAC,CAAC,KAAK,CAAC,eAAe,EAAE,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC;YAC9D,cAAc,EAAE,CAAC,CAAC,KAAK,CAAC,SAAS,EAAE,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC;YACtD,YAAY,EAAE,CAAC,CAAC,KAAK,CAAC,YAAY,EAAE,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC;YACvD,MAAM,EAAE,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC;SACjC,CAAC,CAAC;IACL,CAAC;IAED,MAAM;QACJ,OAAO,IAAA,iBAAC,EACN,4BAAY,EACZ;YACE,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE;SACvB,EACD,IAAA,iBAAC,EACC,wBAAU,EACV,IAAA,iBAAC,EAAC,8BAAgB,EAAE,IAAA,iBAAC,EAAC,iBAAO,EAAE,EAAC,KAAK,EAAE,SAAS,EAAC,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CACxE,CACF,CAAC;IACJ,CAAC;IAED,QAAQ;QACN,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,KAAK,SAAS,EAAE,CAAC;YAChC,OAAO,WAAW,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;QACpC,CAAC;QACD,OAAO,gBAAgB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;IAC1C,CAAC;CACF;AA7CD,8CA6CC","sourcesContent":["// Copyright (C) 2024 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport m from 'mithril';\nimport {Tab} from '../../public/tab';\nimport {Upid} from '../sql_utils/core_types';\nimport {DetailsShell} from '../../widgets/details_shell';\nimport {GridLayout, GridLayoutColumn} from '../../widgets/grid_layout';\nimport {Section} from '../../widgets/section';\nimport {Details, DetailsSchema} from '../widgets/sql/details/details';\nimport d = DetailsSchema;\nimport {Trace} from '../../public/trace';\n\nexport class ProcessDetailsTab implements Tab {\n  private data: Details;\n\n  // TODO(altimin): Ideally, we would not require the pid to be passed in, but\n  // fetch it from the underlying data instead.\n  //\n  // However, the only place which creates `ProcessDetailsTab` currently is `renderProcessRef`,\n  // which already has `pid` available (note that Details is already fetching the data, including\n  // the `pid` from the trace processor, but it doesn't expose it for now).\n  constructor(private args: {trace: Trace; upid: Upid; pid?: number}) {\n    this.data = new Details(args.trace, 'process', args.upid, {\n      'pid': d.Value('pid'),\n      'Name': d.Value('name'),\n      'Start time': d.Timestamp('start_ts', {skipIfNull: true}),\n      'End time': d.Timestamp('end_ts', {skipIfNull: true}),\n      'Parent process': d.SqlIdRef('process', 'parent_upid', {\n        skipIfNull: true,\n      }),\n      'User ID': d.Value('uid', {skipIfNull: true}),\n      'Android app ID': d.Value('android_appid', {skipIfNull: true}),\n      'Command line': d.Value('cmdline', {skipIfNull: true}),\n      'Machine id': d.Value('machine_id', {skipIfNull: true}),\n      'Args': d.ArgSetId('arg_set_id'),\n    });\n  }\n\n  render() {\n    return m(\n      DetailsShell,\n      {\n        title: this.getTitle(),\n      },\n      m(\n        GridLayout,\n        m(GridLayoutColumn, m(Section, {title: 'Details'}, this.data.render())),\n      ),\n    );\n  }\n\n  getTitle(): string {\n    if (this.args.pid !== undefined) {\n      return `Process ${this.args.pid}`;\n    }\n    return `Process upid:${this.args.upid}`;\n  }\n}\n"]}