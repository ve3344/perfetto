{"version":3,"file":"slice_args.js","sourceRoot":"","sources":["../../../../src/components/details/slice_args.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAkBjC,0CAOC;AAED,0BAEC;;AA3BD,8DAAwB;AACxB,0DAAiD;AACjD,8DAAgD;AAChD,0DAAqD;AACrD,4CAAwC;AACxC,2DAAoE;AACpE,iDAA4C;AAC5C,6CAAwD;AACxD,6CAA4C;AAE5C,gDAAgD;AAChD,uFAAsF;AAEtF,8CAAyC;AAEzC,0DAA0D;AAC1D,SAAgB,eAAe,CAAC,KAAY,EAAE,IAAW;IACvD,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;QACpB,MAAM,IAAI,GAAG,IAAA,qCAAiB,EAAC,IAAI,CAAC,CAAC;QACrC,OAAO,kBAAkB,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IACzC,CAAC;SAAM,CAAC;QACN,OAAO,SAAS,CAAC;IACnB,CAAC;AACH,CAAC;AAED,SAAgB,OAAO,CAAC,IAAY;IAClC,OAAO,IAAA,cAAM,EAAC,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;AACzC,CAAC;AAED,SAAS,kBAAkB,CAAC,KAAY,EAAE,IAAoB;IAC5D,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE;QACtB,MAAM,EAAC,GAAG,EAAE,KAAK,EAAE,QAAQ,EAAC,GAAG,GAAG,CAAC;QACnC,IAAI,QAAQ,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YACtC,iEAAiE;YACjE,MAAM,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC1B,MAAM,YAAY,GAAG;gBACnB,GAAG,KAAK;gBACR,GAAG,EAAE,YAAY,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC;aAClC,CAAC;YACF,OAAO,kBAAkB,CAAC,KAAK,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC;QACnD,CAAC;aAAM,CAAC;YACN,OAAO,IAAA,iBAAC,EACN,eAAQ,EACR;gBACE,IAAI,EAAE,YAAY,CAAC,KAAK,EAAE,YAAY,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC;gBACnD,KAAK,EAAE,IAAA,cAAM,EAAC,KAAK,CAAC,IAAI,cAAc,CAAC,KAAK,CAAC;gBAC7C,OAAO,EAAE,QAAQ,IAAI,aAAa,CAAC,QAAQ,CAAC;aAC7C,EACD,QAAQ,IAAI,kBAAkB,CAAC,KAAK,EAAE,QAAQ,CAAC,CAChD,CAAC;QACJ,CAAC;IACH,CAAC,CAAC,CAAC;AACL,CAAC;AAED,SAAS,YAAY,CAAC,KAAY,EAAE,GAAW,EAAE,KAAW;IAC1D,IAAI,KAAK,KAAK,SAAS,EAAE,CAAC;QACxB,OAAO,GAAG,CAAC;IACb,CAAC;SAAM,CAAC;QACN,MAAM,EAAC,GAAG,EAAE,OAAO,EAAE,YAAY,EAAC,GAAG,KAAK,CAAC;QAC3C,OAAO,IAAA,iBAAC,EACN,iBAAU,EACV,EAAC,OAAO,EAAE,IAAA,iBAAC,EAAC,eAAM,EAAE,EAAC,IAAI,EAAE,sBAAK,CAAC,WAAW,EAAC,EAAE,GAAG,CAAC,EAAC,EACpD,IAAA,iBAAC,EAAC,eAAQ,EAAE;YACV,KAAK,EAAE,eAAe;YACtB,IAAI,EAAE,cAAc;YACpB,OAAO,EAAE,GAAG,EAAE,CAAC,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC;SACtD,CAAC,EACF,IAAA,iBAAC,EAAC,eAAQ,EAAE;YACV,KAAK,EAAE,iCAAiC;YACxC,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,GAAG,EAAE;gBACZ,uBAAU,CAAC,oBAAoB,CAAC,KAAK,EAAE;oBACrC,KAAK,EAAE,IAAA,sBAAY,EAAC,IAAA,2CAAsB,EAAC,OAAO,CAAC,CAAC;oBACpD,OAAO,EAAE;wBACP;4BACE,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,IAAA,2BAAY,EAAC,YAAY,CAAC,EAAE;4BAC1D,OAAO,EAAE;gCACP;oCACE,MAAM,EAAE,eAAe;oCACvB,MAAM,EAAE;wCACN,KAAK,EAAE,MAAM;wCACb,MAAM,EAAE;4CACN,UAAU,EAAE,YAAY;4CACxB,GAAG,EAAE,IAAA,2BAAY,EAAC,OAAO,CAAC;yCAC3B;qCACF;iCACF;6BACF;yBACF;qBACF;iBACF,CAAC,CAAC;YACL,CAAC;SACF,CAAC,EACF,IAAA,iBAAC,EAAC,eAAQ,EAAE;YACV,KAAK,EAAE,2BAA2B;YAClC,IAAI,EAAE,aAAa;YACnB,OAAO,EAAE,GAAG,EAAE;gBACZ,uBAAU,CAAC,sBAAsB,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;YACpD,CAAC;SACF,CAAC,CACH,CAAC;IACJ,CAAC;AACH,CAAC;AAED,SAAS,cAAc,CAAC,EAAC,KAAK,EAAM;IAClC,IAAI,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC;QACrB,OAAO,aAAa,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;SAAM,CAAC;QACN,OAAO,GAAG,KAAK,EAAE,CAAC;IACpB,CAAC;AACH,CAAC;AAED,SAAS,aAAa,CAAC,QAAwB;IAC7C,MAAM,OAAO,GAAG,QAAQ;SACrB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;SACX,GAAG,CAAC,CAAC,EAAC,GAAG,EAAC,EAAE,EAAE,CAAC,GAAG,CAAC;SACnB,IAAI,CAAC,IAAI,CAAC,CAAC;IACd,MAAM,SAAS,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;IACtC,IAAI,SAAS,GAAG,CAAC,EAAE,CAAC;QAClB,OAAO,IAAI,OAAO,UAAU,SAAS,eAAe,CAAC;IACvD,CAAC;SAAM,CAAC;QACN,OAAO,IAAI,OAAO,GAAG,CAAC;IACxB,CAAC;AACH,CAAC;AAED,SAAS,YAAY,CAAC,GAAG,GAAU;IACjC,OAAO,GAAG;SACP,GAAG,CAAC,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE;QACtB,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE,CAAC;YAChC,OAAO,IAAI,OAAO,GAAG,CAAC;QACxB,CAAC;aAAM,CAAC;YACN,OAAO,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC;QAC5C,CAAC;IACH,CAAC,CAAC;SACD,IAAI,CAAC,EAAE,CAAC,CAAC;AACd,CAAC;AAED,SAAS,SAAS,CAAC,KAAc;IAC/B,OAAO,CACL,IAAA,uBAAQ,EAAC,KAAK,CAAC;QACf,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,KAAK,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAC9D,CAAC;AACJ,CAAC;AAED,SAAS,aAAa,CAAC,GAAW;IAChC,OAAO,IAAA,iBAAC,EAAC,eAAM,EAAE,EAAC,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,aAAa,EAAC,EAAE,GAAG,CAAC,CAAC;AAC5E,CAAC","sourcesContent":["// Copyright (C) 2023 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport m from 'mithril';\nimport {isString} from '../../base/object_utils';\nimport {Icons} from '../../base/semantic_icons';\nimport {sqliteString} from '../../base/string_utils';\nimport {exists} from '../../base/utils';\nimport {ArgNode, convertArgsToTree, Key} from './slice_args_parser';\nimport {Anchor} from '../../widgets/anchor';\nimport {MenuItem, PopupMenu2} from '../../widgets/menu';\nimport {TreeNode} from '../../widgets/tree';\nimport {Arg} from '../sql_utils/args';\nimport {assertExists} from '../../base/logging';\nimport {getSqlTableDescription} from '../widgets/sql/legacy_table/sql_table_registry';\nimport {Trace} from '../../public/trace';\nimport {extensions} from '../extensions';\n\n// Renders slice arguments (key/value pairs) as a subtree.\nexport function renderArguments(trace: Trace, args: Arg[]): m.Children {\n  if (args.length > 0) {\n    const tree = convertArgsToTree(args);\n    return renderArgTreeNodes(trace, tree);\n  } else {\n    return undefined;\n  }\n}\n\nexport function hasArgs(args?: Arg[]): args is Arg[] {\n  return exists(args) && args.length > 0;\n}\n\nfunction renderArgTreeNodes(trace: Trace, args: ArgNode<Arg>[]): m.Children {\n  return args.map((arg) => {\n    const {key, value, children} = arg;\n    if (children && children.length === 1) {\n      // If we only have one child, collapse into self and combine keys\n      const child = children[0];\n      const compositeArg = {\n        ...child,\n        key: stringifyKey(key, child.key),\n      };\n      return renderArgTreeNodes(trace, [compositeArg]);\n    } else {\n      return m(\n        TreeNode,\n        {\n          left: renderArgKey(trace, stringifyKey(key), value),\n          right: exists(value) && renderArgValue(value),\n          summary: children && renderSummary(children),\n        },\n        children && renderArgTreeNodes(trace, children),\n      );\n    }\n  });\n}\n\nfunction renderArgKey(trace: Trace, key: string, value?: Arg): m.Children {\n  if (value === undefined) {\n    return key;\n  } else {\n    const {key: fullKey, displayValue} = value;\n    return m(\n      PopupMenu2,\n      {trigger: m(Anchor, {icon: Icons.ContextMenu}, key)},\n      m(MenuItem, {\n        label: 'Copy full key',\n        icon: 'content_copy',\n        onclick: () => navigator.clipboard.writeText(fullKey),\n      }),\n      m(MenuItem, {\n        label: 'Find slices with same arg value',\n        icon: 'search',\n        onclick: () => {\n          extensions.addLegacySqlTableTab(trace, {\n            table: assertExists(getSqlTableDescription('slice')),\n            filters: [\n              {\n                op: (cols) => `${cols[0]} = ${sqliteString(displayValue)}`,\n                columns: [\n                  {\n                    column: 'display_value',\n                    source: {\n                      table: 'args',\n                      joinOn: {\n                        arg_set_id: 'arg_set_id',\n                        key: sqliteString(fullKey),\n                      },\n                    },\n                  },\n                ],\n              },\n            ],\n          });\n        },\n      }),\n      m(MenuItem, {\n        label: 'Visualize argument values',\n        icon: 'query_stats',\n        onclick: () => {\n          extensions.addVisualizedArgTracks(trace, fullKey);\n        },\n      }),\n    );\n  }\n}\n\nfunction renderArgValue({value}: Arg): m.Children {\n  if (isWebLink(value)) {\n    return renderWebLink(value);\n  } else {\n    return `${value}`;\n  }\n}\n\nfunction renderSummary(children: ArgNode<Arg>[]): m.Children {\n  const summary = children\n    .slice(0, 2)\n    .map(({key}) => key)\n    .join(', ');\n  const remaining = children.length - 2;\n  if (remaining > 0) {\n    return `{${summary}, ... (${remaining} more items)}`;\n  } else {\n    return `{${summary}}`;\n  }\n}\n\nfunction stringifyKey(...key: Key[]): string {\n  return key\n    .map((element, index) => {\n      if (typeof element === 'number') {\n        return `[${element}]`;\n      } else {\n        return (index === 0 ? '' : '.') + element;\n      }\n    })\n    .join('');\n}\n\nfunction isWebLink(value: unknown): value is string {\n  return (\n    isString(value) &&\n    (value.startsWith('http://') || value.startsWith('https://'))\n  );\n}\n\nfunction renderWebLink(url: string): m.Children {\n  return m(Anchor, {href: url, target: '_blank', icon: 'open_in_new'}, url);\n}\n"]}