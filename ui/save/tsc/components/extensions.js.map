{"version":3,"file":"extensions.js","sourceRoot":"","sources":["../../../src/components/extensions.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;;AA4BjC,kDAEC;AAFD,SAAgB,mBAAmB,CAAC,CAAe;IACjD,kBAAU,GAAG,CAAC,CAAC;AACjB,CAAC","sourcesContent":["// Copyright (C) 2024 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {type addDebugSliceTrack} from './tracks/debug_tracks';\nimport {type addDebugCounterTrack} from './tracks/debug_tracks';\nimport {type addLegacyTableTab} from './details/sql_table_tab';\nimport {type addVisualizedArgTracks} from './tracks/visualized_args_tracks';\nimport {type addQueryResultsTab} from './query_table/query_result_tab';\n\n// TODO(primiano & stevegolton): This injection is to break the circular\n// dependency cycle that there is between various tabs and tracks.\n//\n// For example: DebugSliceTrack has a DebugSliceDetailsTab which shows details\n// about slices, which have a context menu, which allows to create a debug track\n// from it. We will break this cycle \"more properly\" by either:\n// 1. having a registry for context menu items for slices\n// 2. allowing plugins to expose API for the use of other plugins, and putting\n//    these extension points there instead\n\nexport interface ExtensionApi {\n  addDebugSliceTrack: typeof addDebugSliceTrack;\n  addDebugCounterTrack: typeof addDebugCounterTrack;\n  addLegacySqlTableTab: typeof addLegacyTableTab;\n  addVisualizedArgTracks: typeof addVisualizedArgTracks;\n  addQueryResultsTab: typeof addQueryResultsTab;\n}\n\nexport let extensions: ExtensionApi;\n\nexport function configureExtensions(e: ExtensionApi) {\n  extensions = e;\n}\n"]}