{"version":3,"file":"colorizer_unittest.js","sourceRoot":"","sources":["../../../src/components/colorizer_unittest.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAEjC,2CAAwD;AAExD,MAAM,kBAAkB,GAAG;IACzB,GAAG,EAAE,GAAG;IACR,GAAG,EAAE,GAAG;CACT,CAAC;AAEF,MAAM,kBAAkB,GAAG;IACzB,GAAG,EAAE,GAAG;IACR,GAAG,EAAE,GAAG;CACT,CAAC;AAEF,MAAM,kBAAkB,GAAG;IACzB,GAAG,EAAE,GAAG;IACR,GAAG,EAAE,GAAG;CACT,CAAC;AAEF,MAAM,oBAAoB,GAAG;IAC3B,GAAG,EAAE,EAAE;CACR,CAAC;AAEF,MAAM,oBAAoB,GAAG;IAC3B,GAAG,EAAE,EAAE;CACR,CAAC;AAEF,IAAI,CAAC,2CAA2C,EAAE,GAAG,EAAE;IACrD,MAAM,OAAO,GAAG,IAAA,0BAAc,EAAC,kBAAkB,CAAC,CAAC;IACnD,MAAM,OAAO,GAAG,IAAA,0BAAc,EAAC,kBAAkB,CAAC,CAAC;IACnD,MAAM,OAAO,GAAG,IAAA,0BAAc,EAAC,kBAAkB,CAAC,CAAC;IACnD,MAAM,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IACjC,MAAM,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC;AAEH,IAAI,CAAC,+CAA+C,EAAE,GAAG,EAAE;IACzD,MAAM,SAAS,GAAG,IAAA,0BAAc,EAAC,oBAAoB,CAAC,CAAC;IACvD,MAAM,SAAS,GAAG,IAAA,0BAAc,EAAC,oBAAoB,CAAC,CAAC;IACvD,MAAM,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC;AAEH,IAAI,CAAC,wBAAwB,EAAE,GAAG,EAAE;IAClC,MAAM,CAAC,GAAG,IAAA,0BAAc,EAAC,kBAAkB,CAAC,CAAC;IAC7C,MAAM,CAAC,GAAG,IAAA,0BAAc,EAAC,kBAAkB,CAAC,CAAC;IAC7C,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC;AAEH,IAAI,CAAC,wCAAwC,EAAE,GAAG,EAAE;IAClD,MAAM,CAAC,IAAA,uBAAW,EAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,IAAA,uBAAW,EAAC,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC,CAAC,CAAC","sourcesContent":["// Copyright (C) 2019 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {colorForCpu, colorForThread} from './colorizer';\n\nconst PROCESS_A_THREAD_A = {\n  tid: 100,\n  pid: 100,\n};\n\nconst PROCESS_A_THREAD_B = {\n  tid: 101,\n  pid: 100,\n};\n\nconst PROCESS_B_THREAD_A = {\n  tid: 200,\n  pid: 200,\n};\n\nconst PROCESS_UNK_THREAD_A = {\n  tid: 42,\n};\n\nconst PROCESS_UNK_THREAD_B = {\n  tid: 42,\n};\n\ntest('it gives threads colors by pid if present', () => {\n  const colorAA = colorForThread(PROCESS_A_THREAD_A);\n  const colorAB = colorForThread(PROCESS_A_THREAD_B);\n  const colorBA = colorForThread(PROCESS_B_THREAD_A);\n  expect(colorAA).toEqual(colorAB);\n  expect(colorAA).not.toEqual(colorBA);\n});\n\ntest('it gives threads colors by tid if pid missing', () => {\n  const colorUnkA = colorForThread(PROCESS_UNK_THREAD_A);\n  const colorUnkB = colorForThread(PROCESS_UNK_THREAD_B);\n  expect(colorUnkA).toEqual(colorUnkB);\n});\n\ntest(\"it doesn't copy colors\", () => {\n  const a = colorForThread(PROCESS_A_THREAD_A);\n  const b = colorForThread(PROCESS_A_THREAD_A);\n  expect(a).toBe(b);\n});\n\ntest('it gives different cpus different hues', () => {\n  expect(colorForCpu(0)).not.toEqual(colorForCpu(1));\n});\n"]}