{"version":3,"file":"query_flamegraph.js","sourceRoot":"","sources":["../../../src/components/query_flamegraph.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;;AAyFjC,gEAsBC;;AA7GD,8DAAwB;AACxB,yDAAmD;AACnD,+DAA8D;AAC9D,6CAA6C;AAC7C,6CAAwC;AACxC,uCAAuC;AAEvC,4DAGsC;AACtC,kEAMyC;AACzC,sDAK+B;AAyD/B,uEAAuE;AACvE,0EAA0E;AAC1E,8BAA8B;AAC9B,EAAE;AACF,6EAA6E;AAC7E,6EAA6E;AAC7E,4BAA4B;AAC5B,SAAgB,0BAA0B,CACxC,eAAuB,EACvB,YAA6E,EAC7E,aAAsB,EACtB,wBAA+D,EAC/D,sBAAgE;IAEhE,MAAM,OAAO,GAAG,EAAE,CAAC;IACnB,KAAK,MAAM,EAAC,IAAI,EAAE,IAAI,EAAE,UAAU,EAAC,IAAI,YAAY,EAAE,CAAC;QACpD,OAAO,CAAC,IAAI,CAAC;YACX,IAAI;YACJ,IAAI;YACJ,aAAa;YACb,SAAS,EAAE;oBACG,UAAU;eACf,eAAe;OACvB;YACD,wBAAwB;YACxB,sBAAsB;SACvB,CAAC,CAAC;IACL,CAAC;IACD,OAAO,OAAO,CAAC;AACjB,CAAC;AAED,8EAA8E;AAC9E,+CAA+C;AAC/C,MAAa,eAAe;IAMP;IACA;IACT;IAPF,IAAI,CAAuB;IAClB,UAAU,GAAG,IAAI,iBAAO,CAAC,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;IACnD,YAAY,GAAG,IAAI,4BAAY,EAAE,CAAC;IAEnD,YACmB,KAAY,EACZ,OAA6C,EACtD,KAA2B;QAFlB,UAAK,GAAL,KAAK,CAAO;QACZ,YAAO,GAAP,OAAO,CAAsC;QACtD,UAAK,GAAL,KAAK,CAAsB;IAClC,CAAC;IAEJ,MAAM;QACJ,IAAI,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE,EAAE,CAAC;YACrC,MAAM,MAAM,GAAG,IAAA,sBAAY,EACzB,IAAI,CAAC,OAAO,CAAC,IAAI,CACf,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,kBAAkB,KAAK,CAAC,CAAC,IAAI,CACtD,CACF,CAAC;YACF,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;YACjC,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACzB,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;YACtB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,IAAI,EAAE;gBACpC,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;gBACtB,IAAI,CAAC,IAAI,GAAG,MAAM,qBAAqB,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;YACvE,CAAC,CAAC,CAAC;QACL,CAAC;QACD,OAAO,IAAA,iBAAC,EAAC,uBAAU,EAAE;YACnB,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK;YACvB,aAAa,EAAE,CAAC,KAAK,EAAE,EAAE;gBACvB,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;gBACzB,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,CAAC;YAClC,CAAC;SACF,CAAC,CAAC;IACL,CAAC;CACF;AApCD,0CAoCC;AAED,KAAK,UAAU,qBAAqB,CAClC,MAAc,EACd,EACE,aAAa,EACb,SAAS,EACT,wBAAwB,EACxB,sBAAsB,GACA,EACxB,EAAC,OAAO,EAAE,IAAI,EAAkB;;;QAEhC,MAAM,SAAS,GAAG,OAAO;aACtB,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,YAAY,CAAC;aACtC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QACxB,MAAM,SAAS,GAAG,OAAO;aACtB,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,YAAY,CAAC;aACtC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QACxB,MAAM,aAAa,GAAG,OAAO;aAC1B,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,iBAAiB,CAAC;aAC3C,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QACxB,MAAM,SAAS,GAAG,OAAO;aACtB,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,YAAY,CAAC;aACtC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QAExB,6EAA6E;QAC7E,MAAM,iBAAiB,GAAG,CAAC,GAAG,SAAS,CAAC,CAAC;QACzC,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE,CAAC;YAC1B,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACrC,CAAC;QAED,MAAM,eAAe,GACnB,iBAAiB,CAAC,MAAM,KAAK,CAAC;YAC5B,CAAC,CAAC,GAAG;YACL,CAAC,CAAC,iBAAiB;iBACd,GAAG,CACF,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,gBAAgB,aAAa,CAAC,CAAC,CAAC,qBAAqB,CAAC,GAAG,CACpE;iBACA,IAAI,CAAC,KAAK,CAAC,CAAC;QACrB,MAAM,aAAa,GAAG,CAAC,CAAC,IAAI,iBAAiB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAE1D,MAAM,eAAe,GACnB,SAAS,CAAC,MAAM,KAAK,CAAC;YACpB,CAAC,CAAC,OAAO;YACT,CAAC,CAAC,SAAS;iBACN,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,cAAc,aAAa,CAAC,CAAC,CAAC,eAAe,CAAC;iBACzD,IAAI,CAAC,MAAM,CAAC,CAAC;QAEtB,MAAM,mBAAmB,GACvB,aAAa,CAAC,MAAM,KAAK,CAAC;YACxB,CAAC,CAAC,GAAG;YACL,CAAC,CAAC,aAAa;iBACV,GAAG,CACF,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,gBAAgB,aAAa,CAAC,CAAC,CAAC,qBAAqB,CAAC,GAAG,CACpE;iBACA,IAAI,CAAC,KAAK,CAAC,CAAC;QACrB,MAAM,iBAAiB,GAAG,CAAC,CAAC,IAAI,aAAa,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAE1D,MAAM,eAAe,GACnB,SAAS,CAAC,MAAM,KAAK,CAAC;YACpB,CAAC,CAAC,OAAO;YACT,CAAC,CAAC,SAAS;iBACN,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,cAAc,aAAa,CAAC,CAAC,CAAC,eAAe,CAAC;iBACzD,IAAI,CAAC,MAAM,CAAC,CAAC;QAEtB,MAAM,WAAW,GAAG,cAAc,CAAC,IAAI,CAAC,CAAC;QAEzC,MAAM,KAAK,GAAG,wBAAwB,IAAI,EAAE,CAAC;QAC7C,MAAM,SAAS,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QAE3C,MAAM,GAAG,GAAG,sBAAsB,IAAI,EAAE,CAAC;QACzC,MAAM,OAAO,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QAEvC,MAAM,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;QAChG,MAAM,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;QAE1F,IAAI,aAAa,KAAK,SAAS,EAAE,CAAC;YAChC,MAAM,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;QACpC,CAAC;QACD,MAAM,MAAM,CAAC,KAAK,CAAC,yCAAyC,CAAC,CAAC;QAE9D,MAAM,IAAI,GAAG,IAAA,gBAAS,GAAE,CAAC;QACzB,MAAY,UAAU,0CAAG,IAAI,uCAAoB,EAAE,OAAA,CAAC;QAEpD,UAAU,CAAC,GAAG,CACZ,MAAM,IAAA,+BAAmB,EACvB,MAAM,EACN,sCAAsC,IAAI,EAAE,EAC5C,SAAS,CACV,CACF,CAAC;QACF,UAAU,CAAC,GAAG,CACZ,MAAM,IAAA,+BAAmB,EACvB,MAAM,EACN,sCAAsC,IAAI,QAAQ,EAClD,sCAAsC,IAAI,YAAY,CACvD,CACF,CAAC;QAEF,8DAA8D;QAC9D,8BAA8B;QAC9B,UAAU,CAAC,GAAG,CACZ,MAAM,IAAA,+BAAmB,EACvB,MAAM,EACN,sBAAsB,IAAI,EAAE,EAC5B;;;;;;;;;gBASU,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC;YACvB,CAAC,CAAC,CAAC,sBAAsB,CAAC;YAC1B,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CACjC,CAAC,IAAI,EAAE;gBACN,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC;YACrB,CAAC,CAAC,CAAC,qBAAqB,CAAC;YACzB,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAC/B,CAAC,IAAI,EAAE;sDACgC,IAAI;;aAE7C,eAAe;aACf,eAAe;aACf,mBAAmB;aACnB,eAAe;aACf,WAAW;YACZ,CAAC,IAAI,iBAAiB,CAAC,MAAM;YAC7B,eAAe;;OAEpB,CACF,CACF,CAAC;QACF,8DAA8D;QAC9D,8BAA8B;QAC9B,UAAU,CAAC,GAAG,CACZ,MAAM,IAAA,+BAAmB,EACvB,MAAM,EACN,wBAAwB,IAAI,EAAE,EAC9B;;;+BAGyB,IAAI;YACvB,iBAAiB;;OAEtB,CACF,CACF,CAAC;QACF,UAAU,CAAC,GAAG,CACZ,MAAM,IAAA,+BAAmB,EACvB,MAAM,EACN,2BAA2B,IAAI,EAAE,EACjC;;;iCAG2B,IAAI;YACzB,aAAa;;OAElB,CACF,CACF,CAAC;QACF,UAAU,CAAC,GAAG,CACZ,MAAM,IAAA,+BAAmB,EACvB,MAAM,EACN,oBAAoB,IAAI,EAAE,EAC1B;;;+BAGyB,IAAI;iCACF,IAAI;oCACD,IAAI;YAC5B,eAAe;YACf,cAAc;YACd,IAAI,CAAC,IAAI,KAAK,WAAW,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM;;;;;+BAKzB,IAAI;iCACF,IAAI;oCACD,IAAI;YAC5B,eAAe;YACf,cAAc;;;OAGnB,CACF,CACF,CAAC;QACF,UAAU,CAAC,GAAG,CACZ,MAAM,IAAA,+BAAmB,EACvB,MAAM,EACN,sBAAsB,IAAI,EAAE,EAC5B;;;6BAGuB,IAAI;YACrB,eAAe;YACf,sBAAsB,CAAC,GAAG,CAAC;;OAEhC,CACF,CACF,CAAC;QACF,UAAU,CAAC,GAAG,CACZ,MAAM,IAAA,+BAAmB,EACvB,MAAM,EACN,sBAAsB,IAAI,EAAE,EAC5B;;;+BAGyB,IAAI;;OAE5B,CACF,CACF,CAAC;QACF,MAAM,GAAG,GAAG,MAAM,MAAM,CAAC,KAAK,CAAC;;;2BAGN,IAAI;2BACJ,IAAI;QACvB,eAAe;QACf,cAAc;;GAEnB,CAAC,CAAC;QAEH,MAAM,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;YAClB,EAAE,EAAE,kBAAG;YACP,QAAQ,EAAE,kBAAG;YACb,KAAK,EAAE,kBAAG;YACV,IAAI,EAAE,kBAAG;YACT,SAAS,EAAE,kBAAG;YACd,eAAe,EAAE,kBAAG;YACpB,qBAAqB,EAAE,uBAAQ;YAC/B,MAAM,EAAE,kBAAG;YACX,IAAI,EAAE,kBAAG;YACT,GAAG,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,uBAAQ,CAAC,CAAC,CAAC;YAC1D,GAAG,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,sBAAO,CAAC,CAAC,CAAC;SACxD,CAAC,CAAC;QACH,IAAI,iBAAiB,GAAG,CAAC,CAAC;QAC1B,IAAI,kBAAkB,GAAG,CAAC,CAAC;QAC3B,IAAI,QAAQ,GAAG,CAAC,CAAC;QACjB,IAAI,QAAQ,GAAG,CAAC,CAAC;QACjB,MAAM,KAAK,GAAG,EAAE,CAAC;QACjB,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC;YAC7B,MAAM,UAAU,GAAG,IAAI,GAAG,EAAkB,CAAC;YAC7C,KAAK,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;gBACnC,MAAM,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;gBACzB,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;oBACf,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,WAAW,EAAE,CAAW,CAAC,CAAC;gBAC7C,CAAC;YACH,CAAC;YACD,KAAK,CAAC,IAAI,CAAC;gBACT,EAAE,EAAE,EAAE,CAAC,EAAE;gBACT,QAAQ,EAAE,EAAE,CAAC,QAAQ;gBACrB,KAAK,EAAE,EAAE,CAAC,KAAK;gBACf,IAAI,EAAE,EAAE,CAAC,IAAI;gBACb,SAAS,EAAE,EAAE,CAAC,SAAS;gBACvB,eAAe,EAAE,EAAE,CAAC,eAAe;gBACnC,qBAAqB,EAAE,EAAE,CAAC,qBAAqB,IAAI,SAAS;gBAC5D,MAAM,EAAE,EAAE,CAAC,MAAM;gBACjB,IAAI,EAAE,EAAE,CAAC,IAAI;gBACb,UAAU;aACX,CAAC,CAAC;YACH,IAAI,EAAE,CAAC,KAAK,KAAK,CAAC,EAAE,CAAC;gBACnB,iBAAiB,IAAI,EAAE,CAAC,eAAe,CAAC;YAC1C,CAAC;iBAAM,IAAI,EAAE,CAAC,KAAK,KAAK,CAAC,CAAC,EAAE,CAAC;gBAC3B,kBAAkB,IAAI,EAAE,CAAC,eAAe,CAAC;YAC3C,CAAC;YACD,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC;YACxC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC;QAC1C,CAAC;QACD,MAAM,QAAQ,GAAG,MAAM,MAAM,CAAC,KAAK,CACjC,+CAA+C,IAAI,EAAE,CACtD,CAAC;QACF,MAAM,yBAAyB,GAAG,QAAQ,CAAC,QAAQ,CAAC,EAAC,CAAC,EAAE,uBAAQ,EAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QAC1E,OAAO;YACL,KAAK;YACL,uBAAuB,EACrB,IAAI,CAAC,IAAI,KAAK,WAAW,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,iBAAiB;YACpE,yBAAyB;YACzB,QAAQ;YACR,QAAQ;SACT,CAAC;;;;;;;;;;;CACH;AAED,SAAS,aAAa,CAAC,CAAS;IAC9B,IAAI,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC;QACzC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACxB,CAAC;IACD,OAAO,IAAI,CAAC,GAAG,CAAC;AAClB,CAAC;AAED,SAAS,cAAc,CAAC,IAAoB;IAC1C,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE,CAAC;QAC1B,OAAO,cAAc,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;IACpD,CAAC;IACD,IAAI,IAAI,CAAC,IAAI,KAAK,WAAW,EAAE,CAAC;QAC9B,OAAO,WAAW,CAAC;IACrB,CAAC;IACD,OAAO,GAAG,CAAC;AACb,CAAC;AAED,SAAS,sBAAsB,CAAC,GAA4C;IAC1E,MAAM,MAAM,GAAG,CAAC,CAA2B,EAAE,EAAE;QAC7C,QAAQ,CAAC,CAAC,gBAAgB,EAAE,CAAC;YAC3B,KAAK,aAAa;gBAChB,OAAO,oBAAoB,CAAC,CAAC,IAAI,cAAc,CAAC,CAAC,IAAI,EAAE,CAAC;YAC1D,KAAK,KAAK;gBACR,OAAO,OAAO,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,IAAI,EAAE,CAAC;QACzC,CAAC;IACH,CAAC,CAAC;IACF,OAAO,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;AACzF,CAAC","sourcesContent":["// Copyright (C) 2024 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport m from 'mithril';\nimport {AsyncLimiter} from '../base/async_limiter';\nimport {AsyncDisposableStack} from '../base/disposable_stack';\nimport {assertExists} from '../base/logging';\nimport {Monitor} from '../base/monitor';\nimport {uuidv4Sql} from '../base/uuid';\nimport {Engine} from '../trace_processor/engine';\nimport {\n  createPerfettoIndex,\n  createPerfettoTable,\n} from '../trace_processor/sql_utils';\nimport {\n  NUM,\n  NUM_NULL,\n  STR,\n  STR_NULL,\n  UNKNOWN,\n} from '../trace_processor/query_result';\nimport {\n  Flamegraph,\n  FlamegraphQueryData,\n  FlamegraphState,\n  FlamegraphView,\n} from '../widgets/flamegraph';\nimport {Trace} from '../public/trace';\n\nexport interface QueryFlamegraphColumn {\n  // The name of the column in SQL.\n  readonly name: string;\n\n  // The human readable name describing the contents of the column.\n  readonly displayName: string;\n}\n\nexport interface AggQueryFlamegraphColumn extends QueryFlamegraphColumn {\n  // The aggregation to be run when nodes are merged together in the flamegraph.\n  //\n  // TODO(lalitm): consider adding extra functions here (e.g. a top 5 or similar).\n  readonly mergeAggregation: 'ONE_OR_NULL' | 'SUM';\n}\n\nexport interface QueryFlamegraphMetric {\n  // The human readable name of the metric: will be shown to the user to change\n  // between metrics.\n  readonly name: string;\n\n  // The human readable SI-style unit of `selfValue`. Values will be shown to\n  // the user suffixed with this.\n  readonly unit: string;\n\n  // SQL statement which need to be run in preparation for being able to execute\n  // `statement`.\n  readonly dependencySql?: string;\n\n  // A single SQL statement which returns the columns `id`, `parentId`, `name`\n  // `selfValue`, all columns specified by `unaggregatableProperties` and\n  // `aggregatableProperties`.\n  readonly statement: string;\n\n  // Additional contextual columns containing data which should not be merged\n  // between sibling nodes, even if they have the same name.\n  //\n  // Examples include the mapping that a name comes from, the heap graph root\n  // type etc.\n  //\n  // Note: the name is always unaggregatable and should not be specified here.\n  readonly unaggregatableProperties?: ReadonlyArray<QueryFlamegraphColumn>;\n\n  // Additional contextual columns containing data which will be displayed to\n  // the user if there is no merging. If there is merging, currently the value\n  // will not be shown.\n  //\n  // Examples include the source file and line number.\n  readonly aggregatableProperties?: ReadonlyArray<AggQueryFlamegraphColumn>;\n}\n\nexport interface QueryFlamegraphState {\n  state: FlamegraphState;\n}\n\n// Given a table and columns on those table (corresponding to metrics),\n// returns an array of `QueryFlamegraphMetric` structs which can be passed\n// in QueryFlamegraph's attrs.\n//\n// `tableOrSubquery` should have the columns `id`, `parentId`, `name` and all\n// columns specified by `tableMetrics[].name`, `unaggregatableProperties` and\n// `aggregatableProperties`.\nexport function metricsFromTableOrSubquery(\n  tableOrSubquery: string,\n  tableMetrics: ReadonlyArray<{name: string; unit: string; columnName: string}>,\n  dependencySql?: string,\n  unaggregatableProperties?: ReadonlyArray<QueryFlamegraphColumn>,\n  aggregatableProperties?: ReadonlyArray<AggQueryFlamegraphColumn>,\n): QueryFlamegraphMetric[] {\n  const metrics = [];\n  for (const {name, unit, columnName} of tableMetrics) {\n    metrics.push({\n      name,\n      unit,\n      dependencySql,\n      statement: `\n        select *, ${columnName} as value\n        from ${tableOrSubquery}\n      `,\n      unaggregatableProperties,\n      aggregatableProperties,\n    });\n  }\n  return metrics;\n}\n\n// A Perfetto UI component which wraps the `Flamegraph` widget and fetches the\n// data for the widget by querying an `Engine`.\nexport class QueryFlamegraph {\n  private data?: FlamegraphQueryData;\n  private readonly selMonitor = new Monitor([() => this.state.state]);\n  private readonly queryLimiter = new AsyncLimiter();\n\n  constructor(\n    private readonly trace: Trace,\n    private readonly metrics: ReadonlyArray<QueryFlamegraphMetric>,\n    private state: QueryFlamegraphState,\n  ) {}\n\n  render() {\n    if (this.selMonitor.ifStateChanged()) {\n      const metric = assertExists(\n        this.metrics.find(\n          (x) => this.state.state.selectedMetricName === x.name,\n        ),\n      );\n      const engine = this.trace.engine;\n      const state = this.state;\n      this.data = undefined;\n      this.queryLimiter.schedule(async () => {\n        this.data = undefined;\n        this.data = await computeFlamegraphTree(engine, metric, state.state);\n      });\n    }\n    return m(Flamegraph, {\n      metrics: this.metrics,\n      data: this.data,\n      state: this.state.state,\n      onStateChange: (state) => {\n        this.state.state = state;\n        this.trace.scheduleFullRedraw();\n      },\n    });\n  }\n}\n\nasync function computeFlamegraphTree(\n  engine: Engine,\n  {\n    dependencySql,\n    statement,\n    unaggregatableProperties,\n    aggregatableProperties,\n  }: QueryFlamegraphMetric,\n  {filters, view}: FlamegraphState,\n): Promise<FlamegraphQueryData> {\n  const showStack = filters\n    .filter((x) => x.kind === 'SHOW_STACK')\n    .map((x) => x.filter);\n  const hideStack = filters\n    .filter((x) => x.kind === 'HIDE_STACK')\n    .map((x) => x.filter);\n  const showFromFrame = filters\n    .filter((x) => x.kind === 'SHOW_FROM_FRAME')\n    .map((x) => x.filter);\n  const hideFrame = filters\n    .filter((x) => x.kind === 'HIDE_FRAME')\n    .map((x) => x.filter);\n\n  // Pivot also essentially acts as a \"show stack\" filter so treat it like one.\n  const showStackAndPivot = [...showStack];\n  if (view.kind === 'PIVOT') {\n    showStackAndPivot.push(view.pivot);\n  }\n\n  const showStackFilter =\n    showStackAndPivot.length === 0\n      ? '0'\n      : showStackAndPivot\n          .map(\n            (x, i) => `((name like '${makeSqlFilter(x)}' escape '\\\\') << ${i})`,\n          )\n          .join(' | ');\n  const showStackBits = (1 << showStackAndPivot.length) - 1;\n\n  const hideStackFilter =\n    hideStack.length === 0\n      ? 'false'\n      : hideStack\n          .map((x) => `name like '${makeSqlFilter(x)}' escape '\\\\'`)\n          .join(' OR ');\n\n  const showFromFrameFilter =\n    showFromFrame.length === 0\n      ? '0'\n      : showFromFrame\n          .map(\n            (x, i) => `((name like '${makeSqlFilter(x)}' escape '\\\\') << ${i})`,\n          )\n          .join(' | ');\n  const showFromFrameBits = (1 << showFromFrame.length) - 1;\n\n  const hideFrameFilter =\n    hideFrame.length === 0\n      ? 'false'\n      : hideFrame\n          .map((x) => `name like '${makeSqlFilter(x)}' escape '\\\\'`)\n          .join(' OR ');\n\n  const pivotFilter = getPivotFilter(view);\n\n  const unagg = unaggregatableProperties ?? [];\n  const unaggCols = unagg.map((x) => x.name);\n\n  const agg = aggregatableProperties ?? [];\n  const aggCols = agg.map((x) => x.name);\n\n  const groupingColumns = `(${(unaggCols.length === 0 ? ['groupingColumn'] : unaggCols).join()})`;\n  const groupedColumns = `(${(aggCols.length === 0 ? ['groupedColumn'] : aggCols).join()})`;\n\n  if (dependencySql !== undefined) {\n    await engine.query(dependencySql);\n  }\n  await engine.query(`include perfetto module viz.flamegraph;`);\n\n  const uuid = uuidv4Sql();\n  await using disposable = new AsyncDisposableStack();\n\n  disposable.use(\n    await createPerfettoTable(\n      engine,\n      `_flamegraph_materialized_statement_${uuid}`,\n      statement,\n    ),\n  );\n  disposable.use(\n    await createPerfettoIndex(\n      engine,\n      `_flamegraph_materialized_statement_${uuid}_index`,\n      `_flamegraph_materialized_statement_${uuid}(parentId)`,\n    ),\n  );\n\n  // TODO(lalitm): this doesn't need to be called unless we have\n  // a non-empty set of filters.\n  disposable.use(\n    await createPerfettoTable(\n      engine,\n      `_flamegraph_source_${uuid}`,\n      `\n        select *\n        from _viz_flamegraph_prepare_filter!(\n          (\n            select\n              s.id,\n              s.parentId,\n              s.name,\n              s.value,\n              ${(unaggCols.length === 0\n                ? [`'' as groupingColumn`]\n                : unaggCols.map((x) => `s.${x}`)\n              ).join()},\n              ${(aggCols.length === 0\n                ? [`'' as groupedColumn`]\n                : aggCols.map((x) => `s.${x}`)\n              ).join()}\n            from _flamegraph_materialized_statement_${uuid} s\n          ),\n          (${showStackFilter}),\n          (${hideStackFilter}),\n          (${showFromFrameFilter}),\n          (${hideFrameFilter}),\n          (${pivotFilter}),\n          ${1 << showStackAndPivot.length},\n          ${groupingColumns}\n        )\n      `,\n    ),\n  );\n  // TODO(lalitm): this doesn't need to be called unless we have\n  // a non-empty set of filters.\n  disposable.use(\n    await createPerfettoTable(\n      engine,\n      `_flamegraph_filtered_${uuid}`,\n      `\n        select *\n        from _viz_flamegraph_filter_frames!(\n          _flamegraph_source_${uuid},\n          ${showFromFrameBits}\n        )\n      `,\n    ),\n  );\n  disposable.use(\n    await createPerfettoTable(\n      engine,\n      `_flamegraph_accumulated_${uuid}`,\n      `\n        select *\n        from _viz_flamegraph_accumulate!(\n          _flamegraph_filtered_${uuid},\n          ${showStackBits}\n        )\n      `,\n    ),\n  );\n  disposable.use(\n    await createPerfettoTable(\n      engine,\n      `_flamegraph_hash_${uuid}`,\n      `\n        select *\n        from _viz_flamegraph_downwards_hash!(\n          _flamegraph_source_${uuid},\n          _flamegraph_filtered_${uuid},\n          _flamegraph_accumulated_${uuid},\n          ${groupingColumns},\n          ${groupedColumns},\n          ${view.kind === 'BOTTOM_UP' ? 'FALSE' : 'TRUE'}\n        )\n        union all\n        select *\n        from _viz_flamegraph_upwards_hash!(\n          _flamegraph_source_${uuid},\n          _flamegraph_filtered_${uuid},\n          _flamegraph_accumulated_${uuid},\n          ${groupingColumns},\n          ${groupedColumns}\n        )\n        order by hash\n      `,\n    ),\n  );\n  disposable.use(\n    await createPerfettoTable(\n      engine,\n      `_flamegraph_merged_${uuid}`,\n      `\n        select *\n        from _viz_flamegraph_merge_hashes!(\n          _flamegraph_hash_${uuid},\n          ${groupingColumns},\n          ${computeGroupedAggExprs(agg)}\n        )\n      `,\n    ),\n  );\n  disposable.use(\n    await createPerfettoTable(\n      engine,\n      `_flamegraph_layout_${uuid}`,\n      `\n        select *\n        from _viz_flamegraph_local_layout!(\n          _flamegraph_merged_${uuid}\n        );\n      `,\n    ),\n  );\n  const res = await engine.query(`\n    select *\n    from _viz_flamegraph_global_layout!(\n      _flamegraph_merged_${uuid},\n      _flamegraph_layout_${uuid},\n      ${groupingColumns},\n      ${groupedColumns}\n    )\n  `);\n\n  const it = res.iter({\n    id: NUM,\n    parentId: NUM,\n    depth: NUM,\n    name: STR,\n    selfValue: NUM,\n    cumulativeValue: NUM,\n    parentCumulativeValue: NUM_NULL,\n    xStart: NUM,\n    xEnd: NUM,\n    ...Object.fromEntries(unaggCols.map((m) => [m, STR_NULL])),\n    ...Object.fromEntries(aggCols.map((m) => [m, UNKNOWN])),\n  });\n  let postiveRootsValue = 0;\n  let negativeRootsValue = 0;\n  let minDepth = 0;\n  let maxDepth = 0;\n  const nodes = [];\n  for (; it.valid(); it.next()) {\n    const properties = new Map<string, string>();\n    for (const a of [...agg, ...unagg]) {\n      const r = it.get(a.name);\n      if (r !== null) {\n        properties.set(a.displayName, r as string);\n      }\n    }\n    nodes.push({\n      id: it.id,\n      parentId: it.parentId,\n      depth: it.depth,\n      name: it.name,\n      selfValue: it.selfValue,\n      cumulativeValue: it.cumulativeValue,\n      parentCumulativeValue: it.parentCumulativeValue ?? undefined,\n      xStart: it.xStart,\n      xEnd: it.xEnd,\n      properties,\n    });\n    if (it.depth === 1) {\n      postiveRootsValue += it.cumulativeValue;\n    } else if (it.depth === -1) {\n      negativeRootsValue += it.cumulativeValue;\n    }\n    minDepth = Math.min(minDepth, it.depth);\n    maxDepth = Math.max(maxDepth, it.depth);\n  }\n  const sumQuery = await engine.query(\n    `select sum(value) v from _flamegraph_source_${uuid}`,\n  );\n  const unfilteredCumulativeValue = sumQuery.firstRow({v: NUM_NULL}).v ?? 0;\n  return {\n    nodes,\n    allRootsCumulativeValue:\n      view.kind === 'BOTTOM_UP' ? negativeRootsValue : postiveRootsValue,\n    unfilteredCumulativeValue,\n    minDepth,\n    maxDepth,\n  };\n}\n\nfunction makeSqlFilter(x: string) {\n  if (x.startsWith('^') && x.endsWith('$')) {\n    return x.slice(1, -1);\n  }\n  return `%${x}%`;\n}\n\nfunction getPivotFilter(view: FlamegraphView) {\n  if (view.kind === 'PIVOT') {\n    return `name like '${makeSqlFilter(view.pivot)}'`;\n  }\n  if (view.kind === 'BOTTOM_UP') {\n    return 'value > 0';\n  }\n  return '0';\n}\n\nfunction computeGroupedAggExprs(agg: ReadonlyArray<AggQueryFlamegraphColumn>) {\n  const aggFor = (x: AggQueryFlamegraphColumn) => {\n    switch (x.mergeAggregation) {\n      case 'ONE_OR_NULL':\n        return `IIF(COUNT() = 1, ${x.name}, NULL) AS ${x.name}`;\n      case 'SUM':\n        return `SUM(${x.name}) AS ${x.name}`;\n    }\n  };\n  return `(${agg.length === 0 ? 'groupedColumn' : agg.map((x) => aggFor(x)).join(',')})`;\n}\n"]}