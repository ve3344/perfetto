{"version":3,"file":"add_debug_track_menu.js","sourceRoot":"","sources":["../../../../src/components/tracks/add_debug_track_menu.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2023 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport m from 'mithril';\nimport {findRef} from '../../base/dom_utils';\nimport {Form, FormLabel} from '../../widgets/form';\nimport {Select} from '../../widgets/select';\nimport {TextInput} from '../../widgets/text_input';\nimport {\n  addDebugCounterTrack,\n  addDebugSliceTrack,\n  addPivotedTracks,\n} from './debug_tracks';\nimport {Trace} from '../../public/trace';\nimport {SliceColumnMapping, SqlDataSource} from './query_slice_track';\nimport {CounterColumnMapping} from './query_counter_track';\n\ninterface AddDebugTrackMenuAttrs {\n  dataSource: Required<SqlDataSource>;\n  trace: Trace;\n}\n\nconst TRACK_NAME_FIELD_REF = 'TRACK_NAME_FIELD';\n\nexport class AddDebugTrackMenu\n  implements m.ClassComponent<AddDebugTrackMenuAttrs>\n{\n  readonly columns: string[];\n\n  name: string = '';\n  trackType: 'slice' | 'counter' = 'slice';\n  // Names of columns which will be used as data sources for rendering.\n  // We store the config for all possible columns used for rendering (i.e.\n  // 'value' for slice and 'name' for counter) and then just don't the values\n  // which don't match the currently selected track type (so changing track type\n  // from A to B and back to A is a no-op).\n  renderParams: {\n    ts: string;\n    dur: string;\n    name: string;\n    value: string;\n    pivot: string;\n  };\n\n  constructor(vnode: m.Vnode<AddDebugTrackMenuAttrs>) {\n    this.columns = [...vnode.attrs.dataSource.columns];\n\n    const chooseDefaultOption = (name: string) => {\n      for (const column of this.columns) {\n        if (column === name) return column;\n      }\n      for (const column of this.columns) {\n        if (column.endsWith(`_${name}`)) return column;\n      }\n      // Debug tracks support data without dur, in which case it's treated as\n      // 0.\n      if (name === 'dur') {\n        return '0';\n      }\n      return this.columns[0];\n    };\n\n    this.renderParams = {\n      ts: chooseDefaultOption('ts'),\n      dur: chooseDefaultOption('dur'),\n      name: chooseDefaultOption('name'),\n      value: chooseDefaultOption('value'),\n      pivot: '',\n    };\n  }\n\n  oncreate({dom}: m.VnodeDOM<AddDebugTrackMenuAttrs>) {\n    this.focusTrackNameField(dom);\n  }\n\n  private focusTrackNameField(dom: Element) {\n    const element = findRef(dom, TRACK_NAME_FIELD_REF);\n    if (element) {\n      if (element instanceof HTMLInputElement) {\n        element.focus();\n      }\n    }\n  }\n\n  private renderTrackTypeSelect(trace: Trace) {\n    const options = [];\n    for (const type of ['slice', 'counter']) {\n      options.push(\n        m(\n          'option',\n          {\n            value: type,\n            selected: this.trackType === type ? true : undefined,\n          },\n          type,\n        ),\n      );\n    }\n    return m(\n      Select,\n      {\n        id: 'track_type',\n        oninput: (e: Event) => {\n          if (!e.target) return;\n          this.trackType = (e.target as HTMLSelectElement).value as\n            | 'slice'\n            | 'counter';\n          trace.scheduleFullRedraw();\n        },\n      },\n      options,\n    );\n  }\n\n  view(vnode: m.Vnode<AddDebugTrackMenuAttrs>) {\n    const renderSelect = (name: 'ts' | 'dur' | 'name' | 'value' | 'pivot') => {\n      const options = [];\n\n      if (name === 'pivot') {\n        options.push(\n          m(\n            'option',\n            {selected: this.renderParams[name] === '' ? true : undefined},\n            m('i', ''),\n          ),\n        );\n      }\n      for (const column of this.columns) {\n        options.push(\n          m(\n            'option',\n            {selected: this.renderParams[name] === column ? true : undefined},\n            column,\n          ),\n        );\n      }\n      if (name === 'dur') {\n        options.push(\n          m(\n            'option',\n            {selected: this.renderParams[name] === '0' ? true : undefined},\n            m('i', '0'),\n          ),\n        );\n      }\n      return [\n        m(FormLabel, {for: name}, name),\n        m(\n          Select,\n          {\n            id: name,\n            oninput: (e: Event) => {\n              if (!e.target) return;\n              this.renderParams[name] = (e.target as HTMLSelectElement).value;\n            },\n          },\n          options,\n        ),\n      ];\n    };\n\n    return m(\n      Form,\n      {\n        onSubmit: () => {\n          switch (this.trackType) {\n            case 'slice':\n              const sliceColumns: SliceColumnMapping = {\n                ts: this.renderParams.ts,\n                dur: this.renderParams.dur,\n                name: this.renderParams.name,\n              };\n              if (this.renderParams.pivot) {\n                addPivotedTracks(\n                  vnode.attrs.trace,\n                  vnode.attrs.dataSource,\n                  this.name,\n                  this.renderParams.pivot,\n                  async (ctx, data, trackName) =>\n                    addDebugSliceTrack({\n                      trace: ctx,\n                      data,\n                      title: trackName,\n                      columns: sliceColumns,\n                      argColumns: this.columns,\n                    }),\n                );\n              } else {\n                addDebugSliceTrack({\n                  trace: vnode.attrs.trace,\n                  data: vnode.attrs.dataSource,\n                  title: this.name,\n                  columns: sliceColumns,\n                  argColumns: this.columns,\n                });\n              }\n              break;\n            case 'counter':\n              const counterColumns: CounterColumnMapping = {\n                ts: this.renderParams.ts,\n                value: this.renderParams.value,\n              };\n\n              if (this.renderParams.pivot) {\n                addPivotedTracks(\n                  vnode.attrs.trace,\n                  vnode.attrs.dataSource,\n                  this.name,\n                  this.renderParams.pivot,\n                  async (ctx, data, trackName) =>\n                    addDebugCounterTrack({\n                      trace: ctx,\n                      data,\n                      title: trackName,\n                      columns: counterColumns,\n                    }),\n                );\n              } else {\n                addDebugCounterTrack({\n                  trace: vnode.attrs.trace,\n                  data: vnode.attrs.dataSource,\n                  title: this.name,\n                  columns: counterColumns,\n                });\n              }\n              break;\n          }\n        },\n        submitLabel: 'Show',\n      },\n      m(FormLabel, {for: 'track_name'}, 'Track name'),\n      m(TextInput, {\n        id: 'track_name',\n        ref: TRACK_NAME_FIELD_REF,\n        onkeydown: (e: KeyboardEvent) => {\n          // Allow Esc to close popup.\n          if (e.key === 'Escape') return;\n        },\n        oninput: (e: KeyboardEvent) => {\n          if (!e.target) return;\n          this.name = (e.target as HTMLInputElement).value;\n        },\n      }),\n      m(FormLabel, {for: 'track_type'}, 'Track type'),\n      this.renderTrackTypeSelect(vnode.attrs.trace),\n      renderSelect('ts'),\n      this.trackType === 'slice' && renderSelect('dur'),\n      this.trackType === 'slice' && renderSelect('name'),\n      this.trackType === 'counter' && renderSelect('value'),\n      renderSelect('pivot'),\n    );\n  }\n}\n"]}