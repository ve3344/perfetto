{"version":3,"file":"slice_layout.js","sourceRoot":"","sources":["../../../../src/components/tracks/slice_layout.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;;AAiBpB,QAAA,0BAA0B,GAAoB,MAAM,CAAC,MAAM,CAAC;IACvE,OAAO,EAAE,CAAC;IACV,UAAU,EAAE,CAAC;CACd,CAAC,CAAC;AAOU,QAAA,2BAA2B,GAAqB,MAAM,CAAC,MAAM,CAAC;IACzE,GAAG,kCAA0B;IAC7B,UAAU,EAAE,OAAO;IACnB,WAAW,EAAE,EAAE;CAChB,CAAC,CAAC;AAOU,QAAA,iCAAiC,GAC5C,MAAM,CAAC,MAAM,CAAC;IACZ,GAAG,kCAA0B;IAC7B,UAAU,EAAE,aAAa;IACzB,WAAW,EAAE,EAAE;CAChB,CAAC,CAAC;AASQ,QAAA,0BAA0B,GAAoB,MAAM,CAAC,MAAM,CAAC;IACvE,GAAG,kCAA0B;IAC7B,UAAU,EAAE,CAAC;IACb,MAAM,EAAE,IAAI;IACZ,UAAU,EAAE,OAAO;IACnB,WAAW,EAAE,EAAE;IACf,WAAW,EAAE,EAAE;IACf,OAAO,EAAE,CAAC;CACX,CAAC,CAAC;AAOU,QAAA,oBAAoB,GAC/B,yCAAiC,CAAC","sourcesContent":["// Copyright (C) 2021 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nexport interface SliceLayoutBase {\n  readonly padding: number; // vertical pixel padding between slices and track.\n  readonly rowSpacing: number; // Spacing between rows.\n\n  // A *guess* at the depth\n  readonly depthGuess?: number;\n\n  // True iff the track is flat (all slices have the same depth\n  // we have an optimisation for this).\n  readonly isFlat?: boolean;\n\n  readonly titleSizePx?: number;\n  readonly subtitleSizePx?: number;\n}\n\nexport const SLICE_LAYOUT_BASE_DEFAULTS: SliceLayoutBase = Object.freeze({\n  padding: 3,\n  rowSpacing: 0,\n});\n\nexport interface SliceLayoutFixed extends SliceLayoutBase {\n  readonly heightMode: 'FIXED';\n  readonly fixedHeight: number; // Outer height of the track.\n}\n\nexport const SLICE_LAYOUT_FIXED_DEFAULTS: SliceLayoutFixed = Object.freeze({\n  ...SLICE_LAYOUT_BASE_DEFAULTS,\n  heightMode: 'FIXED',\n  fixedHeight: 30,\n});\n\nexport interface SliceLayoutFitContent extends SliceLayoutBase {\n  readonly heightMode: 'FIT_CONTENT';\n  readonly sliceHeight: number; // Only when heightMode = 'FIT_CONTENT'.\n}\n\nexport const SLICE_LAYOUT_FIT_CONTENT_DEFAULTS: SliceLayoutFitContent =\n  Object.freeze({\n    ...SLICE_LAYOUT_BASE_DEFAULTS,\n    heightMode: 'FIT_CONTENT',\n    sliceHeight: 18,\n  });\n\nexport interface SliceLayoutFlat extends SliceLayoutBase {\n  readonly heightMode: 'FIXED';\n  readonly fixedHeight: number; // Outer height of the track.\n  readonly depthGuess: 0;\n  readonly isFlat: true;\n}\n\nexport const SLICE_LAYOUT_FLAT_DEFAULTS: SliceLayoutFlat = Object.freeze({\n  ...SLICE_LAYOUT_BASE_DEFAULTS,\n  depthGuess: 0,\n  isFlat: true,\n  heightMode: 'FIXED',\n  fixedHeight: 18,\n  titleSizePx: 10,\n  padding: 3,\n});\n\nexport type SliceLayout =\n  | SliceLayoutFixed\n  | SliceLayoutFitContent\n  | SliceLayoutFlat;\n\nexport const DEFAULT_SLICE_LAYOUT: SliceLayout =\n  SLICE_LAYOUT_FIT_CONTENT_DEFAULTS;\n"]}