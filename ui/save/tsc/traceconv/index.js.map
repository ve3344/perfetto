{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/traceconv/index.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2021 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {defer} from '../base/deferred';\nimport {\n  addErrorHandler,\n  assertExists,\n  ErrorDetails,\n  reportError,\n} from '../base/logging';\nimport {time} from '../base/time';\nimport traceconv from '../gen/traceconv';\n\nconst selfWorker = self as {} as Worker;\n\n// TODO(hjd): The trace ends up being copied too many times due to how\n// blob works. We should reduce the number of copies.\n\ntype Format = 'json' | 'systrace';\ntype Args =\n  | ConvertTraceAndDownloadArgs\n  | ConvertTraceAndOpenInLegacyArgs\n  | ConvertTraceToPprofArgs;\n\nfunction updateStatus(status: string) {\n  selfWorker.postMessage({\n    kind: 'updateStatus',\n    status,\n  });\n}\n\nfunction notifyJobCompleted() {\n  selfWorker.postMessage({kind: 'jobCompleted'});\n}\n\nfunction downloadFile(buffer: Uint8Array, name: string) {\n  selfWorker.postMessage(\n    {\n      kind: 'downloadFile',\n      buffer,\n      name,\n    },\n    [buffer.buffer],\n  );\n}\n\nfunction openTraceInLegacy(buffer: Uint8Array) {\n  selfWorker.postMessage({\n    kind: 'openTraceInLegacy',\n    buffer,\n  });\n}\n\nfunction forwardError(error: ErrorDetails) {\n  selfWorker.postMessage({\n    kind: 'error',\n    error,\n  });\n}\n\nfunction fsNodeToBuffer(fsNode: traceconv.FileSystemNode): Uint8Array {\n  const fileSize = assertExists(fsNode.usedBytes);\n  return new Uint8Array(fsNode.contents.buffer, 0, fileSize);\n}\n\nasync function runTraceconv(trace: Blob, args: string[]) {\n  const deferredRuntimeInitialized = defer<void>();\n  const module = traceconv({\n    noInitialRun: true,\n    locateFile: (s: string) => s,\n    print: updateStatus,\n    printErr: updateStatus,\n    onRuntimeInitialized: () => deferredRuntimeInitialized.resolve(),\n  });\n  await deferredRuntimeInitialized;\n  module.FS.mkdir('/fs');\n  module.FS.mount(\n    assertExists(module.FS.filesystems.WORKERFS),\n    {blobs: [{name: 'trace.proto', data: trace}]},\n    '/fs',\n  );\n  updateStatus('Converting trace');\n  module.callMain(args);\n  updateStatus('Trace conversion completed');\n  return module;\n}\n\ninterface ConvertTraceAndDownloadArgs {\n  kind: 'ConvertTraceAndDownload';\n  trace: Blob;\n  format: Format;\n  truncate?: 'start' | 'end';\n}\n\nfunction isConvertTraceAndDownload(\n  msg: Args,\n): msg is ConvertTraceAndDownloadArgs {\n  if (msg.kind !== 'ConvertTraceAndDownload') {\n    return false;\n  }\n  if (msg.trace === undefined) {\n    throw new Error('ConvertTraceAndDownloadArgs missing trace');\n  }\n  if (msg.format !== 'json' && msg.format !== 'systrace') {\n    throw new Error('ConvertTraceAndDownloadArgs has bad format');\n  }\n  return true;\n}\n\nasync function ConvertTraceAndDownload(\n  trace: Blob,\n  format: Format,\n  truncate?: 'start' | 'end',\n): Promise<void> {\n  const outPath = '/trace.json';\n  const args: string[] = [format];\n  if (truncate !== undefined) {\n    args.push('--truncate', truncate);\n  }\n  args.push('/fs/trace.proto', outPath);\n  try {\n    const module = await runTraceconv(trace, args);\n    const fsNode = module.FS.lookupPath(outPath).node;\n    downloadFile(fsNodeToBuffer(fsNode), `trace.${format}`);\n    module.FS.unlink(outPath);\n  } finally {\n    notifyJobCompleted();\n  }\n}\n\ninterface ConvertTraceAndOpenInLegacyArgs {\n  kind: 'ConvertTraceAndOpenInLegacy';\n  trace: Blob;\n  truncate?: 'start' | 'end';\n}\n\nfunction isConvertTraceAndOpenInLegacy(\n  msg: Args,\n): msg is ConvertTraceAndOpenInLegacyArgs {\n  if (msg.kind !== 'ConvertTraceAndOpenInLegacy') {\n    return false;\n  }\n  return true;\n}\n\nasync function ConvertTraceAndOpenInLegacy(\n  trace: Blob,\n  truncate?: 'start' | 'end',\n) {\n  const outPath = '/trace.json';\n  const args: string[] = ['json'];\n  if (truncate !== undefined) {\n    args.push('--truncate', truncate);\n  }\n  args.push('/fs/trace.proto', outPath);\n  try {\n    const module = await runTraceconv(trace, args);\n    const fsNode = module.FS.lookupPath(outPath).node;\n    const data = fsNode.contents.buffer;\n    const size = fsNode.usedBytes;\n    const buffer = new Uint8Array(data, 0, size);\n    openTraceInLegacy(buffer);\n    module.FS.unlink(outPath);\n  } finally {\n    notifyJobCompleted();\n  }\n}\n\ninterface ConvertTraceToPprofArgs {\n  kind: 'ConvertTraceToPprof';\n  trace: Blob;\n  pid: number;\n  ts: time;\n}\n\nfunction isConvertTraceToPprof(msg: Args): msg is ConvertTraceToPprofArgs {\n  if (msg.kind !== 'ConvertTraceToPprof') {\n    return false;\n  }\n  return true;\n}\n\nasync function ConvertTraceToPprof(trace: Blob, pid: number, ts: time) {\n  const args = [\n    'profile',\n    `--pid`,\n    `${pid}`,\n    `--timestamps`,\n    `${ts}`,\n    '/fs/trace.proto',\n  ];\n\n  try {\n    const module = await runTraceconv(trace, args);\n    const heapDirName = Object.keys(\n      module.FS.lookupPath('/tmp/').node.contents,\n    )[0];\n    const heapDirContents = module.FS.lookupPath(`/tmp/${heapDirName}`).node\n      .contents;\n    const heapDumpFiles = Object.keys(heapDirContents);\n    for (let i = 0; i < heapDumpFiles.length; ++i) {\n      const heapDump = heapDumpFiles[i];\n      const fileNode = module.FS.lookupPath(\n        `/tmp/${heapDirName}/${heapDump}`,\n      ).node;\n      const fileName = `/heap_dump.${i}.${pid}.pb`;\n      downloadFile(fsNodeToBuffer(fileNode), fileName);\n    }\n  } finally {\n    notifyJobCompleted();\n  }\n}\n\nselfWorker.onmessage = (msg: MessageEvent) => {\n  self.addEventListener('error', (e) => reportError(e));\n  self.addEventListener('unhandledrejection', (e) => reportError(e));\n  addErrorHandler((error: ErrorDetails) => forwardError(error));\n  const args = msg.data as Args;\n  if (isConvertTraceAndDownload(args)) {\n    ConvertTraceAndDownload(args.trace, args.format, args.truncate);\n  } else if (isConvertTraceAndOpenInLegacy(args)) {\n    ConvertTraceAndOpenInLegacy(args.trace, args.truncate);\n  } else if (isConvertTraceToPprof(args)) {\n    ConvertTraceToPprof(args.trace, args.pid, args.ts);\n  } else {\n    throw new Error(`Unknown method call ${JSON.stringify(args)}`);\n  }\n};\n"]}