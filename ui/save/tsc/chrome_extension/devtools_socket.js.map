{"version":3,"file":"devtools_socket.js","sourceRoot":"","sources":["../../../src/chrome_extension/devtools_socket.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;;AAIjC,6EAA6E;AAC7E,qBAAqB;AACrB,MAAa,cAAc;IACjB,eAAe,GAAa,CAAC,CAAS,EAAE,EAAE,GAAE,CAAC,CAAC;IAC9C,YAAY,GAAa,GAAG,EAAE,GAAE,CAAC,CAAC;IAClC,aAAa,GAAa,GAAG,EAAE,GAAE,CAAC,CAAC;IACnC,MAAM,CAAuC;IAErD;QACE,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC/D,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,EAAE;YAC9D,yEAAyE;YACzE,IAAI,IAAI,CAAC,eAAe,EAAE,CAAC;gBACzB,MAAM,GAAG,GAA0B,EAAC,MAAM,EAAE,MAAM,EAAC,CAAC;gBACpD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;YAC5C,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,IAAI,CAAC,OAAe;QAClB,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS;YAAE,OAAO;QAEtC,MAAM,GAAG,GAAqB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAClD,MAAM,CAAC,QAAQ,CAAC,WAAW,CACzB,IAAI,CAAC,MAAM,EACX,GAAG,CAAC,MAAM,EACV,GAAG,CAAC,MAAM,EACV,CAAC,MAAM,EAAE,EAAE;YACT,IAAI,MAAM,KAAK,SAAS;gBAAE,MAAM,GAAG,EAAE,CAAC;YACtC,MAAM,QAAQ,GAAsB,EAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,MAAM,EAAC,CAAC;YACzD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;QACjD,CAAC,CACF,CAAC;IACJ,CAAC;IAED,4EAA4E;IAC5E,8EAA8E;IAC9E,oCAAoC;IACpC,6EAA6E;IAC7E,6EAA6E;IAC7E,kBAAkB;IAClB,EAAE,CAAC,KAAa,EAAE,EAAY;QAC5B,IAAI,KAAK,KAAK,SAAS,EAAE,CAAC;YACxB,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC5B,CAAC;aAAM,IAAI,KAAK,KAAK,MAAM,EAAE,CAAC;YAC5B,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACzB,CAAC;aAAM,IAAI,KAAK,KAAK,OAAO,EAAE,CAAC;YAC7B,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QAC1B,CAAC;IACH,CAAC;IAED,cAAc,CAAC,MAAc,EAAE,GAAa;QAC1C,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;IACrC,CAAC;IAED,eAAe,CAAC,IAA8B;QAC5C,IAAI,CAAC,cAAc,CAAC,EAAC,QAAQ,EAAE,SAAS,EAAC,EAAE,IAAI,CAAC,CAAC;IACnD,CAAC;IAEO,cAAc,CACpB,MAAgC,EAChC,IAA8B;QAE9B,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,qBAAqB,CAAC,KAAK,EAAE,GAAG,EAAE;YAC/D,IAAI,MAAM,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC;gBAC7B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;gBACvC,OAAO;YACT,CAAC;YACD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,IAAI,EAAE,CAAC;QACT,CAAC,CAAC,CAAC;IACL,CAAC;IAED,MAAM;QACJ,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS;YAAE,OAAO;QAEtC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE;YACvC,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ,CAAC,OAAiC,EAAE,OAAe;QACzD,IAAI,OAAO,KAAK,IAAI,CAAC,MAAM,EAAE,CAAC;YAC5B,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;YACxB,IAAI,CAAC,aAAa,EAAE,CAAC;QACvB,CAAC;IACH,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAC,MAAM,KAAK,SAAS,CAAC;IACnC,CAAC;CACF;AA1FD,wCA0FC","sourcesContent":["// Copyright (C) 2019 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {JsonRpc2, LikeSocket} from 'noice-json-rpc';\n\n// To really understand how this works it is useful to see the implementation\n// of noice-json-rpc.\nexport class DevToolsSocket implements LikeSocket {\n  private messageCallback: Function = (_: string) => {};\n  private openCallback: Function = () => {};\n  private closeCallback: Function = () => {};\n  private target: chrome.debugger.Debuggee | undefined;\n\n  constructor() {\n    chrome.debugger.onDetach.addListener(this.onDetach.bind(this));\n    chrome.debugger.onEvent.addListener((_source, method, params) => {\n      // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n      if (this.messageCallback) {\n        const msg: JsonRpc2.Notification = {method, params};\n        this.messageCallback(JSON.stringify(msg));\n      }\n    });\n  }\n\n  send(message: string): void {\n    if (this.target === undefined) return;\n\n    const msg: JsonRpc2.Request = JSON.parse(message);\n    chrome.debugger.sendCommand(\n      this.target,\n      msg.method,\n      msg.params,\n      (result) => {\n        if (result === undefined) result = {};\n        const response: JsonRpc2.Response = {id: msg.id, result};\n        this.messageCallback(JSON.stringify(response));\n      },\n    );\n  }\n\n  // This method will be called once for each event soon after the creation of\n  // this object. To understand better what happens, checking the implementation\n  // of noice-json-rpc is very useful.\n  // While the events \"message\" and \"open\" are for implementing the LikeSocket,\n  // \"close\" is a callback set from ChromeTracingController, to reset the state\n  // after a detach.\n  on(event: string, cb: Function) {\n    if (event === 'message') {\n      this.messageCallback = cb;\n    } else if (event === 'open') {\n      this.openCallback = cb;\n    } else if (event === 'close') {\n      this.closeCallback = cb;\n    }\n  }\n\n  removeListener(_event: string, _cb: Function) {\n    throw new Error('Call unexpected');\n  }\n\n  attachToBrowser(then: (error?: string) => void) {\n    this.attachToTarget({targetId: 'browser'}, then);\n  }\n\n  private attachToTarget(\n    target: chrome.debugger.Debuggee,\n    then: (error?: string) => void,\n  ) {\n    chrome.debugger.attach(target, /* requiredVersion=*/ '1.3', () => {\n      if (chrome.runtime.lastError) {\n        then(chrome.runtime.lastError.message);\n        return;\n      }\n      this.target = target;\n      this.openCallback();\n      then();\n    });\n  }\n\n  detach() {\n    if (this.target === undefined) return;\n\n    chrome.debugger.detach(this.target, () => {\n      this.target = undefined;\n    });\n  }\n\n  onDetach(_source: chrome.debugger.Debuggee, _reason: string) {\n    if (_source === this.target) {\n      this.target = undefined;\n      this.closeCallback();\n    }\n  }\n\n  isAttached(): boolean {\n    return this.target !== undefined;\n  }\n}\n"]}