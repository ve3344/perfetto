{"version":3,"file":"chrome_tracing_controller.js","sourceRoot":"","sources":["../../../src/chrome_extension/chrome_tracing_controller.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2019 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Protocol} from 'devtools-protocol';\nimport {ProtocolProxyApi} from 'devtools-protocol/types/protocol-proxy-api';\nimport {Client} from 'noice-json-rpc';\n\nimport {base64Encode} from '../base/string_utils';\nimport {\n  ConsumerPortResponse,\n  GetTraceStatsResponse,\n  ReadBuffersResponse,\n} from '../plugins/dev.perfetto.RecordTrace/consumer_port_types';\nimport {RpcConsumerPort} from '../plugins/dev.perfetto.RecordTrace/record_controller_interfaces';\nimport {\n  browserSupportsPerfettoConfig,\n  extractTraceConfig,\n  hasSystemDataSourceConfig,\n} from '../plugins/dev.perfetto.RecordTrace/trace_config_utils';\nimport protos from '../protos';\n\nimport {DevToolsSocket} from './devtools_socket';\nimport {exists} from '../base/utils';\n\nconst CHUNK_SIZE: number = 1024 * 1024 * 16; // 16Mb\n\nexport class ChromeTracingController extends RpcConsumerPort {\n  private streamHandle: string | undefined = undefined;\n  private uiPort: chrome.runtime.Port;\n  private api: ProtocolProxyApi.ProtocolApi;\n  private devtoolsSocket: DevToolsSocket;\n  private lastBufferUsageEvent: Protocol.Tracing.BufferUsageEvent | undefined;\n  private tracingSessionOngoing = false;\n  private tracingSessionId = 0;\n\n  constructor(port: chrome.runtime.Port) {\n    super({\n      onConsumerPortResponse: (message: ConsumerPortResponse) =>\n        this.uiPort.postMessage(message),\n\n      onError: (error: string) =>\n        this.uiPort.postMessage({type: 'ChromeExtensionError', error}),\n\n      onStatus: (status) =>\n        this.uiPort.postMessage({type: 'ChromeExtensionStatus', status}),\n    });\n    this.uiPort = port;\n    this.devtoolsSocket = new DevToolsSocket();\n    this.devtoolsSocket.on('close', () => this.resetState());\n    const rpcClient = new Client(this.devtoolsSocket);\n    this.api = rpcClient.api();\n    this.api.Tracing.on('tracingComplete', this.onTracingComplete.bind(this));\n    this.api.Tracing.on('bufferUsage', this.onBufferUsage.bind(this));\n    this.uiPort.onDisconnect.addListener(() => {\n      this.devtoolsSocket.detach();\n    });\n  }\n\n  handleCommand(methodName: string, requestData: Uint8Array) {\n    switch (methodName) {\n      case 'EnableTracing':\n        this.enableTracing(requestData);\n        break;\n      case 'FreeBuffers':\n        this.freeBuffers();\n        break;\n      case 'ReadBuffers':\n        this.readBuffers();\n        break;\n      case 'DisableTracing':\n        this.disableTracing();\n        break;\n      case 'GetTraceStats':\n        this.getTraceStats();\n        break;\n      case 'GetCategories':\n        this.getCategories();\n        break;\n      default:\n        this.sendErrorMessage('Action not recognized');\n        console.log('Received not recognized message: ', methodName);\n        break;\n    }\n  }\n\n  enableTracing(enableTracingRequest: Uint8Array) {\n    this.resetState();\n    const traceConfigProto = extractTraceConfig(enableTracingRequest);\n    if (!traceConfigProto) {\n      this.sendErrorMessage('Invalid trace config');\n      return;\n    }\n\n    this.handleStartTracing(traceConfigProto);\n  }\n\n  toCamelCase(key: string, separator: string): string {\n    return key\n      .split(separator)\n      .map((part, index) => {\n        return index === 0 ? part : part[0].toUpperCase() + part.slice(1);\n      })\n      .join('');\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  convertDictKeys(obj: any): any {\n    if (Array.isArray(obj)) {\n      return obj.map((v) => this.convertDictKeys(v));\n    }\n    if (typeof obj === 'object' && obj !== null) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const converted: any = {};\n      for (const key of Object.keys(obj)) {\n        converted[this.toCamelCase(key, '_')] = this.convertDictKeys(obj[key]);\n      }\n      return converted;\n    }\n    return obj;\n  }\n\n  convertToDevToolsConfig(config: unknown): Protocol.Tracing.TraceConfig {\n    // DevTools uses a different naming style for config properties: Dictionary\n    // keys are named \"camelCase\" style, rather than \"underscore_case\" style as\n    // in the TraceConfig.\n    const convertedConfig = this.convertDictKeys(config);\n    // recordMode is specified as an enum with camelCase values.\n    if (convertedConfig.recordMode as string) {\n      convertedConfig.recordMode = this.toCamelCase(\n        convertedConfig.recordMode as string,\n        '-',\n      );\n    }\n    return convertedConfig as Protocol.Tracing.TraceConfig;\n  }\n\n  // TODO(nicomazz): write unit test for this\n  extractChromeConfig(\n    perfettoConfig: protos.TraceConfig,\n  ): Protocol.Tracing.TraceConfig {\n    for (const ds of perfettoConfig.dataSources) {\n      if (\n        ds.config &&\n        ds.config.name === 'org.chromium.trace_event' &&\n        exists(ds.config.chromeConfig) &&\n        exists(ds.config.chromeConfig.traceConfig)\n      ) {\n        const chromeConfigJsonString = ds.config.chromeConfig.traceConfig;\n        const config = JSON.parse(chromeConfigJsonString);\n        return this.convertToDevToolsConfig(config);\n      }\n    }\n    return {};\n  }\n\n  freeBuffers() {\n    this.devtoolsSocket.detach();\n    this.sendMessage({type: 'FreeBuffersResponse'});\n  }\n\n  async readBuffers(offset = 0) {\n    if (!this.devtoolsSocket.isAttached() || this.streamHandle === undefined) {\n      this.sendErrorMessage('No tracing session to read from');\n      return;\n    }\n\n    const res = await this.api.IO.read({\n      handle: this.streamHandle,\n      offset,\n      size: CHUNK_SIZE,\n    });\n    if (res === undefined) return;\n\n    const chunk = res.base64Encoded ? atob(res.data) : res.data;\n    // The 'as {} as UInt8Array' is done because we can't send ArrayBuffers\n    // trough a chrome.runtime.Port. The conversion from string to ArrayBuffer\n    // takes place on the other side of the port.\n    const response: ReadBuffersResponse = {\n      type: 'ReadBuffersResponse',\n      slices: [{data: chunk as {} as Uint8Array, lastSliceForPacket: res.eof}],\n    };\n    this.sendMessage(response);\n    if (res.eof) return;\n    this.readBuffers(offset + chunk.length);\n  }\n\n  async disableTracing() {\n    await this.endTracing(this.tracingSessionId);\n    this.sendMessage({type: 'DisableTracingResponse'});\n  }\n\n  async endTracing(tracingSessionId: number) {\n    if (tracingSessionId !== this.tracingSessionId) {\n      return;\n    }\n    if (this.tracingSessionOngoing) {\n      await this.api.Tracing.end();\n    }\n    this.tracingSessionOngoing = false;\n  }\n\n  getTraceStats() {\n    // If the statistics are not available yet, it is 0.\n    const percentFull = this.lastBufferUsageEvent?.percentFull ?? 0;\n    const stats: protos.ITraceStats = {\n      bufferStats: [\n        {bufferSize: 1000, bytesWritten: Math.round(percentFull * 1000)},\n      ],\n    };\n    const response: GetTraceStatsResponse = {\n      type: 'GetTraceStatsResponse',\n      traceStats: stats,\n    };\n    this.sendMessage(response);\n  }\n\n  getCategories() {\n    const fetchCategories = async () => {\n      const categories = (await this.api.Tracing.getCategories()).categories;\n      this.uiPort.postMessage({type: 'GetCategoriesResponse', categories});\n    };\n    // If a target is already attached, we simply fetch the categories.\n    if (this.devtoolsSocket.isAttached()) {\n      fetchCategories();\n      return;\n    }\n    // Otherwise, we attach temporarily.\n    this.devtoolsSocket.attachToBrowser(async (error?: string) => {\n      if (error) {\n        this.sendErrorMessage(\n          `Could not attach to DevTools browser target ` +\n            `(req. Chrome >= M81): ${error}`,\n        );\n        return;\n      }\n      fetchCategories();\n      this.devtoolsSocket.detach();\n    });\n  }\n\n  resetState() {\n    this.devtoolsSocket.detach();\n    this.streamHandle = undefined;\n  }\n\n  onTracingComplete(params: Protocol.Tracing.TracingCompleteEvent) {\n    this.streamHandle = params.stream;\n    this.sendMessage({type: 'EnableTracingResponse'});\n  }\n\n  onBufferUsage(params: Protocol.Tracing.BufferUsageEvent) {\n    this.lastBufferUsageEvent = params;\n  }\n\n  handleStartTracing(traceConfigProto: Uint8Array) {\n    this.devtoolsSocket.attachToBrowser(async (error?: string) => {\n      if (error) {\n        this.sendErrorMessage(\n          `Could not attach to DevTools browser target ` +\n            `(req. Chrome >= M81): ${error}`,\n        );\n        return;\n      }\n\n      const requestParams: Protocol.Tracing.StartRequest = {\n        streamFormat: 'proto',\n        transferMode: 'ReturnAsStream',\n        streamCompression: 'gzip',\n        bufferUsageReportingInterval: 200,\n      };\n\n      const traceConfig = protos.TraceConfig.decode(traceConfigProto);\n      if (browserSupportsPerfettoConfig()) {\n        const configEncoded = base64Encode(traceConfigProto);\n        await this.api.Tracing.start({\n          perfettoConfig: configEncoded,\n          ...requestParams,\n        });\n        this.tracingSessionOngoing = true;\n        const tracingSessionId = ++this.tracingSessionId;\n        setTimeout(\n          () => this.endTracing(tracingSessionId),\n          traceConfig.durationMs,\n        );\n      } else {\n        console.log(\n          'Used Chrome version is too old to support ' +\n            'perfettoConfig parameter. Using chrome config only instead.',\n        );\n\n        if (hasSystemDataSourceConfig(traceConfig)) {\n          this.sendErrorMessage(\n            'System tracing is not supported by this Chrome version. Choose' +\n              \" the 'Chrome' target instead to record a Chrome-only trace.\",\n          );\n          return;\n        }\n\n        const chromeConfig = this.extractChromeConfig(traceConfig);\n        await this.api.Tracing.start({\n          traceConfig: chromeConfig,\n          ...requestParams,\n        });\n      }\n    });\n  }\n}\n"]}