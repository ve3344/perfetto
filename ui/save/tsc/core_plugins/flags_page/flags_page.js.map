{"version":3,"file":"flags_page.js","sourceRoot":"","sources":["../../../../src/core_plugins/flags_page/flags_page.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2020 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport m from 'mithril';\nimport {channelChanged, getNextChannel, setChannel} from '../../core/channels';\nimport {featureFlags} from '../../core/feature_flags';\nimport {Flag, OverrideState} from '../../public/feature_flag';\nimport {raf} from '../../core/raf_scheduler';\nimport {PageAttrs} from '../../public/page';\nimport {Router} from '../../core/router';\n\nconst RELEASE_PROCESS_URL =\n  'https://perfetto.dev/docs/visualization/perfetto-ui-release-process';\n\ninterface FlagOption {\n  id: string;\n  name: string;\n}\n\ninterface SelectWidgetAttrs {\n  id: string;\n  label: string;\n  description: m.Children;\n  options: FlagOption[];\n  selected: string;\n  onSelect: (id: string) => void;\n}\n\nclass SelectWidget implements m.ClassComponent<SelectWidgetAttrs> {\n  view(vnode: m.Vnode<SelectWidgetAttrs>) {\n    const route = Router.parseUrl(window.location.href);\n    const attrs = vnode.attrs;\n    const cssClass = route.subpage === `/${attrs.id}` ? '.focused' : '';\n    return m(\n      '.flag-widget' + cssClass,\n      {id: attrs.id},\n      m('label', attrs.label),\n      m(\n        'select',\n        {\n          onchange: (e: InputEvent) => {\n            const value = (e.target as HTMLSelectElement).value;\n            attrs.onSelect(value);\n            raf.scheduleFullRedraw();\n          },\n        },\n        attrs.options.map((o) => {\n          const selected = o.id === attrs.selected;\n          return m('option', {value: o.id, selected}, o.name);\n        }),\n      ),\n      m('.description', attrs.description),\n    );\n  }\n}\n\ninterface FlagWidgetAttrs {\n  flag: Flag;\n}\n\nclass FlagWidget implements m.ClassComponent<FlagWidgetAttrs> {\n  view(vnode: m.Vnode<FlagWidgetAttrs>) {\n    const flag = vnode.attrs.flag;\n    const defaultState = flag.defaultValue ? 'Enabled' : 'Disabled';\n    return m(SelectWidget, {\n      label: flag.name,\n      id: flag.id,\n      description: flag.description,\n      options: [\n        {id: OverrideState.DEFAULT, name: `Default (${defaultState})`},\n        {id: OverrideState.TRUE, name: 'Enabled'},\n        {id: OverrideState.FALSE, name: 'Disabled'},\n      ],\n      selected: flag.overriddenState(),\n      onSelect: (value: string) => {\n        switch (value) {\n          case OverrideState.TRUE:\n            flag.set(true);\n            break;\n          case OverrideState.FALSE:\n            flag.set(false);\n            break;\n          default:\n          case OverrideState.DEFAULT:\n            flag.reset();\n            break;\n        }\n      },\n    });\n  }\n}\n\nexport class FlagsPage implements m.ClassComponent<PageAttrs> {\n  view() {\n    const needsReload = channelChanged();\n    return m(\n      '.flags-page',\n      m(\n        '.flags-content',\n        m('h1', 'Feature flags'),\n        needsReload && [\n          m('h2', 'Please reload for your changes to take effect'),\n        ],\n        m(SelectWidget, {\n          label: 'Release channel',\n          id: 'releaseChannel',\n          description: [\n            'Which release channel of the UI to use. See ',\n            m(\n              'a',\n              {\n                href: RELEASE_PROCESS_URL,\n              },\n              'Release Process',\n            ),\n            ' for more information.',\n          ],\n          options: [\n            {id: 'stable', name: 'Stable (default)'},\n            {id: 'canary', name: 'Canary'},\n            {id: 'autopush', name: 'Autopush'},\n          ],\n          selected: getNextChannel(),\n          onSelect: (id) => setChannel(id),\n        }),\n        m(\n          'button',\n          {\n            onclick: () => {\n              featureFlags.resetAll();\n              raf.scheduleFullRedraw();\n            },\n          },\n          'Reset all below',\n        ),\n\n        featureFlags.allFlags().map((flag) => m(FlagWidget, {flag})),\n      ),\n    );\n  }\n\n  oncreate(vnode: m.VnodeDOM<PageAttrs>) {\n    const flagId = /[/](\\w+)/.exec(vnode.attrs.subpage ?? '')?.slice(1, 2)[0];\n    if (flagId) {\n      const flag = vnode.dom.querySelector(`#${flagId}`);\n      if (flag) {\n        flag.scrollIntoView({block: 'center'});\n      }\n    }\n  }\n}\n"]}