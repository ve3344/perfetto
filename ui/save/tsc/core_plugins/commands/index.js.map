{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/core_plugins/commands/index.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2023 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Time, time} from '../../base/time';\nimport {exists} from '../../base/utils';\nimport {openInOldUIWithSizeCheck} from '../../frontend/legacy_trace_viewer';\nimport {Trace} from '../../public/trace';\nimport {App} from '../../public/app';\nimport {PerfettoPlugin} from '../../public/plugin';\nimport {\n  isLegacyTrace,\n  openFileWithLegacyTraceViewer,\n} from '../../frontend/legacy_trace_viewer';\nimport {AppImpl} from '../../core/app_impl';\nimport {addQueryResultsTab} from '../../components/query_table/query_result_tab';\nimport {featureFlags} from '../../core/feature_flags';\n\nconst SQL_STATS = `\nwith first as (select started as ts from sqlstats limit 1)\nselect\n    round((max(ended - started, 0))/1e6) as runtime_ms,\n    round((started - first.ts)/1e6) as t_start_ms,\n    query\nfrom sqlstats, first\norder by started desc`;\n\nconst ALL_PROCESSES_QUERY = 'select name, pid from process order by name;';\n\nconst CPU_TIME_FOR_PROCESSES = `\nselect\n  process.name,\n  sum(dur)/1e9 as cpu_sec\nfrom sched\njoin thread using(utid)\njoin process using(upid)\ngroup by upid\norder by cpu_sec desc\nlimit 100;`;\n\nconst CYCLES_PER_P_STATE_PER_CPU = `\nselect\n  cpu,\n  freq,\n  dur,\n  sum(dur * freq)/1e6 as mcycles\nfrom (\n  select\n    cpu,\n    value as freq,\n    lead(ts) over (partition by cpu order by ts) - ts as dur\n  from counter\n  inner join cpu_counter_track on counter.track_id = cpu_counter_track.id\n  where name = 'cpufreq'\n) group by cpu, freq\norder by mcycles desc limit 32;`;\n\nconst CPU_TIME_BY_CPU_BY_PROCESS = `\nselect\n  process.name as process,\n  thread.name as thread,\n  cpu,\n  sum(dur) / 1e9 as cpu_sec\nfrom sched\ninner join thread using(utid)\ninner join process using(upid)\ngroup by utid, cpu\norder by cpu_sec desc\nlimit 30;`;\n\nconst HEAP_GRAPH_BYTES_PER_TYPE = `\nselect\n  o.upid,\n  o.graph_sample_ts,\n  c.name,\n  sum(o.self_size) as total_self_size\nfrom heap_graph_object o join heap_graph_class c on o.type_id = c.id\ngroup by\n o.upid,\n o.graph_sample_ts,\n c.name\norder by total_self_size desc\nlimit 100;`;\n\nconst SHOW_OPEN_WITH_LEGACY_UI_BUTTON = featureFlags.register({\n  id: 'showOpenWithLegacyUiButton',\n  name: 'Show \"Open with legacy UI\" button',\n  description: 'Show \"Open with legacy UI\" button in the sidebar',\n  defaultValue: false,\n});\n\nexport default class implements PerfettoPlugin {\n  static readonly id = 'perfetto.CoreCommands';\n  static onActivate(ctx: App) {\n    if (ctx.sidebar.enabled) {\n      ctx.commands.registerCommand({\n        id: 'perfetto.CoreCommands#ToggleLeftSidebar',\n        name: 'Toggle left sidebar',\n        callback: () => {\n          ctx.sidebar.toggleVisibility();\n        },\n        defaultHotkey: '!Mod+B',\n      });\n    }\n\n    const input = document.createElement('input');\n    input.classList.add('trace_file');\n    input.setAttribute('type', 'file');\n    input.style.display = 'none';\n    input.addEventListener('change', onInputElementFileSelectionChanged);\n    document.body.appendChild(input);\n\n    const OPEN_TRACE_COMMAND_ID = 'perfetto.CoreCommands#openTrace';\n    ctx.commands.registerCommand({\n      id: OPEN_TRACE_COMMAND_ID,\n      name: 'Open trace file',\n      callback: () => {\n        delete input.dataset['useCatapultLegacyUi'];\n        input.click();\n      },\n      defaultHotkey: '!Mod+O',\n    });\n    ctx.sidebar.addMenuItem({\n      commandId: OPEN_TRACE_COMMAND_ID,\n      section: 'navigation',\n      icon: 'folder_open',\n    });\n\n    const OPEN_LEGACY_COMMAND_ID = 'perfetto.CoreCommands#openTraceInLegacyUi';\n    ctx.commands.registerCommand({\n      id: OPEN_LEGACY_COMMAND_ID,\n      name: 'Open with legacy UI',\n      callback: () => {\n        input.dataset['useCatapultLegacyUi'] = '1';\n        input.click();\n      },\n    });\n    if (SHOW_OPEN_WITH_LEGACY_UI_BUTTON.get()) {\n      ctx.sidebar.addMenuItem({\n        commandId: OPEN_LEGACY_COMMAND_ID,\n        section: 'navigation',\n        icon: 'filter_none',\n      });\n    }\n  }\n\n  async onTraceLoad(ctx: Trace): Promise<void> {\n    ctx.commands.registerCommand({\n      id: 'perfetto.CoreCommands#RunQueryAllProcesses',\n      name: 'Run query: All processes',\n      callback: () => {\n        addQueryResultsTab(ctx, {\n          query: ALL_PROCESSES_QUERY,\n          title: 'All Processes',\n        });\n      },\n    });\n\n    ctx.commands.registerCommand({\n      id: 'perfetto.CoreCommands#RunQueryCpuTimeByProcess',\n      name: 'Run query: CPU time by process',\n      callback: () => {\n        addQueryResultsTab(ctx, {\n          query: CPU_TIME_FOR_PROCESSES,\n          title: 'CPU time by process',\n        });\n      },\n    });\n\n    ctx.commands.registerCommand({\n      id: 'perfetto.CoreCommands#RunQueryCyclesByStateByCpu',\n      name: 'Run query: cycles by p-state by CPU',\n      callback: () => {\n        addQueryResultsTab(ctx, {\n          query: CYCLES_PER_P_STATE_PER_CPU,\n          title: 'Cycles by p-state by CPU',\n        });\n      },\n    });\n\n    ctx.commands.registerCommand({\n      id: 'perfetto.CoreCommands#RunQueryCyclesByCpuByProcess',\n      name: 'Run query: CPU Time by CPU by process',\n      callback: () => {\n        addQueryResultsTab(ctx, {\n          query: CPU_TIME_BY_CPU_BY_PROCESS,\n          title: 'CPU time by CPU by process',\n        });\n      },\n    });\n\n    ctx.commands.registerCommand({\n      id: 'perfetto.CoreCommands#RunQueryHeapGraphBytesPerType',\n      name: 'Run query: heap graph bytes per type',\n      callback: () => {\n        addQueryResultsTab(ctx, {\n          query: HEAP_GRAPH_BYTES_PER_TYPE,\n          title: 'Heap graph bytes per type',\n        });\n      },\n    });\n\n    ctx.commands.registerCommand({\n      id: 'perfetto.CoreCommands#DebugSqlPerformance',\n      name: 'Debug SQL performance',\n      callback: () => {\n        addQueryResultsTab(ctx, {\n          query: SQL_STATS,\n          title: 'Recent SQL queries',\n        });\n      },\n    });\n\n    ctx.commands.registerCommand({\n      id: 'perfetto.CoreCommands#UnpinAllTracks',\n      name: 'Unpin all pinned tracks',\n      callback: () => {\n        const workspace = ctx.workspace;\n        workspace.pinnedTracks.forEach((t) => workspace.unpinTrack(t));\n      },\n    });\n\n    ctx.commands.registerCommand({\n      id: 'perfetto.CoreCommands#ExpandAllGroups',\n      name: 'Expand all track groups',\n      callback: () => {\n        ctx.workspace.flatTracks.forEach((track) => track.expand());\n      },\n    });\n\n    ctx.commands.registerCommand({\n      id: 'perfetto.CoreCommands#CollapseAllGroups',\n      name: 'Collapse all track groups',\n      callback: () => {\n        ctx.workspace.flatTracks.forEach((track) => track.collapse());\n      },\n    });\n\n    ctx.commands.registerCommand({\n      id: 'perfetto.CoreCommands#PanToTimestamp',\n      name: 'Pan to timestamp',\n      callback: (tsRaw: unknown) => {\n        if (exists(tsRaw)) {\n          if (typeof tsRaw !== 'bigint') {\n            throw Error(`${tsRaw} is not a bigint`);\n          }\n          ctx.timeline.panToTimestamp(Time.fromRaw(tsRaw));\n        } else {\n          // No args passed, probably run from the command palette.\n          const ts = promptForTimestamp('Enter a timestamp');\n          if (exists(ts)) {\n            ctx.timeline.panToTimestamp(Time.fromRaw(ts));\n          }\n        }\n      },\n    });\n\n    ctx.commands.registerCommand({\n      id: 'perfetto.CoreCommands#ShowCurrentSelectionTab',\n      name: 'Show current selection tab',\n      callback: () => {\n        ctx.tabs.showTab('current_selection');\n      },\n    });\n\n    ctx.commands.registerCommand({\n      id: 'createNewEmptyWorkspace',\n      name: 'Create new empty workspace',\n      callback: async () => {\n        const workspaces = AppImpl.instance.trace?.workspaces;\n        if (workspaces === undefined) return; // No trace loaded.\n        const name = await ctx.omnibox.prompt('Give it a name...');\n        if (name === undefined || name === '') return;\n        workspaces.switchWorkspace(workspaces.createEmptyWorkspace(name));\n      },\n    });\n\n    ctx.commands.registerCommand({\n      id: 'switchWorkspace',\n      name: 'Switch workspace',\n      callback: async () => {\n        const workspaces = AppImpl.instance.trace?.workspaces;\n        if (workspaces === undefined) return; // No trace loaded.\n        const workspace = await ctx.omnibox.prompt('Choose a workspace...', {\n          values: workspaces.all,\n          getName: (ws) => ws.title,\n        });\n        if (workspace) {\n          workspaces.switchWorkspace(workspace);\n        }\n      },\n    });\n  }\n}\n\nfunction promptForTimestamp(message: string): time | undefined {\n  const tsStr = window.prompt(message);\n  if (tsStr !== null) {\n    try {\n      return Time.fromRaw(BigInt(tsStr));\n    } catch {\n      window.alert(`${tsStr} is not an integer`);\n    }\n  }\n  return undefined;\n}\n\nfunction onInputElementFileSelectionChanged(e: Event) {\n  if (!(e.target instanceof HTMLInputElement)) {\n    throw new Error('Not an input element');\n  }\n  if (!e.target.files) return;\n  const file = e.target.files[0];\n  // Reset the value so onchange will be fired with the same file.\n  e.target.value = '';\n\n  if (e.target.dataset['useCatapultLegacyUi'] === '1') {\n    openWithLegacyUi(file);\n    return;\n  }\n\n  AppImpl.instance.analytics.logEvent('Trace Actions', 'Open trace from file');\n  AppImpl.instance.openTraceFromFile(file);\n}\n\nasync function openWithLegacyUi(file: File) {\n  // Switch back to the old catapult UI.\n  AppImpl.instance.analytics.logEvent(\n    'Trace Actions',\n    'Open trace in Legacy UI',\n  );\n  if (await isLegacyTrace(file)) {\n    return await openFileWithLegacyTraceViewer(file);\n  }\n  return await openInOldUIWithSizeCheck(file);\n}\n"]}