{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/core_plugins/track_utils/index.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAEjC,gEAAuD;AAGvD,kDAA4C;AAC5C,8CAAyE;AACzE,4CAAuD;AACvD,qEAAuE;AAGvE;IACE,MAAM,CAAU,EAAE,GAAG,qBAAqB,CAAC;IAC3C,KAAK,CAAC,WAAW,CAAC,GAAU;QAC1B,GAAG,CAAC,QAAQ,CAAC,eAAe,CAAC;YAC3B,EAAE,EAAE,uCAAuC;YAC3C,IAAI,EAAE,mCAAmC;YACzC,QAAQ,EAAE,KAAK,IAAI,EAAE;gBACnB,MAAM,MAAM,GAAG,MAAM,IAAA,6CAAqC,EAAC,GAAG,CAAC,CAAC;gBAChE,MAAM,OAAO,GAAG,kBAAO,CAAC,QAAQ,CAAC,OAAO,CAAC;gBACzC,OAAO,CAAC,OAAO,CAAC,6BAAW,CAAC,KAAK,CAAC,CAAC;gBACnC,OAAO,CAAC,OAAO,CACb,uBAAuB,MAAM,CAAC,KAAK,aAAa,MAAM,CAAC,GAAG,EAAE,CAC7D,CAAC;gBACF,OAAO,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC;YAC1C,CAAC;SACF,CAAC,CAAC;QAEH,GAAG,CAAC,QAAQ,CAAC,eAAe,CAAC;YAC3B,EAAE,EAAE,0BAA0B;YAC9B,IAAI,EAAE,oBAAoB;YAC1B,QAAQ,EAAE,KAAK,IAAI,EAAE;gBACnB,MAAM,cAAc,GAAG,GAAG,CAAC,SAAS,CAAC,iBAAiB,CAAC,MAAM,CAC3D,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,GAAG,KAAK,SAAS,CACe,CAAC;gBACpD,MAAM,KAAK,GAAG,MAAM,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,mBAAmB,EAAE;oBAC1D,MAAM,EAAE,cAAc;oBACtB,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,KAAK;iBAChC,CAAC,CAAC;gBACH,KAAK;oBACH,GAAG,CAAC,SAAS,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,EAAE;wBACnC,iBAAiB,EAAE,IAAI;qBACxB,CAAC,CAAC;YACP,CAAC;SACF,CAAC,CAAC;QAEH,GAAG,CAAC,QAAQ,CAAC,eAAe,CAAC;YAC3B,EAAE,EAAE,yBAAyB;YAC7B,IAAI,EAAE,mBAAmB;YACzB,QAAQ,EAAE,KAAK,IAAI,EAAE;gBACnB,MAAM,cAAc,GAAG,GAAG,CAAC,SAAS,CAAC,iBAAiB,CAAC,MAAM,CAC3D,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,GAAG,KAAK,SAAS,CACe,CAAC;gBACpD,MAAM,KAAK,GAAG,MAAM,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,mBAAmB,EAAE;oBAC1D,MAAM,EAAE,cAAc;oBACtB,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,GAAG;iBAC9B,CAAC,CAAC;gBACH,KAAK;oBACH,GAAG,CAAC,SAAS,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,EAAE;wBACnC,iBAAiB,EAAE,IAAI;qBACxB,CAAC,CAAC;YACP,CAAC;SACF,CAAC,CAAC;QAEH,GAAG,CAAC,QAAQ,CAAC,eAAe,CAAC;YAC3B,EAAE,EAAE,yBAAyB;YAC7B,IAAI,EAAE,mBAAmB;YACzB,QAAQ,EAAE,KAAK,IAAI,EAAE;gBACnB,MAAM,cAAc,GAAG,GAAG,CAAC,SAAS,CAAC,iBAAiB,CAAC,MAAM,CAC3D,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,GAAG,KAAK,SAAS,CACe,CAAC;gBACpD,MAAM,KAAK,GAAG,MAAM,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,mBAAmB,EAAE;oBAC1D,MAAM,EAAE,cAAc;oBACtB,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,KAAK;iBAChC,CAAC,CAAC;gBACH,KAAK,IAAI,KAAK,CAAC,GAAG,EAAE,CAAC;YACvB,CAAC;SACF,CAAC,CAAC;QAEH,GAAG,CAAC,QAAQ,CAAC,eAAe,CAAC;YAC3B,EAAE,EAAE,+BAA+B;YACnC,IAAI,EAAE,yBAAyB;YAC/B,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,KAAK,IAAI,EAAE;gBACnB,MAAM,wBAAwB,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;YAC9C,CAAC;SACF,CAAC,CAAC;QAEH,GAAG,CAAC,QAAQ,CAAC,eAAe,CAAC;YAC3B,EAAE,EAAE,mCAAmC;YACvC,IAAI,EAAE,6BAA6B;YACnC,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,KAAK,IAAI,EAAE;gBACnB,MAAM,wBAAwB,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;YAC9C,CAAC;SACF,CAAC,CAAC;IACL,CAAC;;AArFH,4BAsFC;AAED;;;GAGG;AACH,KAAK,UAAU,wBAAwB,CACrC,GAAU,EACV,SAA0B;IAE1B,MAAM,SAAS,GAAG,GAAG,CAAC,SAAS,CAAC,SAAS,CAAC;IAC1C,IAAI,SAAS,CAAC,IAAI,KAAK,aAAa;QAAE,OAAO;IAE7C,MAAM,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;IACnD,MAAM,OAAO,GAAG,EAAE,EAAE,KAAK,CAAC,UAAU,EAAE,EAAE,CAAC;IACzC,IAAI,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAC,EAAE,EAAE,kBAAG,EAAE,EAAE,EAAE,mBAAI,EAAC,CAAC;QAAE,OAAO;IAEjE,MAAM,UAAU,GAAG,SAAS,KAAK,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC;IACzD,MAAM,MAAM,GAAG,MAAM,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC;;;;;cAK1B,UAAU;kBACN,OAAO,CAAC,KAAK,EAAE;;qCAEI,SAAS,CAAC,OAAO;KACjD,CAAC,CAAC;IACL,MAAM,QAAQ,GAAG,MAAM,CAAC,aAAa,CAAC,EAAC,QAAQ,EAAE,uBAAQ,EAAC,CAAC,EAAE,QAAQ,CAAC;IACtE,IAAI,CAAC,IAAA,cAAM,EAAC,QAAQ,CAAC;QAAE,OAAO;IAE9B,GAAG,CAAC,SAAS,CAAC,gBAAgB,CAAC,SAAS,CAAC,QAAQ,EAAE,QAAQ,EAAE;QAC3D,iBAAiB,EAAE,IAAI;KACxB,CAAC,CAAC;AACL,CAAC","sourcesContent":["// Copyright (C) 2024 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {OmniboxMode} from '../../core/omnibox_manager';\nimport {Trace} from '../../public/trace';\nimport {PerfettoPlugin} from '../../public/plugin';\nimport {AppImpl} from '../../core/app_impl';\nimport {getTimeSpanOfSelectionOrVisibleWindow} from '../../public/utils';\nimport {exists, RequiredField} from '../../base/utils';\nimport {LONG, NUM, NUM_NULL} from '../../trace_processor/query_result';\nimport {TrackNode} from '../../public/workspace';\n\nexport default class implements PerfettoPlugin {\n  static readonly id = 'perfetto.TrackUtils';\n  async onTraceLoad(ctx: Trace): Promise<void> {\n    ctx.commands.registerCommand({\n      id: 'perfetto.RunQueryInSelectedTimeWindow',\n      name: `Run query in selected time window`,\n      callback: async () => {\n        const window = await getTimeSpanOfSelectionOrVisibleWindow(ctx);\n        const omnibox = AppImpl.instance.omnibox;\n        omnibox.setMode(OmniboxMode.Query);\n        omnibox.setText(\n          `select  where ts >= ${window.start} and ts < ${window.end}`,\n        );\n        omnibox.focus(/* cursorPlacement= */ 7);\n      },\n    });\n\n    ctx.commands.registerCommand({\n      id: 'perfetto.FindTrackByName',\n      name: 'Find track by name',\n      callback: async () => {\n        const tracksWithUris = ctx.workspace.flatTracksOrdered.filter(\n          (track) => track.uri !== undefined,\n        ) as ReadonlyArray<RequiredField<TrackNode, 'uri'>>;\n        const track = await ctx.omnibox.prompt('Choose a track...', {\n          values: tracksWithUris,\n          getName: (track) => track.title,\n        });\n        track &&\n          ctx.selection.selectTrack(track.uri, {\n            scrollToSelection: true,\n          });\n      },\n    });\n\n    ctx.commands.registerCommand({\n      id: 'perfetto.FindTrackByUri',\n      name: 'Find track by URI',\n      callback: async () => {\n        const tracksWithUris = ctx.workspace.flatTracksOrdered.filter(\n          (track) => track.uri !== undefined,\n        ) as ReadonlyArray<RequiredField<TrackNode, 'uri'>>;\n        const track = await ctx.omnibox.prompt('Choose a track...', {\n          values: tracksWithUris,\n          getName: (track) => track.uri,\n        });\n        track &&\n          ctx.selection.selectTrack(track.uri, {\n            scrollToSelection: true,\n          });\n      },\n    });\n\n    ctx.commands.registerCommand({\n      id: 'perfetto.PinTrackByName',\n      name: 'Pin track by name',\n      callback: async () => {\n        const tracksWithUris = ctx.workspace.flatTracksOrdered.filter(\n          (track) => track.uri !== undefined,\n        ) as ReadonlyArray<RequiredField<TrackNode, 'uri'>>;\n        const track = await ctx.omnibox.prompt('Choose a track...', {\n          values: tracksWithUris,\n          getName: (track) => track.title,\n        });\n        track && track.pin();\n      },\n    });\n\n    ctx.commands.registerCommand({\n      id: 'perfetto.SelectNextTrackEvent',\n      name: 'Select next track event',\n      defaultHotkey: '.',\n      callback: async () => {\n        await selectAdjacentTrackEvent(ctx, 'next');\n      },\n    });\n\n    ctx.commands.registerCommand({\n      id: 'perfetto.SelectPreviousTrackEvent',\n      name: 'Select previous track event',\n      defaultHotkey: ',',\n      callback: async () => {\n        await selectAdjacentTrackEvent(ctx, 'prev');\n      },\n    });\n  }\n}\n\n/**\n * If a track event is currently selected, select the next or previous event on\n * that same track chronologically ordered by `ts`.\n */\nasync function selectAdjacentTrackEvent(\n  ctx: Trace,\n  direction: 'next' | 'prev',\n) {\n  const selection = ctx.selection.selection;\n  if (selection.kind !== 'track_event') return;\n\n  const td = ctx.tracks.getTrack(selection.trackUri);\n  const dataset = td?.track.getDataset?.();\n  if (!dataset || !dataset.implements({id: NUM, ts: LONG})) return;\n\n  const windowFunc = direction === 'next' ? 'LEAD' : 'LAG';\n  const result = await ctx.engine.query(`\n      WITH\n        CTE AS (\n          SELECT\n            id,\n            ${windowFunc}(id) OVER (ORDER BY ts) AS resultId\n          FROM (${dataset.query()})\n        )\n      SELECT * FROM CTE WHERE id = ${selection.eventId}\n    `);\n  const resultId = result.maybeFirstRow({resultId: NUM_NULL})?.resultId;\n  if (!exists(resultId)) return;\n\n  ctx.selection.selectTrackEvent(selection.trackUri, resultId, {\n    scrollToSelection: true,\n  });\n}\n"]}