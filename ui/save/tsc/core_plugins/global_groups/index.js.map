{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/core_plugins/global_groups/index.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (C) 2024 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {PerfettoPlugin} from '../../public/plugin';\nimport {Trace} from '../../public/trace';\nimport {TrackNode} from '../../public/workspace';\n\nconst MEM_DMA_COUNTER_NAME = 'mem.dma_heap';\nconst MEM_DMA = 'mem.dma_buffer';\nconst MEM_ION = 'mem.ion';\nconst F2FS_IOSTAT_TAG = 'f2fs_iostat.';\nconst F2FS_IOSTAT_GROUP_NAME = 'f2fs_iostat';\nconst F2FS_IOSTAT_LAT_TAG = 'f2fs_iostat_latency.';\nconst F2FS_IOSTAT_LAT_GROUP_NAME = 'f2fs_iostat_latency';\nconst DISK_IOSTAT_TAG = 'diskstat.';\nconst DISK_IOSTAT_GROUP_NAME = 'diskstat';\nconst BUDDY_INFO_TAG = 'mem.buddyinfo';\nconst UFS_CMD_TAG_REGEX = new RegExp('^io.ufs.command.tag.*$');\nconst UFS_CMD_TAG_GROUP = 'io.ufs.command.tags';\n// NB: Userspace wakelocks start with \"WakeLock\" not \"Wakelock\".\nconst KERNEL_WAKELOCK_REGEX = new RegExp('^Wakelock.*$');\nconst KERNEL_WAKELOCK_GROUP = 'Kernel wakelocks';\nconst NETWORK_TRACK_REGEX = new RegExp('^.* (Received|Transmitted)( KB)?$');\nconst NETWORK_TRACK_GROUP = 'Networking';\nconst ENTITY_RESIDENCY_REGEX = new RegExp('^Entity residency:');\nconst ENTITY_RESIDENCY_GROUP = 'Entity residency';\nconst UCLAMP_REGEX = new RegExp('^UCLAMP_');\nconst UCLAMP_GROUP = 'Scheduler Utilization Clamping';\nconst POWER_RAILS_GROUP = 'Power Rails';\nconst POWER_RAILS_REGEX = new RegExp('^power.');\nconst FREQUENCY_GROUP = 'Frequency Scaling';\nconst TEMPERATURE_REGEX = new RegExp('^.* Temperature$');\nconst TEMPERATURE_GROUP = 'Temperature';\nconst IRQ_GROUP = 'IRQs';\nconst IRQ_REGEX = new RegExp('^(Irq|SoftIrq) Cpu.*');\nconst CHROME_TRACK_REGEX = new RegExp('^Chrome.*|^InputLatency::.*');\nconst CHROME_TRACK_GROUP = 'Chrome Global Tracks';\nconst MISC_GROUP = 'Misc Global Tracks';\n\n// This plugin is responsible for organizing all the global tracks.\nexport default class implements PerfettoPlugin {\n  static readonly id = 'perfetto.GlobalGroups';\n  async onTraceLoad(trace: Trace): Promise<void> {\n    trace.onTraceReady.addListener(() => {\n      groupGlobalIonTracks(trace);\n      groupGlobalIostatTracks(trace, F2FS_IOSTAT_TAG, F2FS_IOSTAT_GROUP_NAME);\n      groupGlobalIostatTracks(\n        trace,\n        F2FS_IOSTAT_LAT_TAG,\n        F2FS_IOSTAT_LAT_GROUP_NAME,\n      );\n      groupGlobalIostatTracks(trace, DISK_IOSTAT_TAG, DISK_IOSTAT_GROUP_NAME);\n      groupTracksByRegex(trace, UFS_CMD_TAG_REGEX, UFS_CMD_TAG_GROUP);\n      groupGlobalBuddyInfoTracks(trace);\n      groupTracksByRegex(trace, KERNEL_WAKELOCK_REGEX, KERNEL_WAKELOCK_GROUP);\n      groupTracksByRegex(trace, NETWORK_TRACK_REGEX, NETWORK_TRACK_GROUP);\n      groupTracksByRegex(trace, ENTITY_RESIDENCY_REGEX, ENTITY_RESIDENCY_GROUP);\n      groupTracksByRegex(trace, UCLAMP_REGEX, UCLAMP_GROUP);\n      groupFrequencyTracks(trace, FREQUENCY_GROUP);\n      groupTracksByRegex(trace, POWER_RAILS_REGEX, POWER_RAILS_GROUP);\n      groupTracksByRegex(trace, TEMPERATURE_REGEX, TEMPERATURE_GROUP);\n      groupTracksByRegex(trace, IRQ_REGEX, IRQ_GROUP);\n      groupTracksByRegex(trace, CHROME_TRACK_REGEX, CHROME_TRACK_GROUP);\n      groupMiscNonAllowlistedTracks(trace, MISC_GROUP);\n\n      // Move groups underneath tracks\n      Array.from(trace.workspace.children)\n        .sort((a, b) => {\n          // Get the index in the order array\n          const indexA = a.hasChildren ? 1 : 0;\n          const indexB = b.hasChildren ? 1 : 0;\n          return indexA - indexB;\n        })\n        .forEach((n) => trace.workspace.addChildLast(n));\n\n      // If there is only one group, expand it\n      const rootLevelChildren = trace.workspace.children;\n      if (rootLevelChildren.length === 1 && rootLevelChildren[0].hasChildren) {\n        rootLevelChildren[0].expand();\n      }\n    });\n  }\n}\n\nfunction groupGlobalIonTracks(trace: Trace): void {\n  const ionTracks: TrackNode[] = [];\n  let hasSummary = false;\n\n  for (const track of trace.workspace.children) {\n    if (track.hasChildren) continue;\n\n    const isIon = track.title.startsWith(MEM_ION);\n    const isIonCounter = track.title === MEM_ION;\n    const isDmaHeapCounter = track.title === MEM_DMA_COUNTER_NAME;\n    const isDmaBuffferSlices = track.title === MEM_DMA;\n    if (isIon || isIonCounter || isDmaHeapCounter || isDmaBuffferSlices) {\n      ionTracks.push(track);\n    }\n    hasSummary = hasSummary || isIonCounter;\n    hasSummary = hasSummary || isDmaHeapCounter;\n  }\n\n  if (ionTracks.length === 0 || !hasSummary) {\n    return;\n  }\n\n  const tracksToAddToGroup: TrackNode[] = [];\n  let memGroupNode: TrackNode | undefined;\n  for (const track of ionTracks) {\n    if (\n      !memGroupNode &&\n      [MEM_DMA_COUNTER_NAME, MEM_ION].includes(track.title)\n    ) {\n      // Create a new group that copies the details from this track\n      memGroupNode = new TrackNode({\n        uri: track.uri,\n        title: track.title,\n        isSummary: true,\n      });\n      // Remove it from the workspace as we're going to add the group later\n      track.remove();\n    } else {\n      tracksToAddToGroup.push(track);\n    }\n  }\n\n  if (memGroupNode) {\n    tracksToAddToGroup.forEach((t) => memGroupNode.addChildInOrder(t));\n    trace.workspace.addChildInOrder(memGroupNode);\n  }\n}\n\nfunction groupGlobalIostatTracks(\n  trace: Trace,\n  tag: string,\n  groupName: string,\n): void {\n  const devMap = new Map<string, TrackNode>();\n\n  for (const track of trace.workspace.children) {\n    if (track.hasChildren) continue;\n    if (track.title.startsWith(tag)) {\n      const name = track.title.split('.', 3);\n      const key = name[1];\n\n      let parentGroup = devMap.get(key);\n      if (!parentGroup) {\n        const group = new TrackNode({title: groupName, isSummary: true});\n        trace.workspace.addChildInOrder(group);\n        devMap.set(key, group);\n        parentGroup = group;\n      }\n\n      track.title = name[2];\n      parentGroup.addChildInOrder(track);\n    }\n  }\n}\n\nfunction groupGlobalBuddyInfoTracks(trace: Trace): void {\n  const devMap = new Map<string, TrackNode>();\n\n  for (const track of trace.workspace.children) {\n    if (track.hasChildren) continue;\n    if (track.title.startsWith(BUDDY_INFO_TAG)) {\n      const tokens = track.title.split('[');\n      const node = tokens[1].slice(0, -1);\n      const zone = tokens[2].slice(0, -1);\n      const size = tokens[3].slice(0, -1);\n\n      const groupName = 'Buddyinfo:  Node: ' + node + ' Zone: ' + zone;\n      if (!devMap.has(groupName)) {\n        const group = new TrackNode({title: groupName, isSummary: true});\n        devMap.set(groupName, group);\n        trace.workspace.addChildInOrder(group);\n      }\n      track.title = 'Chunk size: ' + size;\n      const group = devMap.get(groupName)!;\n      group.addChildInOrder(track);\n    }\n  }\n}\n\nfunction groupFrequencyTracks(trace: Trace, groupName: string): void {\n  const group = new TrackNode({title: groupName, isSummary: true});\n\n  for (const track of trace.workspace.children) {\n    if (track.hasChildren) continue;\n    // Group all the frequency tracks together (except the CPU and GPU\n    // frequency ones).\n    if (\n      track.title.endsWith('Frequency') &&\n      !track.title.startsWith('Cpu') &&\n      !track.title.startsWith('Gpu')\n    ) {\n      group.addChildInOrder(track);\n    }\n  }\n\n  if (group.children.length > 0) {\n    trace.workspace.addChildInOrder(group);\n  }\n}\n\nfunction groupMiscNonAllowlistedTracks(trace: Trace, groupName: string): void {\n  // List of allowlisted track names.\n  const ALLOWLIST_REGEXES = [\n    new RegExp('^Cpu .*$', 'i'),\n    new RegExp('^Gpu .*$', 'i'),\n    new RegExp('^Trace Triggers$'),\n    new RegExp('^Android App Startups$'),\n    new RegExp('^Device State.*$'),\n    new RegExp('^Android logs$'),\n  ];\n\n  const group = new TrackNode({title: groupName, isSummary: true});\n  for (const track of trace.workspace.children) {\n    if (track.hasChildren) continue;\n    let allowlisted = false;\n    for (const regex of ALLOWLIST_REGEXES) {\n      allowlisted = allowlisted || regex.test(track.title);\n    }\n    if (allowlisted) {\n      continue;\n    }\n    group.addChildInOrder(track);\n  }\n\n  if (group.children.length > 0) {\n    trace.workspace.addChildInOrder(group);\n  }\n}\n\nfunction groupTracksByRegex(\n  trace: Trace,\n  regex: RegExp,\n  groupName: string,\n): void {\n  const group = new TrackNode({title: groupName, isSummary: true});\n\n  for (const track of trace.workspace.children) {\n    if (track.hasChildren) continue;\n    if (regex.test(track.title)) {\n      group.addChildInOrder(track);\n    }\n  }\n\n  if (group.children.length > 0) {\n    trace.workspace.addChildInOrder(group);\n  }\n}\n"]}